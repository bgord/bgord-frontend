{"version":3,"file":"bgord-frontend.modern.js","sources":["../server-error.ts","../api.ts","../durations.ts","../hooks/use-field.ts","../hooks/use-audio.ts","../hooks/use-autofocus.ts","../safe-window.ts","../hooks/use-window-dimensions.ts","../hooks/use-breakpoint.ts","../hooks/use-click-outside.ts","../hooks/use-previous-value.ts","../noop.ts","../hooks/use-client-filter.ts","../hooks/use-client-search.ts","../hooks/use-client-sort.ts","../time.ts","../hooks/use-current-timestamp.ts","../hooks/use-debounce.ts","../hooks/use-toggle.ts","../hooks/use-delayed-loader.ts","../hooks/use-design-mode.ts","../hooks/use-disable-pull-to-refresh.ts","../hooks/use-document-title.ts","../hooks/use-expandable-list.ts","../hooks/use-file.ts","../hooks/use-keyboard-shortcuts.ts","../hooks/use-focus-keyboard-shortcut.ts","../hooks/use-hover.ts","../get-image-resolution.ts","../hooks/use-image-file-resolution.ts","../hooks/use-is-online.ts","../hooks/use-is-visible.ts","../hooks/use-item.ts","../hooks/use-keyboard-handler.ts","../pluralize.ts","../translations.tsx","../hooks/use-language-selector.ts","../hooks/use-leaving-prompt.ts","../hooks/use-list.ts","../hooks/use-meta-enter-submit.ts","../hooks/use-pagination.ts","../safe-local-storage.ts","../hooks/use-persistent-toggle.ts","../rate-limiter.ts","../hooks/use-rate-limiter.ts","../hooks/use-scroll.ts","../hooks/use-scroll-lock.ts","../hooks/use-sound.ts","../hooks/use-url-filter.ts","../hooks/use-video.ts","../components/dialog.tsx","../components/offline-indicator.tsx","../components/outbound-link.tsx","../exec.ts","../components/dev-tools.tsx","../components/switch.tsx","../copy-to-clipboard.ts","../dates.ts","../etag.ts","../feature-flags.tsx","../filter-url.ts","../form.ts","../is-client.ts","../line-clamp.ts","../min-max-scaler.ts","../pagination.ts","../reordering.ts","../rhythm.ts","../sorts.ts","../thousands-separator.ts","../toasts.tsx"],"sourcesContent":["export type ServerErrorConfigType = {\n  message: string;\n};\n\nexport class ServerError {\n  message: ServerErrorConfigType[\"message\"];\n\n  _known = true;\n\n  constructor(config: ServerErrorConfigType) {\n    this.message = config.message;\n  }\n\n  static isServerError(value: unknown): value is ServerError {\n    if (\n      value &&\n      typeof value === \"object\" &&\n      value === Object(value) &&\n      // biome-ignore lint: lint/suspicious/noPrototypeBuiltins\n      value.hasOwnProperty(\"_known\") &&\n      // biome-ignore lint: lint/suspicious/noPrototypeBuiltins\n      value.hasOwnProperty(\"message\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  static async extract(response: Response) {\n    if (response.ok) return response;\n\n    const error = await response.json();\n\n    const message = ServerError.isServerError(error)\n      ? error.message\n      : \"app.error.general\";\n\n    throw new ServerError({ message });\n  }\n\n  static async handle(payload: unknown): Promise<Response> {\n    throw new ServerError({\n      message: ServerError.isServerError(payload)\n        ? payload.message\n        : \"app.error.general\",\n    });\n  }\n}\n","import { ServerError } from \"./server-error\";\n\nexport const API: typeof fetch = (input, init) =>\n  fetch(input, {\n    mode: \"same-origin\",\n    redirect: \"follow\",\n    ...init,\n    headers: {\n      \"Content-Type\": \"application/json\",\n\n      \"time-zone-offset\": new Date().getTimezoneOffset().toString(),\n      ...init?.headers,\n    },\n  })\n    .then(ServerError.extract)\n    .catch(ServerError.handle);\n","export class DurationFormatter {\n  static format(duration: number) {\n    const minutes = Math.floor(duration / 60);\n    const seconds = duration % 60;\n\n    const formattedMinutes = String(minutes).padStart(2, \"0\");\n    const formattedSeconds = String(seconds).padStart(2, \"0\");\n\n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n","import { useEffect, useState, Dispatch, SetStateAction } from \"react\";\n\nexport type UseFieldDefaultValueType<T> = T | (() => T);\nexport type UseFieldNameType = string;\n\nexport type UseFieldReturnType<T> = {\n  value: T;\n  set: Dispatch<SetStateAction<T>>;\n  clear: VoidFunction;\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  label: { props: { htmlFor: UseFieldNameType } };\n  input: { props: { id: UseFieldNameType; name: UseFieldNameType } };\n  changed: boolean;\n  unchanged: boolean;\n};\n\nexport function useField<T>(\n  name: UseFieldNameType,\n  defaultValue: UseFieldDefaultValueType<T>\n): UseFieldReturnType<T> {\n  const evaluatedDefaultValue =\n    // @ts-ignore\n    typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n\n  const [value, setValue] = useState(evaluatedDefaultValue);\n\n  useEffect(() => setValue(evaluatedDefaultValue), [evaluatedDefaultValue]);\n\n  return {\n    value,\n    set: setValue,\n    handleChange: (event: React.ChangeEvent<HTMLInputElement>) =>\n      setValue(event.currentTarget.value),\n    clear: () => setValue(evaluatedDefaultValue),\n    label: { props: { htmlFor: name } },\n    input: { props: { id: name, name: name } },\n    changed: value !== evaluatedDefaultValue,\n    unchanged: value === evaluatedDefaultValue,\n  };\n}\n\nexport function extractUseField<T, X>(\n  props: UseFieldReturnType<T> & X\n): { field: UseFieldReturnType<T>; rest: X } {\n  // prettier-ignore\n  const { value, set, clear, label, input, changed, unchanged, handleChange, ...rest } = props;\n\n  // prettier-ignore\n  return {\n    field: { value, set, clear, label, input, changed, unchanged, handleChange },\n    rest: rest as X,\n  };\n}\n\nexport class Fields {\n  static allUnchanged(fields: { unchanged: boolean }[]): boolean {\n    return fields.every((field) => field.unchanged);\n  }\n\n  static anyUnchanged(fields: { unchanged: boolean }[]): boolean {\n    return fields.some((field) => field.unchanged);\n  }\n\n  static anyChanged(fields: { changed: boolean }[]): boolean {\n    return fields.some((field) => field.changed);\n  }\n\n  static clearAll(fields: { clear: VoidFunction }[]) {\n    return () => {\n      for (const field of fields) {\n        field.clear();\n      }\n    };\n  }\n}\n","import * as React from \"react\";\n\nimport { DurationFormatter } from \"../durations\";\nimport { useField } from \"./use-field\";\n\nexport type UseAudioSrcType = string;\n\ntype AudioDurationType = number;\ntype AudioCurrentTimeType = number;\ntype AudioVolumeType = number;\n\nexport const AUDIO_DEFAULT_VOLUME: AudioVolumeType = 1;\n\nexport enum UseAudioState {\n  initial = \"initial\",\n  ready = \"ready\",\n  playing = \"playing\",\n  paused = \"paused\",\n}\n\nexport type UseAudioReturnType = {\n  props: {\n    audio: {\n      src: UseAudioSrcType;\n      onTimeUpdate: (event: Event) => void;\n      onLoadedMetadata: (event: Event) => void;\n      onEnded: (event: Event) => void;\n      controls: false;\n    };\n    player: {\n      min: 0;\n      step: 1;\n      max: AudioDurationType;\n      value: AudioDurationType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n    volume: {\n      min: 0;\n      max: 1;\n      step: 0.01;\n      value: AudioVolumeType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n  };\n  actions: {\n    play: VoidFunction;\n    pause: VoidFunction;\n    mute: VoidFunction;\n    unmute: VoidFunction;\n    reset: VoidFunction;\n    seek: (event: Event) => void;\n    changeVolume: (event: Event) => void;\n  };\n\n  meta: {\n    state: UseAudioState;\n    isInitial: boolean;\n    isReady: boolean;\n    isPlaying: boolean;\n    isPaused: boolean;\n    matches: (states: UseAudioState[]) => boolean;\n    percentage: {\n      raw: number;\n      formatted: string;\n    };\n    currentTime: {\n      raw: AudioCurrentTimeType;\n      formatted: string;\n    };\n    duration: {\n      raw: AudioDurationType;\n      formatted: string;\n    };\n    volume: {\n      value: AudioVolumeType;\n      raw: number;\n      formatted: string;\n    };\n    muted: boolean;\n  };\n};\n\nexport function useAudio(src: UseAudioSrcType): UseAudioReturnType {\n  const [state, setState] = React.useState<UseAudioState>(\n    UseAudioState.initial\n  );\n\n  const ref = React.useRef<HTMLAudioElement | null>(null);\n\n  const duration = useField<AudioDurationType>(\"duration\", 0);\n  const currentTime = useField<AudioCurrentTimeType>(\"currentTime\", 0);\n  const volume = useField<AudioVolumeType>(\"volume\", AUDIO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (ref.current) {\n      ref.current.play();\n      setState(UseAudioState.playing);\n    }\n  }\n\n  function pause() {\n    if (ref.current) {\n      ref.current.pause();\n      setState(UseAudioState.paused);\n    }\n  }\n\n  function reset() {\n    if (ref.current) {\n      ref.current.currentTime = 0;\n      ref.current.pause();\n      currentTime.set(0);\n      setState(UseAudioState.paused);\n    }\n  }\n\n  function mute() {\n    if (ref.current) {\n      ref.current.volume = 0;\n      volume.set(0);\n    }\n  }\n\n  function unmute() {\n    if (ref.current) {\n      ref.current.volume = AUDIO_DEFAULT_VOLUME;\n      volume.set(AUDIO_DEFAULT_VOLUME);\n    }\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.currentTime = target.valueAsNumber;\n      currentTime.set(target.valueAsNumber);\n    }\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLAudioElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(UseAudioState.ready);\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLAudioElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(UseAudioState.paused);\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.volume = target.valueAsNumber;\n      volume.set(target.valueAsNumber);\n    }\n  }\n\n  return {\n    props: {\n      audio: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: { play, pause, mute, unmute, reset, seek, changeVolume },\n    meta: {\n      state,\n      isInitial: state === UseAudioState.initial,\n      isReady: state === UseAudioState.ready,\n      isPlaying: state === UseAudioState.playing,\n      isPaused: state === UseAudioState.paused,\n      matches: (states: UseAudioState[]) =>\n        states.some((given) => given === state),\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import React from \"react\";\n\nexport type UseAutofocusConfigType = {\n  ref: React.RefObject<HTMLElement>;\n  condition: boolean;\n};\n\nexport function useAutofocus(config: UseAutofocusConfigType): void {\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  React.useEffect(() => {\n    if (!config.condition) return;\n\n    config.ref.current?.focus();\n  }, [config.condition]);\n}\n","export function getSafeWindow() {\n  if (typeof window === \"undefined\") return undefined;\n  return window;\n}\n","import { useState, useEffect } from \"react\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type WindowDimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowDimensions(): WindowDimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowDimensions>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    const safeWindow = getSafeWindow();\n\n    if (!safeWindow) return;\n\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: safeWindow?.innerWidth,\n        height: safeWindow?.innerHeight,\n      });\n    }\n\n    // Add event listener\n    safeWindow.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => safeWindow.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import { useWindowDimensions } from \"./use-window-dimensions\";\n\nexport type BreakpointType = number;\n\nexport type UseBreakpointReturnType = boolean;\n\nexport function useBreakpoint(\n  breakpoint: BreakpointType\n): UseBreakpointReturnType {\n  const dimensions = useWindowDimensions();\n  const width = dimensions?.width ?? 0;\n\n  return width <= breakpoint;\n}\n","import React from \"react\";\n\nexport function useClickOutside(\n  ref: React.RefObject<HTMLElement>,\n  onClickOutside: VoidFunction,\n  exclude?: React.RefObject<HTMLElement>[]\n): void {\n  React.useEffect(() => {\n    if (!ref.current) return;\n\n    function handleClickOutside(event: MouseEvent) {\n      // Check if click event happened outside the `ref`\n      // so the `onClickOutside` callback `may` be fired.\n      if (!ref.current?.contains(event.target as Node)) {\n        // The second check is to check if some `exclude`d node\n        // outside the `ref` node has been clicked.\n        const isExcludedNodeClicked = exclude?.some((node) =>\n          node.current?.contains(event.target as Node)\n        );\n\n        // `onClickOutside` callback is fired if the click event\n        // happened outside both `ref` node and `exclude`d nodes.\n        if (!isExcludedNodeClicked) {\n          onClickOutside();\n        }\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [onClickOutside, ref, exclude]);\n}\n","import { useEffect, useRef } from \"react\";\n\nexport function usePreviousValue<T>(\n  value: T,\n  defaultValue?: T | undefined\n): T | undefined {\n  const previousValue = useRef<T | undefined>(defaultValue);\n\n  useEffect(() => {\n    previousValue.current = value;\n  });\n\n  return previousValue.current;\n}\n","export function noop() {}\n","import { useState, useEffect } from \"react\";\nimport { usePreviousValue } from \"./use-previous-value\";\nimport { noop } from \"../noop\";\n\nexport type UseClientFilterQueryType = string | undefined;\nexport type UseClientFilterNameType = string;\n\nexport type UseClientFilterConfigType<T> = {\n  name: string;\n  enum: { [key: string]: UseClientFilterQueryType };\n  defaultQuery?: UseClientFilterQueryType;\n  currentQuery?: UseClientFilterQueryType;\n  filterFn?: (value: T) => boolean;\n  onUpdate?: (\n    current: UseClientFilterQueryType,\n    previous: UseClientFilterQueryType,\n  ) => void;\n};\n\nexport type UseClientFilterReturnType<T> = {\n  query: UseClientFilterQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: NonNullable<UseClientFilterConfigType<T>[\"filterFn\"]>;\n  options: UseClientFilterConfigType<T>[\"enum\"][0][];\n  onUpdate: UseClientFilterConfigType<T>[\"onUpdate\"];\n  name: UseClientFilterConfigType<T>[\"name\"];\n  changed: boolean;\n  unchanged: boolean;\n  label: { props: { htmlFor: UseClientFilterNameType } };\n  input: {\n    props: { id: UseClientFilterNameType; name: UseClientFilterNameType };\n  };\n};\n\nexport function useClientFilter<T = string>(\n  config: UseClientFilterConfigType<T>,\n): UseClientFilterReturnType<T> {\n  const defaultQuery = config.defaultQuery ?? undefined;\n  const currentQuery = config.currentQuery ?? undefined;\n\n  const filterFn = config.filterFn ?? defaultFilterFn;\n  const options = Object.keys(config.enum);\n  const onUpdate = config?.onUpdate ?? noop;\n\n  const [query, setQuery] = useState<UseClientFilterQueryType>(\n    currentQuery ?? defaultQuery,\n  );\n  const previousQuery = usePreviousValue(query);\n\n  function clear() {\n    setQuery(defaultQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newQuery = event.currentTarget.value;\n\n    const isNewQueryInEnum = Boolean(config.enum[String(newQuery)]);\n\n    setQuery(isNewQueryInEnum ? newQuery : undefined);\n  }\n\n  function defaultFilterFn(value: T) {\n    if (query === undefined) return true;\n\n    return query === String(value);\n  }\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  useEffect(() => onUpdate(query, previousQuery), [previousQuery, query]);\n\n  return {\n    query,\n    clear,\n    onChange,\n    filterFn,\n    options,\n    onUpdate,\n    name: config.name,\n    changed: query !== defaultQuery,\n    unchanged: query === defaultQuery,\n    label: { props: { htmlFor: config.name } },\n    input: { props: { id: config.name, name: config.name } },\n  };\n}\n","import { useState } from \"react\";\n\nexport type UseClientSearchQueryType = string;\n\nexport type UseClientSearchReturnType = {\n  query: UseClientSearchQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: (value: string) => boolean;\n  changed: boolean;\n  unchanged: boolean;\n};\n\nexport function useClientSearch(): UseClientSearchReturnType {\n  const emptyQuery: UseClientSearchQueryType = \"\";\n\n  const [query, setValue] = useState<UseClientSearchQueryType>(emptyQuery);\n\n  function clear() {\n    setValue(emptyQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setValue(event.currentTarget.value);\n  }\n\n  function filterFn(value: string) {\n    if (query === emptyQuery) return true;\n\n    return value?.toLowerCase().includes(query.toLowerCase());\n  }\n\n  return {\n    query,\n    clear,\n    onChange,\n    filterFn,\n    changed: query !== emptyQuery,\n    unchanged: query === emptyQuery,\n  };\n}\n","import { useField, UseFieldNameType, UseFieldReturnType } from \"./use-field\";\n\nexport type UseClientSortFnType<T> = (a: T, b: T) => number;\n\nexport type UseClientSortReturnType<T> = {\n  sortFn: UseClientSortFnType<T>;\n  options: UseClientSortOptionType[];\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n} & UseFieldReturnType<UseClientSortOptionType>;\n\nexport type UseClientSortOptionType = string;\n\ntype UseClientSortConfigType<T> = {\n  enum: Record<UseClientSortOptionType, UseClientSortOptionType> & {\n    default: UseClientSortOptionType;\n  };\n  options: Record<UseClientSortOptionType, UseClientSortFnType<T>>;\n};\n\nexport const defaultSortFn = () => 0;\n\nexport function useClientSort<T>(\n  name: UseFieldNameType,\n  config: UseClientSortConfigType<T>\n): UseClientSortReturnType<T> {\n  const state = useField<UseClientSortOptionType>(name, config.enum.default);\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newSort = event.currentTarget.value;\n    const isNewSortInEnum = Boolean(config.enum[String(newSort)]);\n\n    state.set(isNewSortInEnum ? newSort : config.enum.default);\n  }\n\n  if (state.value === config.enum.default) {\n    return {\n      sortFn: defaultSortFn,\n      options: Object.keys(config.options),\n      ...state,\n      handleChange,\n    };\n  }\n  return {\n    sortFn: config.options[state.value] ?? defaultSortFn,\n    options: Object.keys(config.options),\n    ...state,\n    handleChange,\n  };\n}\n","export function Days(value: number) {\n  return {\n    value,\n    hours: value * 24,\n    minutes: value * 24 * 60,\n    seconds: value * 24 * 60 * 60,\n    ms: value * 24 * 60 * 60 * 1000,\n  };\n}\n\nexport function Hours(value: number) {\n  return {\n    value,\n    minutes: value * 60,\n    seconds: value * 60 * 60,\n    ms: value * 60 * 60 * 1000,\n  };\n}\n\nexport function Minutes(value: number) {\n  return { value, seconds: value * 60, ms: value * 60 * 1000 };\n}\n\nexport function Seconds(value: number) {\n  return { value, ms: value * 1000 };\n}\n\nexport const Time = { Days, Hours, Minutes, Seconds };\n","import type { TimestampType } from \"@bgord/node/dist/schema\";\nimport { useState, useEffect } from \"react\";\nimport { Time } from \"../time\";\n\nexport function getCurrentTimestamp(): TimestampType {\n  return Date.now();\n}\n\nexport function useCurrentTimestamp(): TimestampType {\n  const [timestamp, setTimestamp] =\n    useState<TimestampType>(getCurrentTimestamp);\n\n  useEffect(() => {\n    const timer = setInterval(\n      () => setTimestamp(getCurrentTimestamp()),\n      Time.Seconds(1).ms\n    );\n\n    return () => clearInterval(timer);\n  }, []);\n\n  return timestamp;\n}\n","import React from \"react\";\n\ntype UseDebounceConfigType<T> = { value: T; delayMs: number };\n\nexport function useDebounce<T>(config: UseDebounceConfigType<T>): T {\n  const [debouncedValue, setDebouncedValue] = React.useState<T>(config.value);\n\n  React.useEffect(() => {\n    const timer = setTimeout(\n      () => setDebouncedValue(config.value),\n      config.delayMs\n    );\n\n    return () => clearTimeout(timer);\n  }, [config.value, config.delayMs]);\n\n  return debouncedValue;\n}\n","import { useState } from \"react\";\n\nexport type UseToggleValueType = boolean;\n\nexport type UseToggleConfigType = UseToggleValueType;\n\nexport type UseToggleReturnType = {\n  on: UseToggleValueType;\n  off: UseToggleValueType;\n  enable: VoidFunction;\n  disable: VoidFunction;\n  toggle: VoidFunction;\n  props: {\n    controller: {\n      \"aria-expanded\": JSX.IntrinsicElements[\"div\"][\"aria-expanded\"];\n      \"aria-controls\": JSX.IntrinsicElements[\"div\"][\"aria-controls\"];\n    };\n    target: { id: JSX.IntrinsicElements[\"div\"][\"id\"] };\n  };\n};\n\nexport function useToggle(\n  defaultValue: UseToggleConfigType = false,\n  name?: string\n): UseToggleReturnType {\n  const [on, setIsOn] = useState(defaultValue);\n\n  const enable = () => setIsOn(true);\n  const disable = () => setIsOn(false);\n  const toggle = () => setIsOn((v) => !v);\n\n  return {\n    on,\n    off: !on,\n    enable,\n    disable,\n    toggle,\n    props: {\n      controller: {\n        \"aria-expanded\": on ? \"true\" : \"false\",\n        \"aria-controls\": name,\n      },\n      target: { id: name },\n    },\n  };\n}\n\nexport function extractUseToggle<X>(_props: UseToggleReturnType & X): {\n  toggle: UseToggleReturnType;\n  rest: X;\n} {\n  const { on, off, enable, disable, toggle, props, ...rest } = _props;\n\n  return {\n    toggle: { on, off, enable, disable, toggle, props },\n    rest: rest as X,\n  };\n}\n","import { useEffect } from \"react\";\nimport { UseQueryResult } from \"react-query\";\n\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type UseDelayedLoaderConfig = Pick<UseQueryResult, \"isLoading\">;\n\nexport function useDelayedLoader(\n  config: UseDelayedLoaderConfig,\n  delayMs = 500,\n): UseToggleReturnType {\n  const delayedLoader = useToggle();\n  const delayElapsed = useToggle();\n\n  let timeoutId: NodeJS.Timeout;\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  useEffect(() => {\n    timeoutId = setTimeout(delayElapsed.enable, delayMs);\n\n    return () => clearTimeout(timeoutId);\n  }, []);\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  useEffect(() => {\n    if (delayElapsed.off) return;\n    if (config.isLoading) return delayedLoader.enable();\n    return delayedLoader.disable();\n  }, [config.isLoading, delayElapsed.on]);\n\n  return delayedLoader;\n}\n","import { useEffect } from \"react\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport {\n  useToggle,\n  UseToggleConfigType,\n  UseToggleReturnType,\n} from \"./use-toggle\";\n\nexport function useDesignMode(\n  config?: UseToggleConfigType,\n): UseToggleReturnType {\n  const designMode = useToggle(config);\n  const safeWindow = getSafeWindow();\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  useEffect(() => {\n    if (!safeWindow) return;\n\n    safeWindow.document.designMode = designMode.on ? \"on\" : \"off\";\n  }, [designMode.on]);\n\n  return designMode;\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useDisablePullToRefresh(condition = true): void {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overscroll behaviors\n    const originalHtmlOverscrollBehavior =\n      window.getComputedStyle(html).overscrollBehavior;\n    const originalBodyOverflowBehavior =\n      window.getComputedStyle(body).overscrollBehavior;\n\n    // Disable pull to refresh\n    body.style.overscrollBehavior = \"none\";\n    html.style.overscrollBehavior = \"none\";\n\n    // Enable pull to refresh when component unmounts\n    return () => {\n      body.style.overscrollBehavior = originalBodyOverflowBehavior;\n      html.style.overscrollBehavior = originalHtmlOverscrollBehavior;\n    };\n  }, [condition]);\n}\n","import React from \"react\";\n\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n","import { useState, useEffect } from \"react\";\n\nexport enum UseExpandableListState {\n  contracted = \"contracted\",\n  expanded = \"expanded\",\n}\n\nexport type UseExpandableListConfigType = { max: number; length: number };\n\nexport type UseExpandableListReturnType = {\n  state: UseExpandableListState;\n  displayShowMore: boolean;\n  displayShowLess: boolean;\n  actions: {\n    showMore: VoidFunction;\n    showLess: VoidFunction;\n  };\n  numberOfExcessiveElements: number;\n  filterFn: (element: unknown, index: number) => void;\n};\n\nexport function useExpandableList(\n  config: UseExpandableListConfigType,\n): UseExpandableListReturnType {\n  const numberOfExcessiveElements = config.length - config.max;\n  const areThereExcessiveElements = config.length > config.max;\n\n  function getState() {\n    return areThereExcessiveElements\n      ? UseExpandableListState.contracted\n      : UseExpandableListState.expanded;\n  }\n\n  const [state, setState] = useState<UseExpandableListState>(getState);\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  useEffect(() => setState(getState()), [config.length, config.max]);\n\n  function showMore() {\n    if (state === UseExpandableListState.contracted) {\n      setState(UseExpandableListState.expanded);\n    }\n  }\n\n  function showLess() {\n    if (state === UseExpandableListState.expanded) {\n      setState(UseExpandableListState.contracted);\n    }\n  }\n\n  function filterFn(_element: unknown, index: number) {\n    if (state === UseExpandableListState.expanded) return true;\n    return index < config.max;\n  }\n\n  return {\n    state,\n    displayShowMore: state === UseExpandableListState.contracted,\n    displayShowLess:\n      state === UseExpandableListState.expanded && areThereExcessiveElements,\n    actions: {\n      showMore,\n      showLess,\n    },\n    numberOfExcessiveElements,\n    filterFn,\n  };\n}\n","import { useState, useMemo } from \"react\";\n\ntype UseFileNameType = string;\n\nexport type UseFileConfigType = {\n  maxSize?: number;\n};\n\nexport enum UseFileState {\n  idle = \"idle\",\n  selected = \"selected\",\n  error = \"error\",\n}\n\ntype UseFileIdle = {\n  state: UseFileState.idle;\n  matches: (states: UseFileState[]) => boolean;\n  isIdle: true;\n  isSelected: false;\n  isError: false;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\ntype UseFileSelected = {\n  state: UseFileState.selected;\n  matches: (states: UseFileState[]) => boolean;\n  data: File;\n  isIdle: false;\n  isSelected: true;\n  isError: false;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  preview: ReturnType<typeof URL.createObjectURL> | undefined;\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\ntype UseFileError = {\n  state: UseFileState.error;\n  matches: (states: UseFileState[]) => boolean;\n  data: null;\n  isIdle: false;\n  isSelected: false;\n  isError: true;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\nexport type UseFileReturnType = UseFileIdle | UseFileSelected | UseFileError;\n\nexport function useFile(\n  name: UseFileNameType,\n  config?: UseFileConfigType\n): UseFileReturnType {\n  const maxSize = config?.maxSize ?? Number.POSITIVE_INFINITY;\n\n  const [key, setKey] = useState(0);\n  const [state, setState] = useState<UseFileState>(UseFileState.idle);\n  const [file, setFile] = useState<File | null>(null);\n\n  function selectFile(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.currentTarget.files;\n\n    if (!(files?.[0])) return;\n\n    const file = files[0];\n\n    if (file.size > maxSize) {\n      setState(UseFileState.error);\n      return undefined;\n    }\n\n    setFile(file);\n    setState(UseFileState.selected);\n\n    return file;\n  }\n\n  function clearFile() {\n    setKey((key) => key + 1);\n    setFile(null);\n    setState(UseFileState.idle);\n  }\n\n  const preview = useMemo(\n    () => (file ? URL.createObjectURL(file) : undefined),\n    [file]\n  );\n\n  function matches(states: UseFileState[]) {\n    return states.some((given) => given === state);\n  }\n\n  if (state === UseFileState.idle) {\n    return {\n      state,\n      matches,\n      isIdle: true,\n      isSelected: false,\n      isError: false,\n      data: null,\n      actions: { selectFile, clearFile },\n      label: { props: { htmlFor: name } },\n      input: {\n        props: { id: name, name, multiple: false, key },\n      },\n    };\n  }\n\n  if (state === UseFileState.selected) {\n    return {\n      state,\n      matches,\n      data: file as File,\n      isIdle: false,\n      isSelected: true,\n      isError: false,\n      actions: { selectFile, clearFile },\n      preview,\n      label: { props: { htmlFor: name } },\n      input: {\n        props: { id: name, name, multiple: false, key },\n      },\n    };\n  }\n\n  return {\n    state,\n    matches,\n    data: null,\n    isIdle: false,\n    isSelected: false,\n    isError: true,\n    actions: { selectFile, clearFile },\n    label: { props: { htmlFor: name } },\n    input: {\n      props: { id: name, name, multiple: false, key },\n    },\n  };\n}\n","import React from \"react\";\nimport { tinykeys } from \"tinykeys\";\n\nexport interface UseKeyboardShortcutsConfigType {\n  [keybinding: string]: (event: KeyboardEvent) => void;\n}\n\nexport type UseKeyboardShortcutsOptionsType = { enabled?: boolean };\n\nexport function useKeyboardShortcuts(\n  config: UseKeyboardShortcutsConfigType,\n  options?: UseKeyboardShortcutsOptionsType,\n): void {\n  const enabled = options?.enabled ?? true;\n\n  React.useEffect(() => {\n    if (!enabled) return;\n\n    const unsubscribeShortcuts = tinykeys(window, config);\n\n    return () => unsubscribeShortcuts();\n  }, [config, enabled]);\n}\n","import { useRef, Ref } from \"react\";\n\nimport { useKeyboardShortcuts } from \"./use-keyboard-shortcuts\";\n\nexport function useFocusKeyboardShortcut(shortcut: string): {\n  ref: Ref<HTMLInputElement>;\n} {\n  const ref = useRef<HTMLInputElement>(null);\n  useKeyboardShortcuts({ [shortcut]: () => ref.current?.focus() });\n\n  return { ref };\n}\n","import React from \"react\";\n\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type UseHoverConfigType = {\n  enabled: boolean;\n};\n\nexport type UseHoverReturnType = {\n  attach: { ref: React.RefObject<any> };\n  isHovering: UseToggleReturnType[\"on\"];\n};\n\nexport function useHover(config?: UseHoverConfigType): UseHoverReturnType {\n  const enabled = config?.enabled ?? true;\n\n  const ref = React.useRef<any>(null);\n  const isHovering = useToggle(false);\n\n  const handleMouseEnter = isHovering.enable;\n  const handleMouseLeave = isHovering.disable;\n\n  // biome-ignore lint: lint/complexity/noForEach\n  React.useEffect(() => {\n    const node = ref.current;\n\n    if (node && enabled) {\n      node.addEventListener(\"mouseenter\", handleMouseEnter);\n      node.addEventListener(\"mouseleave\", handleMouseLeave);\n    }\n\n    return () => {\n      if (node && enabled) {\n        node.removeEventListener(\"mouseenter\", handleMouseEnter);\n        node.removeEventListener(\"mouseleave\", handleMouseLeave);\n      }\n    };\n  }, []);\n\n  return { attach: { ref }, isHovering: isHovering.on && enabled };\n}\n","export type ImagePathType = string | undefined;\n\nexport type ImageResolutionType = {\n  width: number | null;\n  height: number | null;\n};\n\nexport const emptyImageResolution: ImageResolutionType = {\n  width: null,\n  height: null,\n};\n\nexport async function getImageResolution(\n  path: ImagePathType\n): Promise<ImageResolutionType> {\n  if (!path) return emptyImageResolution;\n\n  const img = document.createElement(\"img\");\n\n  const promise = new Promise<ImageResolutionType>((resolve, reject) => {\n    img.onload = () => resolve({ width: img.width, height: img.height });\n    img.onerror = reject;\n  });\n\n  img.src = path;\n\n  return promise;\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { UseFileReturnType, UseFileState } from \"./use-file\";\nimport {\n  getImageResolution,\n  ImageResolutionType,\n  emptyImageResolution,\n} from \"../get-image-resolution\";\n\nexport function useImageFileResolution(\n  file: UseFileReturnType,\n): ImageResolutionType {\n  const resolution = useField<ImageResolutionType>(\n    \"resolution\",\n    emptyImageResolution,\n  );\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  React.useEffect(() => {\n    async function execute() {\n      if (file.state === UseFileState.selected) {\n        try {\n          const result = await getImageResolution(file.preview);\n\n          return resolution.set(result);\n        } catch (error) {\n          return resolution.clear();\n        }\n      }\n\n      if (\n        [UseFileState.error, UseFileState.idle].includes(file.state) &&\n        resolution.value.width !== null &&\n        resolution.value.height !== null\n      ) {\n        resolution.clear();\n      }\n    }\n\n    execute();\n  }, [file.state, file.data?.name]);\n\n  return resolution.value;\n}\n","import React from \"react\";\nimport { useToggle } from \"./use-toggle\";\n\ntype OnlineStatusType = boolean;\n\nexport const useIsOnline = (): OnlineStatusType => {\n  const onlineStatus = useToggle(getOnlineStatus());\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  React.useEffect(() => {\n    function handleOnline() {\n      onlineStatus.enable();\n    }\n\n    function handleOffline() {\n      onlineStatus.disable();\n    }\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  return onlineStatus.on;\n};\n\n// Check if browser supports `navigator.onLine`,\n// otherwise, we assume the user is online.\nfunction getOnlineStatus(): OnlineStatusType {\n  return typeof navigator !== \"undefined\" &&\n    typeof navigator.onLine === \"boolean\"\n    ? navigator.onLine\n    : true;\n}\n","import { RefObject, useEffect, useState } from \"react\";\n\nexport const defaultUseIsVisibleConfig = {\n  threshold: 0,\n  root: null,\n  rootMargin: \"0%\",\n  ref: { current: null },\n};\n\nexport function isIntersectionObserverSupported() {\n  return (\n    \"IntersectionObserver\" in window &&\n    \"IntersectionObserverEntry\" in window &&\n    \"intersectionRatio\" in window.IntersectionObserverEntry.prototype\n  );\n}\n\nexport type UseIsVisibleConfigType = IntersectionObserverInit & {\n  ref: RefObject<Element>;\n};\n\nexport type UseIsVisibleReturnType = boolean;\n\nexport function useIsVisible(\n  config: UseIsVisibleConfigType = defaultUseIsVisibleConfig,\n): UseIsVisibleReturnType {\n  const [isVisible, setVisible] = useState<UseIsVisibleReturnType>(false);\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  useEffect(() => {\n    const element = config.ref.current;\n\n    if (!(isIntersectionObserverSupported() && element)) return;\n\n    const observer = new IntersectionObserver(\n      (entry) => setVisible(Boolean(entry[0]?.isIntersecting)),\n      config,\n    );\n\n    observer.observe(element);\n\n    return () => observer.unobserve(element);\n  }, []);\n\n  return isVisible;\n}\n","import { useState } from \"react\";\n\ntype UseItemValueType<T> = T | null;\n\nexport type UseItemReturnType<T> = {\n  clear: VoidFunction;\n  set: (item: NonNullable<UseItemValueType<T>>) => void;\n  toggle: (item: NonNullable<UseItemValueType<T>>) => any;\n  value: UseItemValueType<T>;\n  isDefault: boolean;\n  exists: boolean;\n  compare: (a: UseItemValueType<T>) => boolean;\n};\n\nexport type UseItemConfigType<T> = {\n  defaultItem?: UseItemValueType<T>;\n\n  comparisonFn?: (a: UseItemValueType<T>, b: UseItemValueType<T>) => boolean;\n};\n\nfunction defaultComparisonFn<T>(\n  a: UseItemValueType<T>,\n  b: UseItemValueType<T>\n) {\n  return a === b;\n}\n\nconst defaultItem = null;\n\nexport function useItem<T>(\n  config?: UseItemConfigType<T>\n): UseItemReturnType<T> {\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [item, setItem] = useState<UseItemValueType<T>>(\n    config?.defaultItem ?? defaultItem\n  );\n\n  return {\n    clear: () => setItem(defaultItem),\n\n    set: (newer) => setItem(newer),\n\n    toggle: (newer) =>\n      setItem((current) => {\n        if (current === defaultItem) return newer;\n\n        return comparisonFn(current, newer) ? defaultItem : newer;\n      }),\n\n    value: item,\n\n    isDefault: comparisonFn(item, defaultItem),\n\n    exists: !comparisonFn(item, defaultItem),\n\n    compare: (given: UseItemValueType<T>) => comparisonFn(item, given),\n  };\n}\n","import React from \"react\";\n\nexport enum KeyNameEnum {\n  Enter = \"Enter\",\n  Space = \" \",\n}\n\n// biome-ignore lint: lint/complexity/noBannedTypes\nexport type UseKeyHandlerConfigType = Partial<Record<KeyNameEnum, Function>>;\n\nexport type UseKeyHandlerReturnType = (\n  event: React.KeyboardEvent<HTMLElement>\n) => void;\n\nexport function useKeyHandler(\n  config: UseKeyHandlerConfigType\n): UseKeyHandlerReturnType {\n  const keys = Object.keys(config);\n\n  return function handleKey(event: React.KeyboardEvent<HTMLElement>) {\n    const key = event.key as KeyNameEnum;\n    const executor = config[key];\n\n    if (keys.includes(event.key) && config[key] && executor) {\n      executor();\n    }\n  };\n}\n","import { polishPlurals } from \"polish-plurals\";\nimport type { Falsy, Schema } from \"@bgord/node\";\n\ntype PluralizeWordType = string;\ntype PluralizeValueType = Falsy<number>;\n\nexport type PluralizeOptionsType = {\n  value: PluralizeValueType;\n  singular: PluralizeWordType;\n  plural?: PluralizeWordType;\n  genitive?: PluralizeWordType;\n  language: Schema.LanguageType;\n};\n\nenum PluralizationSupportedLanguages {\n  en = \"en\",\n  pl = \"pl\",\n}\n\nexport function pluralize(options: PluralizeOptionsType): PluralizeWordType {\n  if (options.language === PluralizationSupportedLanguages.en) {\n    const plural = options.plural ?? `${options.singular}s`;\n\n    if (options.value === 1) return options.singular;\n\n    return plural;\n  }\n\n  if (options.language === PluralizationSupportedLanguages.pl) {\n    const value = options.value ?? 1;\n\n    if (value === 1) return options.singular;\n\n    return polishPlurals(\n      options.singular,\n      String(options.plural),\n      String(options.genitive),\n      value\n    );\n  }\n\n  console.warn(\n    `[@bgord/frontend] missing pluralization function for language ${options.language}.`\n  );\n\n  return options.singular;\n}\n","import React from \"react\";\nimport type {\n  TranslationsType,\n  TranslationsKeyType,\n  Schema,\n} from \"@bgord/node\";\nimport { pluralize, PluralizeOptionsType } from \"./pluralize\";\n\ntype TranslationsContextValueType = {\n  translations: TranslationsType;\n  language: Schema.LanguageType;\n};\n\ntype TranslationPlaceholderType = string;\ntype TranslationPlaceholderValueType = string | number;\ntype TranslationVariableType = Record<\n  TranslationPlaceholderType,\n  TranslationPlaceholderValueType\n>;\n\nconst TranslationsContext = React.createContext<TranslationsContextValueType>({\n  translations: {},\n  language: \"en\",\n});\n\ntype TranslationsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: TranslationsContextValueType;\n};\n\nexport function TranslationsContextProvider(\n  props: TranslationsContextPropsType\n) {\n  return (\n    <TranslationsContext.Provider value={props.value}>\n      {props.children}\n    </TranslationsContext.Provider>\n  );\n}\n\nexport function useTranslations() {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      \"useTranslations must be used within the TranslationsContext\"\n    );\n  }\n\n  function translate(\n    key: TranslationsKeyType,\n    variables?: TranslationVariableType\n  ) {\n    const translation = value.translations[key];\n\n    if (!translation) {\n      console.warn(`[@bgord/frontend] missing translation for key: ${key}`);\n      return key;\n    }\n\n    if (!variables) return translation;\n\n    return Object.entries(variables).reduce(\n      (result, [placeholder, value]) =>\n        result.replace(`{{${placeholder}}}`, String(value)),\n      translation\n    );\n  }\n\n  return translate;\n}\n\nexport function useLanguage(): TranslationsContextValueType[\"language\"] {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(\"useLanguage must be used within the TranslationsContext\");\n  }\n\n  return value.language;\n}\n\nexport function usePluralize() {\n  const language = useLanguage();\n\n  return (options: Omit<PluralizeOptionsType, \"language\">) =>\n    pluralize({ ...options, language });\n}\n","import type { LanguageType } from \"@bgord/node/dist/schema\";\nimport Cookies from \"js-cookie\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport { useLanguage } from \"../translations\";\nimport { useClientFilter, UseClientFilterReturnType } from \"./use-client-filter\";\n\nexport function useLanguageSelector(\n  supportedLanguages: Record<LanguageType, LanguageType>\n): UseClientFilterReturnType<LanguageType> {\n  const language = useLanguage();\n\n  return useClientFilter({\n    enum: supportedLanguages,\n    currentQuery: language,\n    name: \"language\",\n    onUpdate: (current, previous) => {\n      const safeWindow = getSafeWindow();\n\n      if (!safeWindow) return;\n\n      if (!(current && previous ) || previous === current) return;\n\n      Cookies.set(\"accept-language\", current);\n      safeWindow.document.location.reload();\n    },\n  });\n}\n","import React from \"react\";\n\nexport type UseLeavingPromptConditionType = boolean;\n\nexport function useLeavingPrompt(\n  condition: UseLeavingPromptConditionType = false\n): void {\n  React.useEffect(() => {\n    if (!condition) return;\n\n    function handler(e: BeforeUnloadEvent) {\n      e.preventDefault();\n    }\n\n    window.addEventListener(\"beforeunload\", handler);\n\n    return () => window.removeEventListener(\"beforeunload\", handler);\n  }, [condition]);\n}\n","import { useState, SetStateAction, Dispatch } from \"react\";\n\nexport type UseListActionsType<T> = {\n  clear: VoidFunction;\n  add: (x: T | T[]) => void;\n  remove: (x: T) => void;\n  toggle: (x: T) => void;\n  isAdded: (x: T) => boolean;\n  update: Dispatch<SetStateAction<T[]>>;\n};\n\nexport type UseListReturnType<T> = [T[], UseListActionsType<T>];\n\nexport type UseListConfigType<T> = {\n  defaultItems?: T[];\n  comparisonFn?: (a: T, b: T) => boolean;\n};\n\nexport function useList<T>(\n  config?: UseListConfigType<T>\n): UseListReturnType<T> {\n  const defaultItems = config?.defaultItems ?? [];\n\n  const defaultComparisonFn = (a: T, b: T) => a === b;\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [items, setItems] = useState<T[]>(defaultItems);\n\n  function clear() {\n    setItems([]);\n  }\n\n  function add(payload: T | T[]) {\n    setItems((items) => {\n      if (Array.isArray(payload)) {\n        return [...items, ...payload];\n      }\n      return [...items, payload];\n    });\n  }\n\n  function remove(item: T) {\n    setItems((items) => items.filter((x) => !comparisonFn(x, item)));\n  }\n\n  function isAdded(item: T) {\n    return items.some((x) => comparisonFn(x, item));\n  }\n\n  function toggle(item: T) {\n    isAdded(item) ? remove(item) : add(item);\n  }\n\n  return [items, { clear, add, remove, toggle, isAdded, update: setItems }];\n}\n","import React from \"react\";\n\nexport function useMetaEnterSubmit() {\n  const handleMetaEnterSubmit = (\n    event: React.KeyboardEvent<HTMLTextAreaElement>\n  ) => {\n    if (event.key !== \"Enter\" || !event.metaKey) return;\n\n    event.currentTarget.form?.dispatchEvent(\n      new Event(\"submit\", { cancelable: true })\n    );\n  };\n\n  return { onKeyDown: handleMetaEnterSubmit };\n}\n","import { useField } from \"./use-field\";\nimport { PagedMetaType, PageType } from \"../pagination\";\n\ntype UsePaginationControlType = {\n  active: boolean;\n  disabled: boolean;\n  exists: boolean;\n  go: VoidFunction;\n  value: PageType | undefined;\n};\n\ntype UsePaginationReturnType = {\n  current: PageType;\n  last: PageType;\n\n  controls: {\n    firstPage: UsePaginationControlType;\n    previousPage: UsePaginationControlType;\n    nextPage: UsePaginationControlType;\n    lastPage: UsePaginationControlType;\n  };\n\n  update: (updated: PagedMetaType | null) => void;\n};\n\nexport function usePagination(): UsePaginationReturnType {\n  const meta = useField<PagedMetaType | null>(\"meta\", null);\n\n  const firstPage = 1;\n  const previousPage = meta.value?.previousPage;\n  const nextPage = meta.value?.nextPage;\n  const lastPage = meta.value?.lastPage || firstPage;\n\n  const page = useField(\"page\", firstPage);\n\n  return {\n    current: page.value,\n    last: lastPage,\n\n    controls: {\n      firstPage: {\n        active: !previousPage,\n        disabled: false,\n        exists: true,\n        go: () => page.set(firstPage),\n        value: firstPage,\n      },\n\n      previousPage: {\n        active: false,\n        disabled: !previousPage,\n        exists: Boolean(previousPage),\n        go: () => page.set(previousPage ?? page.value),\n        value: previousPage,\n      },\n\n      nextPage: {\n        active: false,\n        disabled: !nextPage,\n        exists: Boolean(nextPage),\n        go: () => page.set(nextPage ?? page.value),\n        value: nextPage,\n      },\n\n      lastPage: {\n        active: page.value === lastPage,\n        disabled: !nextPage,\n        exists: true,\n        go: () => page.set(lastPage ?? page.value),\n        value: lastPage,\n      },\n    },\n\n    update: (updated) => meta.set(updated),\n  };\n}\n","import * as Storage from \"ts-storage\";\n\nexport type SafeLocalStorageKeyType = string;\n\nexport class SafeLocalStorage {\n  static get<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    fallbackValue: T\n  ): T {\n    return Storage.get(key, fallbackValue).value;\n  }\n\n  static set<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    value: T\n  ) {\n    Storage.set(key, value);\n  }\n\n  static clear(key: SafeLocalStorageKeyType) {\n    Storage.remove(key);\n  }\n}\n","import * as React from \"react\";\n\nimport {\n  useToggle,\n  UseToggleReturnType,\n  UseToggleValueType,\n} from \"./use-toggle\";\nimport {\n  SafeLocalStorage,\n  SafeLocalStorageKeyType,\n} from \"../safe-local-storage\";\n\nexport type UsePersistentToggleReturnType = UseToggleReturnType & {\n  clear: VoidFunction;\n};\n\nexport function usePersistentToggle(\n  key: SafeLocalStorageKeyType,\n  defaultValue: UseToggleValueType = false\n): UsePersistentToggleReturnType {\n  const storedValue = SafeLocalStorage.get<UseToggleValueType>(\n    key,\n    defaultValue\n  );\n\n  const toggle = useToggle(storedValue);\n\n  React.useEffect(() => SafeLocalStorage.set(key, toggle.on), [key, toggle.on]);\n\n  return { ...toggle, clear: () => SafeLocalStorage.clear(key) };\n}\n","import type { TimestampType } from \"@bgord/node/dist/schema\";\nimport type { Falsy } from \"@bgord/node\";\n\nexport type RateLimiterOptionsType = {\n  limitMs: TimestampType;\n};\n\n/** @public */\nexport type RateLimiterResultSuccessType = { allowed: true };\n\nexport type RateLimiterResultErrorType = {\n  allowed: false;\n  remainingMs: TimestampType;\n};\n\n/** @public */\nexport type RateLimiterResultType =\n  | RateLimiterResultSuccessType\n  | RateLimiterResultErrorType;\n\nexport class RateLimiter {\n  private lastInvocationTimestamp: Falsy<TimestampType> = null;\n\n  private options: RateLimiterOptionsType;\n\n  constructor(options: RateLimiterOptionsType) {\n    this.options = options;\n  }\n\n  verify(currentTimestamp: TimestampType): RateLimiterResultType {\n    if (!this.lastInvocationTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    const nextAllowedTimestamp =\n      this.lastInvocationTimestamp + this.options.limitMs;\n\n    if (nextAllowedTimestamp <= currentTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    return {\n      allowed: false,\n      remainingMs: nextAllowedTimestamp - currentTimestamp,\n    };\n  }\n}\n","import { useRef } from \"react\";\n\nimport {\n  RateLimiterOptionsType,\n  RateLimiterResultErrorType,\n  RateLimiter,\n} from \"../rate-limiter\";\n\nexport type UseRateLimiterActionType<T> = (...args: T[]) => void;\n\nexport type UseRateLimiterOptionsType<T> = RateLimiterOptionsType & {\n  action: UseRateLimiterActionType<T>;\n  fallback?: (remainingMs: RateLimiterResultErrorType[\"remainingMs\"]) => void;\n};\n\nexport type UseRateLimiterReturnType<T> = UseRateLimiterActionType<T>;\n\nexport function useRateLimiter<T>(\n  options: UseRateLimiterOptionsType<T>\n): UseRateLimiterReturnType<T> {\n  const rateLimiter = useRef<RateLimiter>(new RateLimiter(options));\n\n  return function executor(...args: T[]) {\n    const currentTimestamp = Date.now();\n    const result = rateLimiter.current.verify(currentTimestamp);\n\n    if (result.allowed) {\n      return options.action(...args);\n    }\n\n    return options.fallback?.(result.remainingMs);\n  };\n}\n","import React from \"react\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type ScrollPositionType = number;\n\nexport type UseScrollReturnType = {\n  actions: { goToTop: VoidFunction };\n  position: {\n    value: ScrollPositionType;\n    isInitial: boolean;\n    hasChanged: boolean;\n  };\n  visible: UseToggleReturnType[\"on\"];\n  hidden: UseToggleReturnType[\"off\"];\n};\n\nexport function useScroll(): UseScrollReturnType {\n  const safeWindow = getSafeWindow();\n\n  // Scroll position always set at the top of the page\n  const defaultScrollPosition = 0;\n  const [scrollPosition, setScrollPosition] =\n    React.useState<ScrollPositionType>(defaultScrollPosition);\n\n  // Assuming scrollbar is hidden by default\n  const scrollbarVisibility = useToggle(false);\n\n  function goToTop() {\n    if (!safeWindow) return;\n    safeWindow.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  }\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  React.useLayoutEffect(() => {\n    function measure() {\n      if (!safeWindow) return;\n\n      setScrollPosition(safeWindow?.scrollY);\n\n      // Checking if the viewport (clientHeight) can fully contain\n      // full content height (scrollHeight)\n      if (\n        safeWindow.document.body.clientHeight <\n        safeWindow.document.body.scrollHeight\n      ) {\n        scrollbarVisibility.enable();\n      } else {\n        scrollbarVisibility.disable();\n      }\n    }\n\n    safeWindow?.addEventListener(\"scroll\", measure);\n\n    return () => safeWindow?.removeEventListener(\"scroll\", measure);\n  }, []);\n\n  return {\n    actions: { goToTop },\n    position: {\n      value: scrollPosition,\n      isInitial: scrollPosition === 0,\n      hasChanged: scrollPosition > 0,\n    },\n    visible: scrollbarVisibility.on,\n    hidden: scrollbarVisibility.off,\n  };\n}\n","import { useEffect } from \"react\";\n\nexport function useScrollLock(condition = true): void {\n  useEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const originalHtmlOverflow = window.getComputedStyle(html).overflow;\n\n    // Prevent scrolling on mount\n    html.style.overflow = \"hidden\";\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      html.style.overflow = originalHtmlOverflow;\n    };\n  }, [condition]);\n}\n","export type SoundSourceType = string;\n\nexport type UseSoundReturnType = { play: VoidFunction };\n\nexport function useSound(src: SoundSourceType): UseSoundReturnType {\n  const audio = new Audio(src);\n\n  return { play: audio.play.bind(audio) };\n}\n","import {\n  useClientFilter,\n  UseClientFilterConfigType,\n  UseClientFilterReturnType,\n} from \"./use-client-filter\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type UseUrlFilterConfigType<T> = UseClientFilterConfigType<T>;\n\nexport function useUrlFilter<T>(\n  config: UseUrlFilterConfigType<T>\n): UseClientFilterReturnType<T> {\n  const safeWindow = getSafeWindow();\n\n  const currentQuery =\n    new URLSearchParams(safeWindow?.location.search).get(config.name) ??\n    undefined;\n\n  return useClientFilter({\n    onUpdate: (current, previous) => {\n      if (!safeWindow) return;\n\n      const url = new URL(safeWindow.location.toString());\n      const params = new URLSearchParams(url.search);\n\n      if (current === undefined) {\n        params.delete(config.name);\n      } else {\n        params.set(config.name, current);\n      }\n\n      if (current === previous) return;\n\n      if (current !== previous) {\n        url.search = params.toString();\n        history.pushState({}, \"\", url.toString());\n      }\n    },\n    ...config,\n    defaultQuery: config.defaultQuery,\n    currentQuery: currentQuery,\n  });\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { DurationFormatter } from \"../durations\";\n\nexport type UseVideoSrcType = string;\n\ntype VideoDurationType = number;\ntype VideoCurrentTimeType = number;\ntype VideoVolumeType = number;\n\nexport const VIDEO_DEFAULT_VOLUME: VideoVolumeType = 1;\n\nexport enum UseVideoState {\n  initial = \"initial\",\n  ready = \"ready\",\n  playing = \"playing\",\n  paused = \"paused\",\n}\n\nexport type UseVideoReturnType = {\n  props: {\n    video: {\n      src: UseVideoSrcType;\n      onTimeUpdate: (event: Event) => void;\n      onLoadedMetadata: (event: Event) => void;\n      onEnded: (event: Event) => void;\n      controls: false;\n    };\n    player: {\n      min: 0;\n      step: 1;\n      max: VideoDurationType;\n      value: VideoDurationType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n    volume: {\n      min: 0;\n      max: 1;\n      step: 0.01;\n      value: VideoVolumeType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n  };\n  actions: {\n    play: VoidFunction;\n    pause: VoidFunction;\n    mute: VoidFunction;\n    unmute: VoidFunction;\n    reset: VoidFunction;\n    seek: (event: Event) => void;\n    changeVolume: (event: Event) => void;\n    triggerFullscreen: VoidFunction;\n  };\n\n  meta: {\n    state: UseVideoState;\n    isInitial: boolean;\n    isReady: boolean;\n    isPlaying: boolean;\n    isPaused: boolean;\n    matches: (states: UseVideoState[]) => boolean;\n    percentage: {\n      raw: number;\n      formatted: string;\n    };\n    currentTime: {\n      raw: VideoCurrentTimeType;\n      formatted: string;\n    };\n    duration: {\n      raw: VideoDurationType;\n      formatted: string;\n    };\n    volume: {\n      value: VideoVolumeType;\n      raw: number;\n      formatted: string;\n    };\n    muted: boolean;\n  };\n};\n\nexport function useVideo(src: UseVideoSrcType): UseVideoReturnType {\n  const [state, setState] = React.useState<UseVideoState>(\n    UseVideoState.initial\n  );\n\n  const ref = React.useRef<HTMLVideoElement | null>(null);\n\n  const duration = useField<VideoDurationType>(\"duration\", 0);\n  const currentTime = useField<VideoCurrentTimeType>(\"currentTime\", 0);\n  const volume = useField<VideoVolumeType>(\"volume\", VIDEO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (!ref.current) return;\n    ref.current.play();\n    setState(UseVideoState.playing);\n  }\n\n  function pause() {\n    if (!ref.current) return;\n    ref.current.pause();\n    setState(UseVideoState.paused);\n  }\n\n  function reset() {\n    if (!ref.current) return;\n    ref.current.currentTime = 0;\n    ref.current.pause();\n    currentTime.set(0);\n    setState(UseVideoState.paused);\n  }\n\n  function mute() {\n    if (!ref.current) return;\n    ref.current.volume = 0;\n    volume.set(0);\n  }\n\n  function unmute() {\n    if (!ref.current) return;\n    ref.current.volume = VIDEO_DEFAULT_VOLUME;\n    volume.set(VIDEO_DEFAULT_VOLUME);\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (!ref.current) return;\n    ref.current.currentTime = target.valueAsNumber;\n    currentTime.set(target.valueAsNumber);\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(UseVideoState.ready);\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLVideoElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(UseVideoState.paused);\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (!ref.current) return;\n    ref.current.volume = target.valueAsNumber;\n    volume.set(target.valueAsNumber);\n  }\n\n  function triggerFullscreen() {\n    if (!ref.current) return;\n    ref.current.requestFullscreen();\n  }\n\n  return {\n    props: {\n      video: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: {\n      play,\n      pause,\n      mute,\n      unmute,\n      reset,\n      seek,\n      changeVolume,\n      triggerFullscreen,\n    },\n    meta: {\n      state,\n      isInitial: state === UseVideoState.initial,\n      isReady: state === UseVideoState.ready,\n      isPlaying: state === UseVideoState.playing,\n      isPaused: state === UseVideoState.paused,\n      matches: (states: UseVideoState[]) =>\n        states.some((given) => given === state),\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import React from \"react\";\n\nimport * as hooks from \"../hooks\";\n\nexport type DialogPropsType = hooks.UseToggleReturnType &\n  JSX.IntrinsicElements[\"dialog\"];\n\nexport function Dialog(props: DialogPropsType) {\n  const { toggle: dialog, rest } = hooks.extractUseToggle(props);\n  const ref = React.useRef<HTMLDialogElement>(null);\n\n  React.useEffect(() => {\n    if (props.on) {\n      // @ts-ignore\n      ref.current?.showModal();\n    } else {\n      // @ts-ignore\n      ref.current?.close();\n    }\n  }, [props.on]);\n\n  hooks.useKeyboardShortcuts({ Escape: dialog.disable });\n  hooks.useAutofocus({ ref, condition: props.on });\n  hooks.useScrollLock(props.on);\n  hooks.useClickOutside(ref, dialog.disable);\n\n  return (\n    <dialog\n      ref={ref}\n      tabIndex={0}\n      data-display={props.on ? \"flex\" : \"none\"}\n      data-direction=\"column\"\n      data-mx=\"auto\"\n      data-p=\"24\"\n      data-position=\"fixed\"\n      data-z=\"2\"\n      data-bg=\"white\"\n      data-br=\"4\"\n      data-bc=\"gray-300\"\n      data-bw=\"1\"\n      data-backdrop=\"black\"\n      {...rest}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { useIsOnline } from \"../hooks\";\n\nexport function OfflineIndicator(props: { children: React.ReactChild }) {\n  const isOnline = useIsOnline();\n\n  if (isOnline) return null;\n\n  return <>{props.children}</>;\n}\n","import React from \"react\";\nimport type { PolymorphicPropsWithoutRef } from \"react-polymorphic-types\";\n\nconst OutboundLinkDefaultElement = \"a\";\n\nexport function OutboundLink<\n  T extends React.ElementType = typeof OutboundLinkDefaultElement\n  // biome-ignore lint: lint/complexity/noBannedTypes\n>(props: PolymorphicPropsWithoutRef<{}, T>) {\n  const { as, ...rest } = props;\n\n  const Element = as || OutboundLinkDefaultElement;\n\n  return <Element target=\"_blank\" rel=\"noreferer noopener\" {...rest} />;\n}\n","// biome-ignore lint: lint/complexity/noBannedTypes\ntype ExecFunctionListType = Function[];\n\nexport function exec(list: ExecFunctionListType) {\n  return function () {\n    for (const item of list) {\n      item();\n    }\n  };\n}\n","import React from \"react\";\n\nimport { useWindowDimensions } from \"../hooks/use-window-dimensions\";\nimport { useToggle } from \"../hooks/use-toggle\";\nimport { useField } from \"../hooks/use-field\";\nimport { exec } from \"../exec\";\n\nfunction Dimensions(props: JSX.IntrinsicElements[\"div\"]) {\n  const dimensions = useWindowDimensions();\n\n  return (\n    <div data-fs=\"12\" {...props}>\n      {dimensions.width} x {dimensions.height}\n    </div>\n  );\n}\n\nfunction Truncates() {\n  const enabled = useToggle();\n  const length = useField(\"length\", 128);\n\n  const [cache, setCache] = React.useState(new Map());\n\n  const handleTruncateClick = () => {\n    const elements = document.querySelectorAll('[data-transform=\"truncate\"]');\n\n    const updatedCache = new Map(cache);\n\n    elements.forEach((element) => {\n      const originalText = element.textContent;\n\n      if (!updatedCache.has(element)) {\n        updatedCache.set(element, originalText);\n        element.textContent = \"x\".repeat(length.value);\n      } else {\n        element.textContent = updatedCache.get(element);\n        updatedCache.delete(element);\n      }\n    });\n\n    setCache(updatedCache);\n  };\n\n  return (\n    <div data-display=\"flex\" data-cross=\"center\" data-gap=\"6\">\n      <label className=\"c-label\" {...length.label.props}>\n        Length\n      </label>\n\n      <input\n        className=\"c-input\"\n        type=\"number\"\n        value={length.value}\n        onChange={(event) => length.set(event.currentTarget.valueAsNumber)}\n        {...length.input.props}\n      />\n      <button\n        className=\"c-button\"\n        data-variant=\"bare\"\n        type=\"button\"\n        onClick={exec([() => handleTruncateClick(), enabled.toggle])}\n      >\n        {enabled.on ? \"Hide truncates\" : \"Expand truncates\"}\n      </button>\n    </div>\n  );\n}\n\nexport const DevTools = { Dimensions, Truncates };\n","import React, { Fragment } from \"react\";\n\nimport { UseFieldReturnType, extractUseField } from \"../hooks/use-field\";\n\nexport function Switch(\n  props: UseFieldReturnType<boolean> &\n    Omit<JSX.IntrinsicElements[\"input\"], \"label\" | \"value\">\n) {\n  const { field, rest } = extractUseField<\n    boolean,\n    Omit<JSX.IntrinsicElements[\"input\"], \"label\" | \"value\">\n  >(props);\n\n  return (\n    <>\n      <input\n        className=\"c-switch-checkbox c-visually-hidden\"\n        type=\"checkbox\"\n        checked={field.value}\n        onChange={(event) => field.set(event.currentTarget.checked)}\n        {...field.input.props}\n        {...rest}\n      />\n\n      <label className=\"c-switch-label\" {...field.label.props}>\n        <div className=\"c-switch-slider\" />\n      </label>\n    </>\n  );\n}\n","import { noop } from \"./noop\";\n\nexport type CopyToClipboardTextType = string;\ntype OnCopyToClipboardFailureType = (error?: unknown) => void;\ntype OnCopyToClipboardSuccessType = VoidFunction;\n\nconst defaultOnCopyToClipboardFailure: OnCopyToClipboardFailureType = (error) =>\n  console.warn(\"Copying to clipboard not supported\");\n\nexport type CopyToClipboardOptionsType = {\n  text: string;\n  onFailure?: OnCopyToClipboardFailureType;\n  onSuccess?: OnCopyToClipboardSuccessType;\n};\n\nexport async function copyToClipboard(options: CopyToClipboardOptionsType) {\n  const onFailure = options.onFailure ?? defaultOnCopyToClipboardFailure;\n  const onSuccess = options.onSuccess ?? noop;\n\n  if (!navigator.clipboard) onFailure();\n\n  try {\n    await navigator.clipboard.writeText(options.text);\n    onSuccess();\n  } catch (error) {\n    onFailure(error);\n  }\n}\n","import type { HourType } from \"@bgord/node/dist/schema\";\n\nimport * as Time from \"./time\";\n\nexport type DateType = Date | number | null | undefined;\n\nexport class DateFormatter {\n  static datetime(date: DateType, defaultValue = \"N/A\"): string {\n    if (!date) return defaultValue;\n\n    return new Date(date).toLocaleString();\n  }\n\n  static monthDay(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const days = DateFormatter._padDatePart(date.getDate());\n    const months = DateFormatter._padDatePart(date.getMonth() + 1);\n\n    return `${days}/${months}`;\n  }\n\n  static form(date: Date | null): string {\n    if (!date) return DateFormatter.form(new Date());\n\n    const year = DateFormatter._padDatePart(date.getFullYear());\n    const month = DateFormatter._padDatePart(date.getMonth() + 1);\n    const day = DateFormatter._padDatePart(date.getDate());\n\n    return `${year}-${month}-${day}`;\n  }\n\n  static clockUTC(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getUTCHours());\n    const minutes = DateFormatter._padDatePart(date.getUTCMinutes());\n    const seconds = DateFormatter._padDatePart(date.getUTCSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static clockLocal(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static countdown(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static formDatetimeLocal(timestamp: number) {\n    const localTimestamp =\n      timestamp - Time.Minutes(new Date().getTimezoneOffset()).ms;\n\n    return new Date(localTimestamp).toISOString().slice(0, 16);\n  }\n\n  static _padDatePart(value: number) {\n    return String(value).padStart(2, \"0\");\n  }\n}\n\nexport class HourFormatter {\n  static convertUtcToLocal(utcHour: HourType) {\n    const timeZoneOffsetInMins = new Date().getTimezoneOffset();\n\n    const utcHourInMins = Time.Hours(utcHour).minutes;\n\n    const localHourInMins = utcHourInMins - timeZoneOffsetInMins;\n    const localHour = (localHourInMins / 60) % 24;\n    const formattedLocalHour = `${String(localHour).padStart(2, \"0\")}:00`;\n\n    return { value: localHour, label: formattedLocalHour };\n  }\n}\n","import type { Schema } from \"@bgord/node\";\n\nexport class ETag {\n  static fromRevision(revision: Schema.RevisionType) {\n    return { \"if-match\": String(revision) };\n  }\n}\n\nexport type WeakETagValueType = string;\n\nexport class WeakETag {\n  static fromRevision(revision: Schema.RevisionType) {\n    return { \"if-match\": `W/${revision}` };\n  }\n}\n","import type { Schema } from \"@bgord/node\";\nimport React from \"react\";\n\nexport type FeatureFlagNameType = string;\n\nexport type FeatureFlagsContextValueType = {\n  flags: Record<FeatureFlagNameType, Schema.FeatureFlagType>;\n};\n\ntype FeatureFlagsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: FeatureFlagsContextValueType[\"flags\"];\n};\n\nconst FeatureFlagsContext = React.createContext<\n  FeatureFlagsContextValueType[\"flags\"]\n>({});\n\nexport function FeatureFlagsContextProvider(\n  props: FeatureFlagsContextPropsType\n) {\n  return (\n    <FeatureFlagsContext.Provider value={props.value}>\n      {props.children}\n    </FeatureFlagsContext.Provider>\n  );\n}\n\nexport function useFeatureFlags() {\n  const value = React.useContext(FeatureFlagsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      \"useFeatureFlags must be used within the FeatureFlagsContext\"\n    );\n  }\n\n  return value;\n}\n\nexport function useFeatureFlag(name: FeatureFlagNameType): boolean {\n  const value = React.useContext(FeatureFlagsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      \"useFeatureFlag must be used within the FeatureFlagsContext\"\n    );\n  }\n\n  return value[name] === \"yes\";\n}\n","export type FilterType = Record<string, unknown> | undefined;\n\nexport class FilterUrl {\n  value: string;\n\n  constructor(url: string, filters?: FilterType) {\n    const nonEmptyFilters = this.getNonEmptyFilters(filters);\n    const query = new URLSearchParams(nonEmptyFilters);\n\n    if (query.toString() === \"\") {\n      this.value = url;\n\n      return;\n    }\n\n    this.value = `${url}?${query.toString()}`;\n  }\n\n  private getNonEmptyFilters(filters: FilterType) {\n    if (filters === undefined) return {};\n\n    return Object.fromEntries(\n      Object.entries(filters).filter(([_key, value]) => value !== undefined)\n    ) as Record<string, string>;\n  }\n}\n","export type PatternConfigType = {\n  min?: number;\n  max?: number;\n  required?: JSX.IntrinsicElements[\"input\"][\"required\"];\n};\n\nexport class Form {\n  static pattern(\n    config: PatternConfigType\n  ): JSX.IntrinsicElements[\"textarea\"] & JSX.IntrinsicElements[\"input\"] {\n    const required = config.required ?? true;\n\n    if (config.min && !config.max)\n      return { pattern: `.{${config.min}}`, required };\n\n    if (config.min && config.max)\n      return { pattern: `.{${config.min},${config.max}}`, required };\n\n    if (!config.min && config.max)\n      return { pattern: `.{,${config.max}}`, required };\n\n    return { pattern: undefined, required };\n  }\n}\n","import { getSafeWindow } from \"./safe-window\";\n\nexport function isClient() {\n  return !getSafeWindow();\n}\n","export function LineClamp(lines = 2) {\n  return {\n    \"data-transform\": \"line-clamp\",\n    style: { \"--lines\": lines },\n  };\n}\n","type ApproximationValueType = number;\ntype ApproximationResultType = number;\ntype ApproximationDecimalPlacesType = number;\n\nexport class Approximation {\n  static float(\n    value: ApproximationValueType,\n    decimalPlaces: ApproximationDecimalPlacesType = 2\n  ): ApproximationResultType {\n    return Number.parseFloat(value.toFixed(decimalPlaces));\n  }\n}\n\ntype MinMaxScalerValueType = number;\n\ntype MinMaxScalerConfigType = {\n  min: MinMaxScalerValueType;\n  max: MinMaxScalerValueType;\n  bound?: {\n    lower: MinMaxScalerValueType;\n    upper: MinMaxScalerValueType;\n  };\n};\n\nexport class MinMaxScaler {\n  private readonly min: MinMaxScalerValueType;\n  private readonly max: MinMaxScalerValueType;\n  private readonly lower: MinMaxScalerValueType;\n  private readonly upper: MinMaxScalerValueType;\n\n  constructor(config: MinMaxScalerConfigType) {\n    const lower = config.bound?.lower ?? 0;\n    const upper = config.bound?.upper ?? 1;\n\n    if (config.max - config.min < 0) {\n      throw new Error(\"Invalid MinMaxScaler min-max config\");\n    }\n\n    if (upper - lower <= 0) {\n      throw new Error(\"Invalid MinMaxScaler bound config\");\n    }\n\n    this.min = config.min;\n    this.max = config.max;\n    this.lower = lower;\n    this.upper = upper;\n  }\n\n  scale(value: MinMaxScalerValueType) {\n    const { min, max, lower, upper } = this;\n\n    if (value < min || value > max) {\n      throw new Error(\"Value out of min/max range\");\n    }\n\n    if (min === max)\n      return {\n        original: value,\n        scaled: (lower + upper) / 2,\n        isMin: value === min,\n        isMax: value === max,\n      };\n\n    const result = ((value - min) / (max - min)) * (upper - lower) + lower;\n\n    return {\n      original: value,\n      scaled: Approximation.float(result, 2),\n      isMin: value === min,\n      isMax: value === max,\n    };\n  }\n\n  descale(scaled: MinMaxScalerValueType) {\n    const { min, max, lower, upper } = this;\n\n    if (scaled < lower || scaled > upper) {\n      throw new Error(\"Scaled value out of bounds\");\n    }\n\n    const result = ((scaled - lower) / (upper - lower)) * (max - min) + min;\n\n    return {\n      original: Approximation.float(result, 2),\n      scaled,\n      isLowerBound: scaled === lower,\n      isUpperBound: scaled === upper,\n    };\n  }\n\n  static getMinMax(values: MinMaxScalerValueType[]) {\n    if (values.length === 0) {\n      throw new Error(\"An empty array supplied\");\n    }\n\n    return { min: Math.min(...values), max: Math.max(...values) };\n  }\n}\n","import type { UseInfiniteQueryResult } from \"react-query\";\nimport type { Paged } from \"@bgord/node\";\n\nexport class Pagination {\n  static empty = { result: [], meta: { exhausted: true } };\n\n  static infinite<T>(infinite: UseInfiniteQueryResult<Paged<T>>): T[] {\n    return (\n      infinite.data?.pages\n        ?.flat()\n        .flatMap((data) => data.result) ?? []\n    );\n  }\n}\n\nexport type { Paged, PageType } from \"@bgord/node\";\n\nexport type PagedMetaType = Paged<unknown>[\"meta\"];\n","import React from \"react\";\n\ntype ReorderingBaseItemType = { id: string };\ntype ReorderingIndexType = number;\ntype ReorderingCorrelationIdType = string;\n\nexport type ReorderingTransferType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType,\n> = {\n  correlationId: ReorderingCorrelationIdType;\n  id: T[\"id\"];\n  item: T;\n  to: ReorderingIndexType;\n};\n\nexport type UseReorderingConfigType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType,\n> = {\n  correlationId: ReorderingCorrelationIdType;\n  initialItems: T[];\n  callback: (transfer: ReorderingTransferType<T>) => void;\n  enabled?: boolean;\n};\n\nexport type UseReorderingReturnType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType,\n> = {\n  items: T[];\n  enabled: boolean;\n  props: {\n    item: (index: ReorderingIndexType) => {\n      onDragOver: (event: React.DragEvent<HTMLElement>) => void;\n    };\n    handle: (index: ReorderingIndexType) => {\n      onDragStart: (event: React.DragEvent<HTMLElement>) => void;\n      onDragEnd: (event: React.DragEvent<HTMLElement>) => void;\n      draggable: UseReorderingConfigType<T>[\"enabled\"];\n    };\n  };\n};\n\nexport function useReordering<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType,\n>(config: UseReorderingConfigType<T>): UseReorderingReturnType<T> {\n  const enabled = config.enabled ?? true;\n\n  const [items, setItems] = React.useState<T[]>(config.initialItems);\n\n  // biome-ignore lint: lint/complexity/noForEach\n  React.useEffect(\n    () => setItems(config.initialItems),\n    [JSON.stringify(config.initialItems)],\n  );\n\n  const draggedItem = React.useRef<T | null>(null);\n\n  const [startIndex, setStartIndex] =\n    React.useState<ReorderingIndexType | null>(null);\n  const [toIndex, setToIndex] = React.useState<ReorderingIndexType | null>(\n    null,\n  );\n\n  function onDragStartFactory(index: ReorderingIndexType) {\n    return function onDragStart(event: React.DragEvent<HTMLElement>) {\n      setStartIndex(index);\n      draggedItem.current = items[index] ?? null;\n\n      if (!event?.dataTransfer || event.currentTarget.parentNode) return;\n\n      event.dataTransfer.effectAllowed = \"move\";\n      event.dataTransfer.setData(\n        \"text/html\",\n        event.currentTarget.parentNode as unknown as string,\n      );\n      event.dataTransfer.setDragImage(\n        event.currentTarget.parentNode as unknown as Element,\n        20,\n        20,\n      );\n    };\n  }\n\n  function onDragOverFactory(index: ReorderingIndexType) {\n    return function onDragOver(event: React.DragEvent<HTMLElement>) {\n      event.preventDefault();\n\n      const draggedOverItem = items[index];\n      setToIndex(index);\n\n      // if the item is dragged over itself, ignore\n      if (draggedItem.current === draggedOverItem || !draggedItem.current) {\n        return;\n      }\n\n      // filter out the currently dragged item\n      // add the dragged item after the dragged over item\n      setItems(\n        items\n          .filter((item) => item !== draggedItem.current)\n          .toSpliced(index, 0, draggedItem.current),\n      );\n    };\n  }\n\n  function onDragEndFactory(index: ReorderingIndexType) {\n    return function onDragEnd(_event: React.DragEvent<HTMLElement>) {\n      if (startIndex !== null && toIndex !== null && startIndex !== toIndex) {\n        config.callback({\n          correlationId: config.correlationId,\n          id: items[index]?.id as T[\"id\"],\n          item: items[index] as T,\n          to: toIndex as ReorderingIndexType,\n        });\n      }\n\n      setStartIndex(null);\n      draggedItem.current = null;\n      setToIndex(null);\n    };\n  }\n\n  const cursor = enabled ? (draggedItem.current ? \"grabbing\" : \"grab\") : \"auto\";\n\n  return {\n    items,\n    enabled,\n    props: {\n      item: (index: ReorderingIndexType) => ({\n        onDragOver: onDragOverFactory(index),\n      }),\n      handle: (index: ReorderingIndexType) => ({\n        onDragStart: onDragStartFactory(index),\n        onDragEnd: onDragEndFactory(index),\n        draggable: enabled,\n        style: { cursor },\n      }),\n    },\n  };\n}\n","export type RhythmBaseType = number;\nexport type RhythmTimesType = number;\n\nconst DEFAULT_BASE_PX = 12;\n\nexport function Rhythm(base: RhythmBaseType = DEFAULT_BASE_PX) {\n  return {\n    times(times: RhythmTimesType) {\n      const result = base * times;\n\n      const dimensions = {\n        height: { height: px(result) },\n        minHeight: { minHeight: px(result) },\n        maxHeight: { maxHeight: px(result) },\n        width: { width: px(result) },\n        minWidth: { minWidth: px(result) },\n        maxWidth: { maxWidth: px(result) },\n        square: { height: px(result), width: px(result) },\n      };\n\n      const style = {\n        height: { style: { height: px(result) } },\n        minHeight: { style: { minHeight: px(result) } },\n        maxHeight: { style: { maxHeight: px(result) } },\n        width: { style: { width: px(result) } },\n        minWidth: { style: { minWidth: px(result) } },\n        maxWidth: { style: { maxWidth: px(result) } },\n        square: { style: { height: px(result), width: px(result) } },\n      };\n\n      return { px: px(result), raw: result, style, ...dimensions };\n    },\n  };\n}\n\nfunction px(number: number) {\n  return `${number}px`;\n}\n","export class Sorts {\n  static updatedAtMostRecent<T extends { updatedAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.descending(a.updatedAt.raw, b.updatedAt.raw);\n  }\n\n  static updatedAtLeastRecent<T extends { updatedAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.ascending(a.updatedAt.raw, b.updatedAt.raw);\n  }\n\n  static createdAtMostRecent<T extends { createdAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.descending(a.createdAt.raw, b.createdAt.raw);\n  }\n\n  static createdAtLeastRecent<T extends { createdAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.ascending(a.createdAt.raw, b.createdAt.raw);\n  }\n\n  static aToZ(a: string, b: string): number {\n    return a.localeCompare(b);\n  }\n\n  static zToA(a: string, b: string): number {\n    return b.localeCompare(a);\n  }\n\n  static ascending(a: number, b: number): number {\n    return a > b ? 1 : 0;\n  }\n\n  static descending(a: number, b: number): number {\n    return a < b ? 1 : 0;\n  }\n}\n","export class ThousandsSeparator {\n  private static DEFAULT_SEPARATOR = ' ';\n\n  static format(\n    value: number,\n    separator = ThousandsSeparator.DEFAULT_SEPARATOR\n  ): string {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\n  }\n}\n","import React from \"react\";\nimport { useList } from \"./hooks/use-list\";\n\nexport type ToastsConfigType = {\n  timeout?: number;\n};\n\nexport type BaseToastType = {\n  id: string;\n  message: string;\n};\n\ntype ToastsContextDataType<ToastType extends BaseToastType = BaseToastType> = [\n  ToastType[],\n  {\n    add: (toast: Omit<ToastType, \"id\">) => void;\n    remove: (toast: ToastType) => void;\n    clear: VoidFunction;\n  }\n];\n\nconst ToastsContext = React.createContext<ToastsContextDataType | undefined>(\n  undefined\n);\n\nexport function ToastsContextProvider(\n  props: { children: JSX.Element | JSX.Element[] } & ToastsConfigType\n) {\n  function useToastsImplementation(): ToastsContextDataType {\n    const timeout = props?.timeout ?? 5000;\n\n    const [toasts, actions] = useList<BaseToastType>({\n      comparisonFn: (a, b) => a.id === b.id,\n    });\n\n    function add(payload: Omit<BaseToastType, \"id\">) {\n      const id = String(Date.now());\n      const toast = { ...payload, id };\n\n      actions.add(toast);\n      setTimeout(() => actions.remove(toast), timeout);\n    }\n\n    return [\n      toasts.toReversed(),\n      { add, remove: actions.remove, clear: actions.clear },\n    ];\n  }\n\n  const [toasts, actions] = useToastsImplementation();\n\n  return (\n    <ToastsContext.Provider value={[toasts, actions]}>\n      {props.children}\n    </ToastsContext.Provider>\n  );\n}\n\nexport function useToastsContext<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const context = React.useContext<ToastsContextDataType<ToastType>>(\n    ToastsContext as unknown as React.Context<ToastsContextDataType<ToastType>>\n  );\n\n  if (context === undefined) {\n    throw new Error(\"useToasts must be used within the ToastsContextProvider\");\n  }\n\n  return context;\n}\n\nexport function useToastTrigger<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const [, actions] = useToastsContext<ToastType>();\n\n  return actions.add;\n}\n"],"names":["ServerError","constructor","config","message","_known","this","static","value","Object","hasOwnProperty","response","ok","error","json","isServerError","payload","API","input","init","fetch","_extends","mode","redirect","headers","Date","getTimezoneOffset","toString","then","extract","catch","handle","DurationFormatter","duration","minutes","Math","floor","seconds","String","padStart","useField","name","defaultValue","evaluatedDefaultValue","setValue","useState","useEffect","set","handleChange","event","currentTarget","clear","label","props","htmlFor","id","changed","unchanged","extractUseField","field","rest","_objectWithoutPropertiesLoose","_excluded","Fields","fields","every","some","AUDIO_DEFAULT_VOLUME","UseAudioState","useAudio","src","state","setState","React","initial","ref","useRef","currentTime","volume","muted","percentage","round","seek","target","current","valueAsNumber","changeVolume","audio","onTimeUpdate","onLoadedMetadata","ready","onEnded","paused","controls","player","min","step","max","onInput","style","actions","play","playing","pause","mute","unmute","reset","meta","isInitial","isReady","isPlaying","isPaused","matches","states","given","raw","formatted","format","useAutofocus","condition","_config$ref$current","focus","getSafeWindow","window","useWindowDimensions","windowSize","setWindowSize","width","undefined","height","safeWindow","addEventListener","handleResize","removeEventListener","innerWidth","innerHeight","useBreakpoint","breakpoint","dimensions","_dimensions$width","useClickOutside","onClickOutside","exclude","document","handleClickOutside","_ref$current","contains","node","_node$current","usePreviousValue","previousValue","noop","useClientFilter","defaultQuery","_config$defaultQuery","currentQuery","_config$currentQuery","filterFn","_config$filterFn","query","options","keys","enum","onUpdate","_config$onUpdate","setQuery","previousQuery","onChange","newQuery","isNewQueryInEnum","Boolean","useClientSearch","toLowerCase","includes","defaultSortFn","useClientSort","default","sortFn","_config$options$state","newSort","isNewSortInEnum","Days","hours","ms","Hours","Minutes","Seconds","Time","getCurrentTimestamp","now","useCurrentTimestamp","timestamp","setTimestamp","timer","setInterval","clearInterval","useDebounce","debouncedValue","setDebouncedValue","setTimeout","delayMs","clearTimeout","useToggle","on","setIsOn","off","enable","disable","toggle","v","controller","extractUseToggle","_props","useDelayedLoader","delayedLoader","delayElapsed","timeoutId","isLoading","useDesignMode","designMode","useDisablePullToRefresh","useLayoutEffect","html","querySelector","body","originalHtmlOverscrollBehavior","getComputedStyle","overscrollBehavior","originalBodyOverflowBehavior","useDocumentTitle","title","UseExpandableListState","UseFileState","useExpandableList","numberOfExcessiveElements","length","areThereExcessiveElements","getState","contracted","expanded","displayShowMore","displayShowLess","showMore","showLess","_element","index","useFile","maxSize","_config$maxSize","Number","POSITIVE_INFINITY","key","setKey","idle","file","setFile","selectFile","files","size","selected","clearFile","preview","useMemo","URL","createObjectURL","isIdle","isSelected","isError","data","multiple","useKeyboardShortcuts","enabled","_options$enabled","unsubscribeShortcuts","tinykeys","useFocusKeyboardShortcut","shortcut","useHover","_config$enabled","isHovering","handleMouseEnter","handleMouseLeave","attach","emptyImageResolution","getImageResolution","path","img","createElement","promise","Promise","resolve","reject","onload","onerror","useImageFileResolution","resolution","async","result","execute","_file$data","useIsOnline","onlineStatus","navigator","onLine","handleOnline","handleOffline","defaultUseIsVisibleConfig","threshold","root","rootMargin","isIntersectionObserverSupported","IntersectionObserverEntry","prototype","useIsVisible","isVisible","setVisible","element","observer","IntersectionObserver","entry","_entry$","isIntersecting","observe","unobserve","defaultComparisonFn","a","b","useItem","comparisonFn","_config$comparisonFn","item","setItem","_config$defaultItem","defaultItem","newer","isDefault","exists","compare","KeyNameEnum","PluralizationSupportedLanguages","useKeyHandler","executor","pluralize","language","en","_options$plural","plural","singular","pl","_options$value","polishPlurals","genitive","console","warn","TranslationsContext","createContext","translations","TranslationsContextProvider","Provider","children","useTranslations","useContext","Error","variables","translation","entries","reduce","placeholder","replace","useLanguage","usePluralize","useLanguageSelector","supportedLanguages","previous","Cookies","location","reload","useLeavingPrompt","handler","e","preventDefault","useList","defaultItems","_config$defaultItems","items","setItems","add","Array","isArray","remove","filter","x","isAdded","update","useMetaEnterSubmit","onKeyDown","metaKey","_event$currentTarget$","form","dispatchEvent","Event","cancelable","usePagination","previousPage","_meta$value","nextPage","_meta$value2","lastPage","_meta$value3","page","last","firstPage","active","disabled","go","updated","SafeLocalStorage","fallbackValue","Storage","get","usePersistentToggle","RateLimiter","lastInvocationTimestamp","verify","currentTimestamp","allowed","nextAllowedTimestamp","limitMs","remainingMs","useRateLimiter","rateLimiter","args","action","fallback","useScroll","scrollPosition","setScrollPosition","scrollbarVisibility","measure","scrollY","clientHeight","scrollHeight","goToTop","scrollTo","top","left","behavior","position","hasChanged","visible","hidden","useScrollLock","originalHtmlOverflow","overflow","useSound","Audio","bind","useUrlFilter","_URLSearchParams$get","URLSearchParams","search","url","params","delete","history","pushState","VIDEO_DEFAULT_VOLUME","UseVideoState","useVideo","video","triggerFullscreen","requestFullscreen","Dialog","dialog","hooks","_ref$current2","showModal","close","Escape","tabIndex","OfflineIndicator","OutboundLink","as","rel","exec","list","DevTools","Dimensions","Truncates","cache","setCache","Map","className","type","onClick","handleTruncateClick","elements","querySelectorAll","updatedCache","forEach","originalText","textContent","has","repeat","Switch","checked","defaultOnCopyToClipboardFailure","copyToClipboard","onFailure","_options$onFailure","onSuccess","_options$onSuccess","clipboard","writeText","text","DateFormatter","date","toLocaleString","_padDatePart","getDate","getMonth","getFullYear","getUTCHours","getUTCMinutes","getUTCSeconds","getHours","getMinutes","getSeconds","localTimestamp","toISOString","slice","HourFormatter","utcHour","timeZoneOffsetInMins","localHour","ETag","revision","WeakETag","FeatureFlagsContext","FeatureFlagsContextProvider","useFeatureFlags","useFeatureFlag","FilterUrl","filters","nonEmptyFilters","getNonEmptyFilters","fromEntries","_key","Form","required","_config$required","pattern","isClient","LineClamp","lines","Approximation","decimalPlaces","parseFloat","toFixed","MinMaxScaler","lower","upper","_config$bound$lower","_config$bound","bound","_config$bound$upper","_config$bound2","scale","original","scaled","isMin","isMax","float","descale","isLowerBound","isUpperBound","values","Pagination","infinite","_infinite$data$pages$","_infinite$data","_infinite$data$pages","pages","flat","flatMap","useReordering","initialItems","JSON","stringify","draggedItem","startIndex","setStartIndex","toIndex","setToIndex","onDragStartFactory","_items$index","dataTransfer","parentNode","effectAllowed","setData","setDragImage","onDragOverFactory","draggedOverItem","toSpliced","onDragEndFactory","_event","_items$index2","callback","correlationId","to","cursor","onDragOver","onDragStart","onDragEnd","draggable","Rhythm","base","times","px","minHeight","maxHeight","minWidth","maxWidth","square","number","empty","exhausted","Sorts","descending","updatedAt","ascending","createdAt","localeCompare","ThousandsSeparator","separator","DEFAULT_SEPARATOR","ToastsContext","ToastsContextProvider","toasts","timeout","_props$timeout","toReversed","toast","useToastsImplementation","useToastsContext","context","useToastTrigger"],"mappings":"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"}