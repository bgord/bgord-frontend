{"version":3,"file":"bgord-frontend.modern.js","sources":["../hooks/use-toggle.ts","../hooks/use-window-dimensions.ts","../hooks/use-scroll-lock.ts","../hooks/use-previous-value.ts","../hooks/use-expandable-list.ts","../hooks/use-file.ts"],"sourcesContent":["import { useState } from \"react\";\n\nexport function useToggle(defaultValue = false) {\n  const [on, setIsOn] = useState(defaultValue);\n\n  const enable = () => setIsOn(true);\n  const disable = () => setIsOn(false);\n  const toggle = () => setIsOn((v) => !v);\n\n  return { on, off: !on, enable, disable, toggle };\n}\n","import { useState, useEffect } from \"react\";\n\nexport type WindowDimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowDimensions(): WindowDimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowDimensions>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useScrollLock(condition = true) {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overflows\n    const originalBodyOverflow = window.getComputedStyle(body).overflow;\n    const originalHtmlOverflow = window.getComputedStyle(html).overflow;\n\n    // Prevent scrolling on mount\n    body.style.overflow = \"hidden\";\n    html.style.overflow = \"hidden\";\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      body.style.overflow = originalBodyOverflow;\n      html.style.overflow = originalHtmlOverflow;\n    };\n  }, [condition]);\n}\n","import { useEffect, useRef } from \"react\";\n\nexport function usePreviousValue<T>(value: T) {\n  const previousValue = useRef<T | null>(null);\n\n  useEffect(() => {\n    previousValue.current = value;\n  });\n\n  return previousValue.current;\n}\n","import { useState, useEffect } from \"react\";\n\nexport type UseExpandableListConfigType = { max: number; length: number };\n\nexport enum UseExpandableListState {\n  contracted = \"contracted\",\n  expanded = \"expanded\",\n}\n\nexport function useExpandableList(config: UseExpandableListConfigType) {\n  const numberOfExcessiveElements = config.length - config.max;\n  const areThereExcessiveElements = config.length > config.max;\n\n  function getState() {\n    return areThereExcessiveElements\n      ? UseExpandableListState.contracted\n      : UseExpandableListState.expanded;\n  }\n\n  const [state, setState] = useState<UseExpandableListState>(getState);\n\n  useEffect(() => setState(getState()), [config.length, config.max]);\n\n  function showMore() {\n    if (state === UseExpandableListState.contracted) {\n      setState(UseExpandableListState.expanded);\n    }\n  }\n\n  function showLess() {\n    if (state === UseExpandableListState.expanded) {\n      setState(UseExpandableListState.contracted);\n    }\n  }\n\n  function filterFn(_element: any, index: number) {\n    if (state === UseExpandableListState.expanded) return true;\n    return index < config.max;\n  }\n\n  return {\n    state,\n    displayShowMore: state === UseExpandableListState.contracted,\n    displayShowLess:\n      state === UseExpandableListState.expanded && areThereExcessiveElements,\n    showMore,\n    showLess,\n    numberOfExcessiveElements,\n    filterFn,\n  };\n}\n","import { useState } from \"react\";\n\nexport type UseFileConfigType = {\n  maxSize?: number;\n};\n\nexport enum UseFileState {\n  \"idle\" = \"idle\",\n  \"selected\" = \"selected\",\n  \"error\" = \"error\",\n}\n\ntype UseFileIdle = {\n  state: UseFileState.idle;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): void;\n    clearFile: VoidFunction;\n  };\n};\n\ntype UseFileSelected = {\n  state: UseFileState.selected;\n  data: File;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): void;\n    clearFile: VoidFunction;\n  };\n};\n\ntype UseFileError = {\n  state: UseFileState.error;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): void;\n    clearFile: VoidFunction;\n  };\n};\n\nexport function useFile(\n  config?: UseFileConfigType\n): UseFileIdle | UseFileSelected | UseFileError {\n  const maxSize = config?.maxSize ?? Infinity;\n\n  const [state, setState] = useState<UseFileState>(UseFileState.idle);\n\n  const [file, setFile] = useState<File | null>(null);\n\n  function selectFile(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.currentTarget.files;\n\n    if (!files || !files[0]) return;\n\n    const file = files[0];\n\n    if (file.size > maxSize) return setState(UseFileState.error);\n\n    setFile(file);\n    setState(UseFileState.selected);\n  }\n\n  function clearFile() {\n    setFile(null);\n    setState(UseFileState.idle);\n  }\n\n  const actions = { selectFile, clearFile };\n\n  if (state === UseFileState.idle) {\n    return { state, data: null, actions };\n  }\n\n  if (state === UseFileState.selected) {\n    return { state, data: file as File, actions };\n  }\n\n  return { state, data: null, actions };\n}\n"],"names":["useToggle","defaultValue","on","setIsOn","useState","off","enable","disable","toggle","v","useWindowDimensions","windowSize","setWindowSize","width","undefined","height","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useScrollLock","condition","useLayoutEffect","html","document","querySelector","body","originalBodyOverflow","getComputedStyle","overflow","originalHtmlOverflow","style","usePreviousValue","value","previousValue","useRef","current","UseExpandableListState","UseFileState","useExpandableList","config","numberOfExcessiveElements","length","max","areThereExcessiveElements","getState","contracted","expanded","state","setState","displayShowMore","displayShowLess","showMore","showLess","filterFn","_element","index","useFile","maxSize","Infinity","idle","file","setFile","actions","selectFile","event","files","currentTarget","size","error","selected","clearFile","data"],"mappings":"0FAEgBA,EAAUC,GAAe,GACvC,MAAOC,EAAIC,GAAWC,EAASH,GAM/B,MAAO,CAAEC,GAAAA,EAAIG,KAAMH,EAAII,OAJR,IAAMH,GAAQ,GAIEI,QAHf,IAAMJ,GAAQ,GAGUK,OAFzB,IAAML,EAASM,IAAOA,aCAvBC,IAGd,MAAOC,EAAYC,GAAiBR,EAA2B,CAC7DS,WAAOC,EACPC,YAAQD,IAuBV,OApBAE,EAAU,KAER,SAASC,IAEPL,EAAc,CACZC,MAAOK,OAAOC,WACdJ,OAAQG,OAAOE,cAWnB,OANAF,OAAOG,iBAAiB,SAAUJ,GAGlCA,IAGO,IAAMC,OAAOI,oBAAoB,SAAUL,IACjD,IAEIN,WCjCOY,EAAcC,GAAY,GACxCC,EAAgB,KACd,IAAKD,EAAW,OAEhB,MAAME,EAAOC,SAASC,cAAc,QAC9BC,EAAOF,SAASE,KAGhBC,EAAuBZ,OAAOa,iBAAiBF,GAAMG,SACrDC,EAAuBf,OAAOa,iBAAiBL,GAAMM,SAO3D,OAJAH,EAAKK,MAAMF,SAAW,SACtBN,EAAKQ,MAAMF,SAAW,SAGf,KACLH,EAAKK,MAAMF,SAAWF,EACtBJ,EAAKQ,MAAMF,SAAWC,IAEvB,CAACT,aCpBUW,EAAoBC,GAClC,MAAMC,EAAgBC,EAAiB,MAMvC,OAJAtB,EAAU,KACRqB,EAAcE,QAAUH,IAGnBC,EAAcE,QCLXC,IAAAA,ECEAC,WDGIC,EAAkBC,GAChC,MAAMC,EAA4BD,EAAOE,OAASF,EAAOG,IACnDC,EAA4BJ,EAAOE,OAASF,EAAOG,IAEzD,SAASE,IACP,OAAOD,EACHP,EAAuBS,WACvBT,EAAuBU,SAG7B,MAAOC,EAAOC,GAAYhD,EAAiC4C,GAqB3D,OAnBAhC,EAAU,IAAMoC,EAASJ,KAAa,CAACL,EAAOE,OAAQF,EAAOG,MAmBtD,CACLK,MAAAA,EACAE,gBAAiBF,IAAUX,EAAuBS,WAClDK,gBACEH,IAAUX,EAAuBU,UAAYH,EAC/CQ,SAtBF,WACMJ,IAAUX,EAAuBS,YACnCG,EAASZ,EAAuBU,WAqBlCM,SAjBF,WACML,IAAUX,EAAuBU,UACnCE,EAASZ,EAAuBS,aAgBlCL,0BAAAA,EACAa,SAbF,SAAkBC,EAAeC,GAC/B,OAAIR,IAAUX,EAAuBU,UAC9BS,EAAQhB,EAAOG,eCEVc,EACdjB,SAEA,MAAMkB,iBAAUlB,SAAAA,EAAQkB,WAAWC,UAE5BX,EAAOC,GAAYhD,EAAuBqC,EAAasB,OAEvDC,EAAMC,GAAW7D,EAAsB,MAoBxC8D,EAAU,CAAEC,WAlBlB,SAAoBC,GAClB,MAAMC,EAAQD,EAAME,cAAcD,MAElC,IAAKA,IAAUA,EAAM,GAAI,OAEzB,MAAML,EAAOK,EAAM,GAEnB,GAAIL,EAAKO,KAAOV,EAAS,OAAOT,EAASX,EAAa+B,OAEtDP,EAAQD,GACRZ,EAASX,EAAagC,WAQMC,UAL9B,WACET,EAAQ,MACRb,EAASX,EAAasB,QAKxB,OAAIZ,IAAUV,EAAasB,KAClB,CAAEZ,MAAAA,EAAOwB,KAAM,KAAMT,QAAAA,GAG1Bf,IAAUV,EAAagC,SAClB,CAAEtB,MAAAA,EAAOwB,KAAMX,EAAcE,QAAAA,GAG/B,CAAEf,MAAAA,EAAOwB,KAAM,KAAMT,QAAAA,IDxE9B,SAAY1B,GACVA,0BACAA,sBAFF,CAAYA,IAAAA,OCEZ,SAAYC,GACVA,cACAA,sBACAA,gBAHF,CAAYA,IAAAA"}