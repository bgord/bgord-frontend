{"version":3,"file":"bgord-frontend.modern.js","sources":["../hooks/use-previous-value.ts","../anima.tsx","../server-error.ts","../api.ts","../durations.ts","../hooks/use-field.ts","../hooks/use-audio.ts","../hooks/use-autofocus.ts","../safe-window.ts","../hooks/use-window-dimensions.ts","../hooks/use-breakpoint.ts","../hooks/use-click-outside.ts","../noop.ts","../hooks/use-client-filter.ts","../hooks/use-client-search.ts","../hooks/use-client-sort.ts","../time.ts","../hooks/use-current-timestamp.ts","../hooks/use-debounce.ts","../hooks/use-toggle.ts","../hooks/use-delayed-loader.ts","../hooks/use-design-mode.ts","../hooks/use-disable-pull-to-refresh.ts","../hooks/use-document-title.ts","../hooks/use-expandable-list.ts","../hooks/use-file.ts","../hooks/use-keyboard-shortcuts.ts","../hooks/use-focus-keyboard-shortcut.ts","../hooks/use-hover.ts","../get-image-resolution.ts","../hooks/use-image-file-resolution.ts","../hooks/use-is-online.ts","../hooks/use-is-visible.ts","../hooks/use-item.ts","../hooks/use-keyboard-handler.ts","../pluralize.ts","../translations.tsx","../hooks/use-language-selector.ts","../hooks/use-leaving-prompt.ts","../hooks/use-list.ts","../hooks/use-meta-enter-submit.ts","../hooks/use-pagination.ts","../safe-local-storage.ts","../hooks/use-persistent-toggle.ts","../rate-limiter.ts","../hooks/use-rate-limiter.ts","../hooks/use-scroll.ts","../hooks/use-scroll-lock.ts","../hooks/use-sound.ts","../hooks/use-url-filter.ts","../hooks/use-video.ts","../components/dialog.tsx","../components/offline-indicator.tsx","../components/outbound-link.tsx","../exec.ts","../components/dev-tools.tsx","../components/switch.tsx","../copy-to-clipboard.ts","../dates.ts","../etag.ts","../feature-flags.tsx","../filter-url.ts","../form.ts","../is-client.ts","../line-clamp.ts","../min-max-scaler.ts","../pagination.ts","../reordering.ts","../rhythm.ts","../sorts.ts","../thousands-separator.ts","../toasts.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport function usePreviousValue<T>(\n  value: T,\n  defaultValue?: T | undefined\n): T | undefined {\n  const previousValue = useRef<T | undefined>(defaultValue);\n\n  useEffect(() => {\n    previousValue.current = value;\n  });\n\n  return previousValue.current;\n}\n","import React from \"react\";\n\nimport { usePreviousValue } from \"./hooks/use-previous-value\";\n\nexport enum AnimaState {\n  appearing = \"appearing\",\n  appeared = \"appeared\",\n  hiding = \"hiding\",\n  hidden = \"hidden\",\n}\n\nexport type AnimaEffectType = string;\n\nexport type AnimaConfigType = {\n  children: JSX.Element;\n\n  visible: boolean;\n  effect: AnimaEffectType;\n\n  duration?: number;\n  isInitial?: boolean;\n};\n\nexport function Anima(props: AnimaConfigType) {\n  const duration = props.duration ?? 300;\n\n  function getInitialState() {\n    if (!props.visible) return AnimaState.hidden;\n    if (props.isInitial) return AnimaState.appeared;\n    return AnimaState.appearing;\n  }\n\n  const [state, setState] = React.useState<AnimaState>(getInitialState);\n  const previousState = usePreviousValue(state);\n\n  React.useEffect(() => {\n    if (props.isInitial) return;\n\n    if (props.visible) {\n      setState(AnimaState.appearing);\n      setTimeout(() => setState(AnimaState.appeared), 100);\n    } else {\n      if (!previousState) return;\n      setState(AnimaState.hiding);\n      setTimeout(() => setState(AnimaState.hidden), duration);\n    }\n  }, [props.visible]);\n\n  if (state === AnimaState.hidden) return null;\n\n  return React.cloneElement(props.children, {\n    \"data-anima\": state,\n    \"data-anima-effect\": props.effect,\n    style: { \"--duration\": `${duration}ms`, ...props.children.props.style },\n  });\n}\n\nexport function getAnimaProps(props: Record<string, any>) {\n  return {\n    \"data-anima\": props[\"data-anima\"] as AnimaState | undefined,\n    \"data-anima-effect\": props[\"data-anima-effect\"] as\n      | AnimaEffectType\n      | undefined,\n    style: props.style as React.CSSProperties,\n  };\n}\n\nexport type AnimaListPropsType = {\n  children: JSX.Element[];\n} & JSX.IntrinsicElements[\"ul\"];\n\nexport function AnimaList(props: AnimaListPropsType) {\n  const { children, ...rest } = props;\n\n  const [isInitial, setIsInitial] = React.useState<boolean>(true);\n\n  React.useEffect(() => setIsInitial(false), []);\n\n  return (\n    <ul {...rest}>\n      {props.children.map((child) => React.cloneElement(child, { isInitial }))}\n    </ul>\n  );\n}\n\nexport type UseAnimaListDirectionType = \"head\" | \"tail\";\n\nexport type UseAnimaListConfigType = {\n  direction?: UseAnimaListDirectionType;\n  duration?: number;\n};\n\nexport type UseAnimaListItemType<T> = { item: T; props: { visible: boolean } };\n\ntype UseAnimaListReturnType<T> = {\n  items: { item: T; props: { visible: boolean } }[];\n  count: number;\n};\n\nexport function useAnimaList<T extends { id: string }>(\n  list: T[],\n  config?: UseAnimaListConfigType\n): UseAnimaListReturnType<T> {\n  const duration = config?.duration ?? 300;\n  const direction = config?.direction ?? \"head\";\n\n  const [officialList, setOfficialList] = React.useState<\n    UseAnimaListItemType<T>[]\n  >(list.map((item) => ({ item, props: { visible: true } })));\n\n  let added: T[] = [];\n\n  for (const item of list) {\n    const wasAdded = !officialList\n      .map((x) => x.item)\n      .some((x) => item.id === x.id);\n\n    if (wasAdded) added.push(item);\n  }\n\n  React.useEffect(() => {\n    if (added.length === 0) return;\n\n    if (direction === \"head\") {\n      setOfficialList((officialList) => [\n        ...added.map((item) => ({ item, props: { visible: true } })),\n        ...officialList,\n      ]);\n    } else {\n      setOfficialList((officialList) => [\n        ...officialList,\n        ...added.map((item) => ({ item, props: { visible: true } })),\n      ]);\n    }\n\n    added = [];\n  }, [added.length, direction]);\n\n  let deleted: T[] = [];\n\n  for (const { item } of officialList) {\n    const wasDeleted = list.every((x) => x.id !== item.id);\n\n    if (wasDeleted) deleted.push(item);\n  }\n\n  React.useEffect(() => {\n    if (deleted.length === 0) return;\n\n    setOfficialList((officialList) =>\n      officialList.map((x) => {\n        const wasDeleted = deleted.some((item) => item.id === x.item.id);\n\n        return wasDeleted ? { ...x, props: { visible: false } } : x;\n      })\n    );\n\n    deleted = [];\n  }, [deleted.length]);\n\n  return {\n    items: officialList.map((item) => {\n      const updated = list.find((y) => y.id === item.item.id);\n      return updated ? { ...item, item: updated } : item;\n    }),\n    count: officialList.filter((x) => x.props.visible).length,\n  };\n}\n","export type ServerErrorConfigType = {\n  message: string;\n};\n\nexport class ServerError {\n  message: ServerErrorConfigType[\"message\"];\n\n  _known = true;\n\n  constructor(config: ServerErrorConfigType) {\n    this.message = config.message;\n  }\n\n  static isServerError(value: unknown): value is ServerError {\n    if (\n      value &&\n      typeof value === \"object\" &&\n      value === Object(value) &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"_known\") &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"message\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  static async extract(response: Response) {\n    if (response.ok) return response;\n\n    const error = await response.json();\n\n    const message = ServerError.isServerError(error)\n      ? error.message\n      : \"app.error.general\";\n\n    throw new ServerError({ message });\n  }\n\n  static async handle(payload: unknown): Promise<Response> {\n    throw new ServerError({\n      message: ServerError.isServerError(payload)\n        ? payload.message\n        : \"app.error.general\",\n    });\n  }\n}\n","import { ServerError } from \"./server-error\";\n\nexport const API: typeof fetch = (input, init) =>\n  fetch(input, {\n    mode: \"same-origin\",\n    redirect: \"follow\",\n    ...init,\n    headers: {\n      \"Content-Type\": \"application/json\",\n\n      \"time-zone-offset\": new Date().getTimezoneOffset().toString(),\n      ...init?.headers,\n    },\n  })\n    .then(ServerError.extract)\n    .catch(ServerError.handle);\n","export class DurationFormatter {\n  static format(duration: number) {\n    const minutes = Math.floor(duration / 60);\n    const seconds = duration % 60;\n\n    const formattedMinutes = String(minutes).padStart(2, \"0\");\n    const formattedSeconds = String(seconds).padStart(2, \"0\");\n\n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n","import { useEffect, useState, Dispatch, SetStateAction } from \"react\";\n\nexport type UseFieldDefaultValueType<T> = T | (() => T);\nexport type UseFieldNameType = string;\n\nexport type UseFieldReturnType<T> = {\n  value: T;\n  set: Dispatch<SetStateAction<T>>;\n  clear: VoidFunction;\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  label: { props: { htmlFor: UseFieldNameType } };\n  input: { props: { id: UseFieldNameType; name: UseFieldNameType } };\n  changed: boolean;\n  unchanged: boolean;\n};\n\nexport function useField<T>(\n  name: UseFieldNameType,\n  defaultValue: UseFieldDefaultValueType<T>\n): UseFieldReturnType<T> {\n  const evaluatedDefaultValue =\n    // @ts-ignore\n    typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n\n  const [value, setValue] = useState(evaluatedDefaultValue);\n\n  useEffect(() => setValue(evaluatedDefaultValue), [evaluatedDefaultValue]);\n\n  return {\n    value,\n    set: setValue,\n    handleChange: (event: React.ChangeEvent<HTMLInputElement>) =>\n      setValue(event.currentTarget.value),\n    clear: () => setValue(evaluatedDefaultValue),\n    label: { props: { htmlFor: name } },\n    input: { props: { id: name, name: name } },\n    changed: value !== evaluatedDefaultValue,\n    unchanged: value == evaluatedDefaultValue,\n  };\n}\n\nexport function extractUseField<T, X>(\n  props: UseFieldReturnType<T> & X\n): { field: UseFieldReturnType<T>; rest: X } {\n  // prettier-ignore\n  const { value, set, clear, label, input, changed, unchanged, handleChange, ...rest } = props;\n\n  // prettier-ignore\n  return {\n    field: { value, set, clear, label, input, changed, unchanged, handleChange },\n    rest: rest as X,\n  };\n}\n","import * as React from \"react\";\n\nimport { DurationFormatter } from \"../durations\";\nimport { useField } from \"./use-field\";\n\nexport type UseAudioSrcType = string;\n\ntype AudioDurationType = number;\ntype AudioCurrentTimeType = number;\ntype AudioVolumeType = number;\n\nexport const AUDIO_DEFAULT_VOLUME: AudioVolumeType = 1;\n\nexport enum UseAudioState {\n  \"initial\" = \"initial\",\n  \"ready\" = \"ready\",\n  \"playing\" = \"playing\",\n  \"paused\" = \"paused\",\n}\n\nexport type UseAudioReturnType = {\n  props: {\n    audio: {\n      src: UseAudioSrcType;\n      onTimeUpdate: (event: Event) => void;\n      onLoadedMetadata: (event: Event) => void;\n      onEnded: (event: Event) => void;\n      controls: false;\n    };\n    player: {\n      min: 0;\n      step: 1;\n      max: AudioDurationType;\n      value: AudioDurationType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n    volume: {\n      min: 0;\n      max: 1;\n      step: 0.01;\n      value: AudioVolumeType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n  };\n  actions: {\n    play: VoidFunction;\n    pause: VoidFunction;\n    mute: VoidFunction;\n    unmute: VoidFunction;\n    reset: VoidFunction;\n    seek: (event: Event) => void;\n    changeVolume: (event: Event) => void;\n  };\n\n  meta: {\n    state: UseAudioState;\n    isInitial: boolean;\n    isReady: boolean;\n    isPlaying: boolean;\n    isPaused: boolean;\n    matches: (states: UseAudioState[]) => boolean;\n    percentage: {\n      raw: number;\n      formatted: string;\n    };\n    currentTime: {\n      raw: AudioCurrentTimeType;\n      formatted: string;\n    };\n    duration: {\n      raw: AudioDurationType;\n      formatted: string;\n    };\n    volume: {\n      value: AudioVolumeType;\n      raw: number;\n      formatted: string;\n    };\n    muted: boolean;\n  };\n};\n\nexport function useAudio(src: UseAudioSrcType): UseAudioReturnType {\n  const [state, setState] = React.useState<UseAudioState>(\n    UseAudioState.initial\n  );\n\n  const ref = React.useRef<HTMLAudioElement | null>(null);\n\n  const duration = useField<AudioDurationType>(\"duration\", 0);\n  const currentTime = useField<AudioCurrentTimeType>(\"currentTime\", 0);\n  const volume = useField<AudioVolumeType>(\"volume\", AUDIO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (ref.current) {\n      ref.current.play();\n      setState(UseAudioState.playing);\n    }\n  }\n\n  function pause() {\n    if (ref.current) {\n      ref.current.pause();\n      setState(UseAudioState.paused);\n    }\n  }\n\n  function reset() {\n    if (ref.current) {\n      ref.current.currentTime = 0;\n      ref.current.pause();\n      currentTime.set(0);\n      setState(UseAudioState.paused);\n    }\n  }\n\n  function mute() {\n    if (ref.current) {\n      ref.current.volume = 0;\n      volume.set(0);\n    }\n  }\n\n  function unmute() {\n    if (ref.current) {\n      ref.current.volume = AUDIO_DEFAULT_VOLUME;\n      volume.set(AUDIO_DEFAULT_VOLUME);\n    }\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.currentTime = target.valueAsNumber;\n      currentTime.set(target.valueAsNumber);\n    }\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLAudioElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(UseAudioState.ready);\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLAudioElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(UseAudioState.paused);\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.volume = target.valueAsNumber;\n      volume.set(target.valueAsNumber);\n    }\n  }\n\n  return {\n    props: {\n      audio: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: { play, pause, mute, unmute, reset, seek, changeVolume },\n    meta: {\n      state,\n      isInitial: state === UseAudioState.initial,\n      isReady: state === UseAudioState.ready,\n      isPlaying: state === UseAudioState.playing,\n      isPaused: state === UseAudioState.paused,\n      matches: (states: UseAudioState[]) =>\n        states.some((given) => given === state),\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import React from \"react\";\n\nexport type UseAutofocusConfigType = {\n  ref: React.RefObject<HTMLElement>;\n  condition: boolean;\n};\n\nexport function useAutofocus(config: UseAutofocusConfigType): void {\n  React.useEffect(() => {\n    if (!config.condition) return;\n\n    config.ref.current?.focus();\n  }, [config.condition]);\n}\n","export function getSafeWindow() {\n  if (typeof window === \"undefined\") return undefined;\n  return window;\n}\n","import { useState, useEffect } from \"react\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type WindowDimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowDimensions(): WindowDimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowDimensions>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    const safeWindow = getSafeWindow();\n\n    if (!safeWindow) return;\n\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: safeWindow?.innerWidth,\n        height: safeWindow?.innerHeight,\n      });\n    }\n\n    // Add event listener\n    safeWindow.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => safeWindow.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import { useWindowDimensions } from \"./use-window-dimensions\";\n\nexport type BreakpointType = number;\n\nexport type UseBreakpointReturnType = boolean;\n\nexport function useBreakpoint(\n  breakpoint: BreakpointType\n): UseBreakpointReturnType {\n  const dimensions = useWindowDimensions();\n  const width = dimensions?.width ?? 0;\n\n  return width <= breakpoint;\n}\n","import React from \"react\";\n\nexport function useClickOutside(\n  ref: React.RefObject<HTMLElement>,\n  onClickOutside: VoidFunction,\n  exclude?: React.RefObject<HTMLElement>[]\n): void {\n  React.useEffect(() => {\n    if (!ref.current) return;\n\n    function handleClickOutside(event: MouseEvent) {\n      // Check if click event happened outside the `ref`\n      // so the `onClickOutside` callback `may` be fired.\n      if (!ref.current?.contains(event.target as Node)) {\n        // The second check is to check if some `exclude`d node\n        // outside the `ref` node has been clicked.\n        const isExcludedNodeClicked = exclude?.some((node) =>\n          node.current?.contains(event.target as Node)\n        );\n\n        // `onClickOutside` callback is fired if the click event\n        // happened outside both `ref` node and `exclude`d nodes.\n        if (!isExcludedNodeClicked) {\n          onClickOutside();\n        }\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [onClickOutside, ref, exclude]);\n}\n","export function noop() {}\n","import { useState, useEffect } from \"react\";\nimport { usePreviousValue } from \"./use-previous-value\";\nimport { noop } from \"../noop\";\n\nexport type UseClientFilterQueryType = string | undefined;\nexport type UseClientFilterNameType = string;\n\nexport type UseClientFilterConfigType<T> = {\n  name: string;\n  enum: { [key: string]: UseClientFilterQueryType };\n  defaultQuery?: UseClientFilterQueryType;\n  currentQuery?: UseClientFilterQueryType;\n  filterFn?: (value: T) => boolean;\n  onUpdate?: (\n    current: UseClientFilterQueryType,\n    previous: UseClientFilterQueryType\n  ) => void;\n};\n\nexport type UseClientFilterReturnType<T> = {\n  query: UseClientFilterQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: NonNullable<UseClientFilterConfigType<T>[\"filterFn\"]>;\n  options: UseClientFilterConfigType<T>[\"enum\"][0][];\n  onUpdate: UseClientFilterConfigType<T>[\"onUpdate\"];\n  name: UseClientFilterConfigType<T>[\"name\"];\n  changed: boolean;\n  unchanged: boolean;\n  label: { props: { htmlFor: UseClientFilterNameType } };\n  input: {\n    props: { id: UseClientFilterNameType; name: UseClientFilterNameType };\n  };\n};\n\nexport function useClientFilter<T = string>(\n  config: UseClientFilterConfigType<T>\n): UseClientFilterReturnType<T> {\n  const defaultQuery = config.defaultQuery ?? undefined;\n  const currentQuery = config.currentQuery ?? undefined;\n\n  const filterFn = config.filterFn ?? defaultFilterFn;\n  const options = Object.keys(config.enum);\n  const onUpdate = config?.onUpdate ?? noop;\n\n  const [query, setQuery] = useState<UseClientFilterQueryType>(\n    currentQuery ?? defaultQuery\n  );\n  const previousQuery = usePreviousValue(query);\n\n  function clear() {\n    setQuery(defaultQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newQuery = event.currentTarget.value;\n\n    const isNewQueryInEnum = Boolean(config.enum[String(newQuery)]);\n\n    setQuery(isNewQueryInEnum ? newQuery : undefined);\n  }\n\n  function defaultFilterFn(value: T) {\n    if (query === undefined) return true;\n\n    return query === String(value);\n  }\n\n  useEffect(() => onUpdate(query, previousQuery), [previousQuery, query]);\n\n  return {\n    query,\n    clear,\n    onChange,\n    filterFn,\n    options,\n    onUpdate,\n    name: config.name,\n    changed: query !== defaultQuery,\n    unchanged: query === defaultQuery,\n    label: { props: { htmlFor: config.name } },\n    input: { props: { id: config.name, name: config.name } },\n  };\n}\n","import { useState } from \"react\";\n\nexport type UseClientSearchQueryType = string;\n\nexport type UseClientSearchReturnType = {\n  query: UseClientSearchQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: (value: string) => boolean;\n  changed: boolean;\n  unchanged: boolean;\n};\n\nexport function useClientSearch(): UseClientSearchReturnType {\n  const emptyQuery: UseClientSearchQueryType = \"\";\n\n  const [query, setValue] = useState<UseClientSearchQueryType>(emptyQuery);\n\n  function clear() {\n    setValue(emptyQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setValue(event.currentTarget.value);\n  }\n\n  function filterFn(value: string) {\n    if (query === emptyQuery) return true;\n\n    return value?.toLowerCase().includes(query.toLowerCase());\n  }\n\n  return {\n    query,\n    clear,\n    onChange,\n    filterFn,\n    changed: query !== emptyQuery,\n    unchanged: query === emptyQuery,\n  };\n}\n","import { useField, UseFieldNameType, UseFieldReturnType } from \"./use-field\";\n\nexport type UseClientSortFnType<T> = (a: T, b: T) => number;\n\nexport type UseClientSortReturnType<T> = {\n  sortFn: UseClientSortFnType<T>;\n  options: UseClientSortOptionType[];\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n} & UseFieldReturnType<UseClientSortOptionType>;\n\nexport type UseClientSortOptionType = string;\n\ntype UseClientSortConfigType<T> = {\n  enum: Record<UseClientSortOptionType, UseClientSortOptionType> & {\n    default: UseClientSortOptionType;\n  };\n  options: Record<UseClientSortOptionType, UseClientSortFnType<T>>;\n};\n\nexport const defaultSortFn = () => 0;\n\nexport function useClientSort<T>(\n  name: UseFieldNameType,\n  config: UseClientSortConfigType<T>\n): UseClientSortReturnType<T> {\n  const state = useField<UseClientSortOptionType>(name, config.enum.default);\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newSort = event.currentTarget.value;\n    const isNewSortInEnum = Boolean(config.enum[String(newSort)]);\n\n    state.set(isNewSortInEnum ? newSort : config.enum.default);\n  }\n\n  if (state.value === config.enum.default) {\n    return {\n      sortFn: defaultSortFn,\n      options: Object.keys(config.options),\n      ...state,\n      handleChange,\n    };\n  }\n  return {\n    sortFn: config.options[state.value] ?? defaultSortFn,\n    options: Object.keys(config.options),\n    ...state,\n    handleChange,\n  };\n}\n","export function Days(value: number) {\n  return {\n    value,\n    hours: value * 24,\n    minutes: value * 24 * 60,\n    seconds: value * 24 * 60 * 60,\n    ms: value * 24 * 60 * 60 * 1000,\n  };\n}\n\nexport function Hours(value: number) {\n  return {\n    value,\n    minutes: value * 60,\n    seconds: value * 60 * 60,\n    ms: value * 60 * 60 * 1000,\n  };\n}\n\nexport function Minutes(value: number) {\n  return { value, seconds: value * 60, ms: value * 60 * 1000 };\n}\n\nexport function Seconds(value: number) {\n  return { value, ms: value * 1000 };\n}\n\nexport const Time = { Days, Hours, Minutes, Seconds };\n","import type { TimestampType } from \"@bgord/node/dist/schema\";\nimport { useState, useEffect } from \"react\";\nimport { Time } from \"../time\";\n\nexport function getCurrentTimestamp(): TimestampType {\n  return Date.now();\n}\n\nexport function useCurrentTimestamp(): TimestampType {\n  const [timestamp, setTimestamp] =\n    useState<TimestampType>(getCurrentTimestamp);\n\n  useEffect(() => {\n    const timer = setInterval(\n      () => setTimestamp(getCurrentTimestamp()),\n      Time.Seconds(1).ms\n    );\n\n    return () => clearInterval(timer);\n  }, []);\n\n  return timestamp;\n}\n","import React from \"react\";\n\ntype UseDebounceConfigType<T> = { value: T; delayMs: number };\n\nexport function useDebounce<T>(config: UseDebounceConfigType<T>): T {\n  const [debouncedValue, setDebouncedValue] = React.useState<T>(config.value);\n\n  React.useEffect(() => {\n    const timer = setTimeout(\n      () => setDebouncedValue(config.value),\n      config.delayMs\n    );\n\n    return () => clearTimeout(timer);\n  }, [config.value, config.delayMs]);\n\n  return debouncedValue;\n}\n","import { useState } from \"react\";\n\nexport type UseToggleValueType = boolean;\n\nexport type UseToggleConfigType = UseToggleValueType;\n\nexport type UseToggleReturnType = {\n  on: UseToggleValueType;\n  off: UseToggleValueType;\n  enable: VoidFunction;\n  disable: VoidFunction;\n  toggle: VoidFunction;\n};\n\nexport function useToggle(\n  defaultValue: UseToggleConfigType = false\n): UseToggleReturnType {\n  const [on, setIsOn] = useState(defaultValue);\n\n  const enable = () => setIsOn(true);\n  const disable = () => setIsOn(false);\n  const toggle = () => setIsOn((v) => !v);\n\n  return { on, off: !on, enable, disable, toggle };\n}\n\nexport function extractUseToggle<X>(props: UseToggleReturnType & X): {\n  toggle: UseToggleReturnType;\n  rest: X;\n} {\n  const { on, off, enable, disable, toggle, ...rest } = props;\n\n  return { toggle: { on, off, enable, disable, toggle }, rest: rest as X };\n}\n","import { useEffect } from \"react\";\nimport { UseQueryResult } from \"react-query\";\n\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type UseDelayedLoaderConfig = Pick<UseQueryResult, \"isLoading\">;\n\nexport function useDelayedLoader(\n  config: UseDelayedLoaderConfig,\n  delayMs = 500\n): UseToggleReturnType {\n  const delayedLoader = useToggle();\n  const delayElapsed = useToggle();\n\n  let timeoutId: NodeJS.Timeout;\n\n  useEffect(() => {\n    timeoutId = setTimeout(delayElapsed.enable, delayMs);\n\n    return () => clearTimeout(timeoutId);\n  }, []);\n\n  useEffect(() => {\n    if (delayElapsed.off) return;\n    if (config.isLoading) return delayedLoader.enable();\n    return delayedLoader.disable();\n  }, [config.isLoading, delayElapsed.on]);\n\n  return delayedLoader;\n}\n","import { useEffect } from \"react\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport {\n  useToggle,\n  UseToggleConfigType,\n  UseToggleReturnType,\n} from \"./use-toggle\";\n\nexport function useDesignMode(\n  config?: UseToggleConfigType\n): UseToggleReturnType {\n  const designMode = useToggle(config);\n  const safeWindow = getSafeWindow();\n\n  useEffect(() => {\n    if (!safeWindow) return;\n\n    safeWindow.document.designMode = designMode.on ? \"on\" : \"off\";\n  }, [designMode.on]);\n\n  return designMode;\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useDisablePullToRefresh(condition = true): void {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overscroll behaviors\n    const originalHtmlOverscrollBehavior =\n      window.getComputedStyle(html).overscrollBehavior;\n    const originalBodyOverflowBehavior =\n      window.getComputedStyle(body).overscrollBehavior;\n\n    // Disable pull to refresh\n    body.style.overscrollBehavior = \"none\";\n    html.style.overscrollBehavior = \"none\";\n\n    // Enable pull to refresh when component unmounts\n    return () => {\n      body.style.overscrollBehavior = originalBodyOverflowBehavior;\n      html.style.overscrollBehavior = originalHtmlOverscrollBehavior;\n    };\n  }, [condition]);\n}\n","import React from \"react\";\n\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n","import { useState, useEffect } from \"react\";\n\nexport enum UseExpandableListState {\n  contracted = \"contracted\",\n  expanded = \"expanded\",\n}\n\nexport type UseExpandableListConfigType = { max: number; length: number };\n\nexport type UseExpandableListReturnType = {\n  state: UseExpandableListState;\n  displayShowMore: boolean;\n  displayShowLess: boolean;\n  actions: {\n    showMore: VoidFunction;\n    showLess: VoidFunction;\n  };\n  numberOfExcessiveElements: number;\n  filterFn: (element: unknown, index: number) => void;\n};\n\nexport function useExpandableList(\n  config: UseExpandableListConfigType\n): UseExpandableListReturnType {\n  const numberOfExcessiveElements = config.length - config.max;\n  const areThereExcessiveElements = config.length > config.max;\n\n  function getState() {\n    return areThereExcessiveElements\n      ? UseExpandableListState.contracted\n      : UseExpandableListState.expanded;\n  }\n\n  const [state, setState] = useState<UseExpandableListState>(getState);\n\n  useEffect(() => setState(getState()), [config.length, config.max]);\n\n  function showMore() {\n    if (state === UseExpandableListState.contracted) {\n      setState(UseExpandableListState.expanded);\n    }\n  }\n\n  function showLess() {\n    if (state === UseExpandableListState.expanded) {\n      setState(UseExpandableListState.contracted);\n    }\n  }\n\n  function filterFn(_element: unknown, index: number) {\n    if (state === UseExpandableListState.expanded) return true;\n    return index < config.max;\n  }\n\n  return {\n    state,\n    displayShowMore: state === UseExpandableListState.contracted,\n    displayShowLess:\n      state === UseExpandableListState.expanded && areThereExcessiveElements,\n    actions: {\n      showMore,\n      showLess,\n    },\n    numberOfExcessiveElements,\n    filterFn,\n  };\n}\n","import { useState, useMemo } from \"react\";\n\ntype UseFileNameType = string;\n\nexport type UseFileConfigType = {\n  maxSize?: number;\n};\n\nexport enum UseFileState {\n  \"idle\" = \"idle\",\n  \"selected\" = \"selected\",\n  \"error\" = \"error\",\n}\n\ntype UseFileIdle = {\n  state: UseFileState.idle;\n  matches: (states: UseFileState[]) => boolean;\n  isIdle: true;\n  isSelected: false;\n  isError: false;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\ntype UseFileSelected = {\n  state: UseFileState.selected;\n  matches: (states: UseFileState[]) => boolean;\n  data: File;\n  isIdle: false;\n  isSelected: true;\n  isError: false;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  preview: ReturnType<typeof URL.createObjectURL> | undefined;\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\ntype UseFileError = {\n  state: UseFileState.error;\n  matches: (states: UseFileState[]) => boolean;\n  data: null;\n  isIdle: false;\n  isSelected: false;\n  isError: true;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\nexport type UseFileReturnType = UseFileIdle | UseFileSelected | UseFileError;\n\nexport function useFile(\n  name: UseFileNameType,\n  config?: UseFileConfigType\n): UseFileReturnType {\n  const maxSize = config?.maxSize ?? Infinity;\n\n  const [key, setKey] = useState(0);\n  const [state, setState] = useState<UseFileState>(UseFileState.idle);\n  const [file, setFile] = useState<File | null>(null);\n\n  function selectFile(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.currentTarget.files;\n\n    if (!files || !files[0]) return;\n\n    const file = files[0];\n\n    if (file.size > maxSize) {\n      setState(UseFileState.error);\n      return undefined;\n    }\n\n    setFile(file);\n    setState(UseFileState.selected);\n\n    return file;\n  }\n\n  function clearFile() {\n    setKey((key) => key + 1);\n    setFile(null);\n    setState(UseFileState.idle);\n  }\n\n  const preview = useMemo(\n    () => (file ? URL.createObjectURL(file) : undefined),\n    [file]\n  );\n\n  function matches(states: UseFileState[]) {\n    return states.some((given) => given === state);\n  }\n\n  if (state === UseFileState.idle) {\n    return {\n      state,\n      matches,\n      isIdle: true,\n      isSelected: false,\n      isError: false,\n      data: null,\n      actions: { selectFile, clearFile },\n      label: { props: { htmlFor: name } },\n      input: {\n        props: { id: name, name, multiple: false, key },\n      },\n    };\n  }\n\n  if (state === UseFileState.selected) {\n    return {\n      state,\n      matches,\n      data: file as File,\n      isIdle: false,\n      isSelected: true,\n      isError: false,\n      actions: { selectFile, clearFile },\n      preview,\n      label: { props: { htmlFor: name } },\n      input: {\n        props: { id: name, name, multiple: false, key },\n      },\n    };\n  }\n\n  return {\n    state,\n    matches,\n    data: null,\n    isIdle: false,\n    isSelected: false,\n    isError: true,\n    actions: { selectFile, clearFile },\n    label: { props: { htmlFor: name } },\n    input: {\n      props: { id: name, name, multiple: false, key },\n    },\n  };\n}\n","import React from \"react\";\nimport tinykeys from \"tinykeys\";\n\nexport interface UseKeyboardShortcutsConfigType {\n  [keybinding: string]: (event: KeyboardEvent) => void;\n}\n\nexport type UseKeyboardShortcutsOptionsType = { enabled?: boolean };\n\nexport function useKeyboardShortcuts(\n  config: UseKeyboardShortcutsConfigType,\n  options?: UseKeyboardShortcutsOptionsType\n): void {\n  const enabled = options?.enabled ?? true;\n\n  React.useEffect(() => {\n    if (!enabled) return;\n\n    const unsubscribeShortcuts = tinykeys(window, config);\n\n    return () => unsubscribeShortcuts();\n  }, [config, enabled]);\n}\n","import { useRef, Ref } from \"react\";\n\nimport { useKeyboardShortcuts } from \"./use-keyboard-shortcuts\";\n\nexport function useFocusKeyboardShortcut(shortcut: string): {\n  ref: Ref<HTMLInputElement>;\n} {\n  const ref = useRef<HTMLInputElement>(null);\n  useKeyboardShortcuts({ [shortcut]: () => ref.current?.focus() });\n\n  return { ref };\n}\n","import React from \"react\";\n\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type UseHoverConfigType = {\n  enabled: boolean;\n};\n\nexport type UseHoverReturnType = {\n  attach: { ref: React.RefObject<any> };\n  isHovering: UseToggleReturnType[\"on\"];\n};\n\nexport function useHover(config?: UseHoverConfigType): UseHoverReturnType {\n  const enabled = config?.enabled ?? true;\n\n  const ref = React.useRef<any>(null);\n  const isHovering = useToggle(false);\n\n  const handleMouseEnter = isHovering.enable;\n  const handleMouseLeave = isHovering.disable;\n\n  React.useEffect(() => {\n    const node = ref.current;\n\n    if (node && enabled) {\n      node.addEventListener(\"mouseenter\", handleMouseEnter);\n      node.addEventListener(\"mouseleave\", handleMouseLeave);\n    }\n\n    return () => {\n      if (node && enabled) {\n        node.removeEventListener(\"mouseenter\", handleMouseEnter);\n        node.removeEventListener(\"mouseleave\", handleMouseLeave);\n      }\n    };\n  }, []);\n\n  return { attach: { ref }, isHovering: isHovering.on && enabled };\n}\n","export type ImagePathType = string | undefined;\n\nexport type ImageResolutionType = {\n  width: number | null;\n  height: number | null;\n};\n\nexport const emptyImageResolution: ImageResolutionType = {\n  width: null,\n  height: null,\n};\n\nexport async function getImageResolution(\n  path: ImagePathType\n): Promise<ImageResolutionType> {\n  if (!path) return emptyImageResolution;\n\n  const img = document.createElement(\"img\");\n\n  const promise = new Promise<ImageResolutionType>((resolve, reject) => {\n    img.onload = () => resolve({ width: img.width, height: img.height });\n    img.onerror = reject;\n  });\n\n  img.src = path;\n\n  return promise;\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { UseFileReturnType, UseFileState } from \"./use-file\";\nimport {\n  getImageResolution,\n  ImageResolutionType,\n  emptyImageResolution,\n} from \"../get-image-resolution\";\n\nexport function useImageFileResolution(\n  file: UseFileReturnType\n): ImageResolutionType {\n  const resolution = useField<ImageResolutionType>(\n    \"resolution\",\n    emptyImageResolution\n  );\n\n  React.useEffect(() => {\n    async function execute() {\n      if (file.state === UseFileState.selected) {\n        try {\n          const result = await getImageResolution(file.preview);\n\n          return resolution.set(result);\n        } catch (error) {\n          return resolution.clear();\n        }\n      }\n\n      if (\n        [UseFileState.error, UseFileState.idle].includes(file.state) &&\n        resolution.value.width !== null &&\n        resolution.value.height !== null\n      ) {\n        resolution.clear();\n      }\n    }\n\n    execute();\n  }, [file.state, file.data?.name]);\n\n  return resolution.value;\n}\n","import React from \"react\";\nimport { useToggle } from \"./use-toggle\";\n\ntype OnlineStatusType = boolean;\n\nexport const useIsOnline = (): OnlineStatusType => {\n  const onlineStatus = useToggle(getOnlineStatus());\n\n  React.useEffect(() => {\n    function handleOnline() {\n      onlineStatus.enable();\n    }\n\n    function handleOffline() {\n      onlineStatus.disable();\n    }\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  return onlineStatus.on;\n};\n\n// Check if browser supports `navigator.onLine`,\n// otherwise, we assume the user is online.\nfunction getOnlineStatus(): OnlineStatusType {\n  return typeof navigator !== \"undefined\" &&\n    typeof navigator.onLine === \"boolean\"\n    ? navigator.onLine\n    : true;\n}\n","import { RefObject, useEffect, useState } from \"react\";\n\nexport const defaultUseIsVisibleConfig = {\n  threshold: 0,\n  root: null,\n  rootMargin: \"0%\",\n  ref: { current: null },\n};\n\nexport function isIntersectionObserverSupported() {\n  return (\n    \"IntersectionObserver\" in window &&\n    \"IntersectionObserverEntry\" in window &&\n    \"intersectionRatio\" in window.IntersectionObserverEntry.prototype\n  );\n}\n\nexport type UseIsVisibleConfigType = IntersectionObserverInit & {\n  ref: RefObject<Element>;\n};\n\nexport type UseIsVisibleReturnType = boolean;\n\nexport function useIsVisible(\n  config: UseIsVisibleConfigType = defaultUseIsVisibleConfig\n): UseIsVisibleReturnType {\n  const [isVisible, setVisible] = useState<UseIsVisibleReturnType>(false);\n\n  useEffect(() => {\n    const element = config.ref.current;\n\n    if (!isIntersectionObserverSupported() || !element) return;\n\n    const observer = new IntersectionObserver(\n      (entry) => setVisible(Boolean(entry[0]?.isIntersecting)),\n      config\n    );\n\n    observer.observe(element);\n\n    return () => observer.unobserve(element);\n  }, []);\n\n  return isVisible;\n}\n","import { useState } from \"react\";\n\ntype UseItemValueType<T> = T | null;\n\nexport type UseItemReturnType<T> = {\n  clear: VoidFunction;\n  set: (item: NonNullable<UseItemValueType<T>>) => void;\n  toggle: (item: NonNullable<UseItemValueType<T>>) => any;\n  value: UseItemValueType<T>;\n  isDefault: boolean;\n  exists: boolean;\n  compare: (a: UseItemValueType<T>) => boolean;\n};\n\nexport type UseItemConfigType<T> = {\n  defaultItem?: UseItemValueType<T>;\n\n  comparisonFn?: (a: UseItemValueType<T>, b: UseItemValueType<T>) => boolean;\n};\n\nfunction defaultComparisonFn<T>(\n  a: UseItemValueType<T>,\n  b: UseItemValueType<T>\n) {\n  return a === b;\n}\n\nconst defaultItem = null;\n\nexport function useItem<T>(\n  config?: UseItemConfigType<T>\n): UseItemReturnType<T> {\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [item, setItem] = useState<UseItemValueType<T>>(\n    config?.defaultItem ?? defaultItem\n  );\n\n  return {\n    clear: () => setItem(defaultItem),\n\n    set: (newer) => setItem(newer),\n\n    toggle: (newer) =>\n      setItem((current) => {\n        if (current === defaultItem) return newer;\n\n        return comparisonFn(current, newer) ? defaultItem : newer;\n      }),\n\n    value: item,\n\n    isDefault: comparisonFn(item, defaultItem),\n\n    exists: !comparisonFn(item, defaultItem),\n\n    compare: (given: UseItemValueType<T>) => comparisonFn(item, given),\n  };\n}\n","import React from \"react\";\n\nexport enum KeyNameEnum {\n  Enter = \"Enter\",\n  Space = \" \",\n}\n\nexport type UseKeyHandlerConfigType = Partial<Record<KeyNameEnum, Function>>;\n\nexport type UseKeyHandlerReturnType = (\n  event: React.KeyboardEvent<HTMLElement>\n) => void;\n\nexport function useKeyHandler(\n  config: UseKeyHandlerConfigType\n): UseKeyHandlerReturnType {\n  const keys = Object.keys(config);\n\n  return function handleKey(event: React.KeyboardEvent<HTMLElement>) {\n    const key = event.key as KeyNameEnum;\n    const executor = config[key];\n\n    if (keys.includes(event.key) && config[key] && executor) {\n      executor();\n    }\n  };\n}\n","import { polishPlurals } from \"polish-plurals\";\nimport type { Falsy, Schema } from \"@bgord/node\";\n\ntype PluralizeWordType = string;\ntype PluralizeValueType = Falsy<number>;\n\nexport type PluralizeOptionsType = {\n  value: PluralizeValueType;\n  singular: PluralizeWordType;\n  plural?: PluralizeWordType;\n  genitive?: PluralizeWordType;\n  language: Schema.LanguageType;\n};\n\nenum PluralizationSupportedLanguages {\n  en = \"en\",\n  pl = \"pl\",\n}\n\nexport function pluralize(options: PluralizeOptionsType): PluralizeWordType {\n  if (options.language === PluralizationSupportedLanguages.en) {\n    const plural = options.plural ?? `${options.singular}s`;\n\n    if (options.value === 1) return options.singular;\n\n    return plural;\n  }\n\n  if (options.language === PluralizationSupportedLanguages.pl) {\n    const value = options.value ?? 1;\n\n    if (value === 1) return options.singular;\n\n    return polishPlurals(\n      options.singular,\n      String(options.plural),\n      String(options.genitive),\n      value\n    );\n  }\n\n  console.warn(\n    `[@bgord/frontend] missing pluralization function for language ${options.language}.`\n  );\n\n  return options.singular;\n}\n","import React from \"react\";\nimport type {\n  TranslationsType,\n  TranslationsKeyType,\n  Schema,\n} from \"@bgord/node\";\nimport { pluralize, PluralizeOptionsType } from \"./pluralize\";\n\ntype TranslationsContextValueType = {\n  translations: TranslationsType;\n  language: Schema.LanguageType;\n};\n\ntype TranslationPlaceholderType = string;\ntype TranslationPlaceholderValueType = string | number;\ntype TranslationVariableType = Record<\n  TranslationPlaceholderType,\n  TranslationPlaceholderValueType\n>;\n\nconst TranslationsContext = React.createContext<TranslationsContextValueType>({\n  translations: {},\n  language: \"en\",\n});\n\ntype TranslationsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: TranslationsContextValueType;\n};\n\nexport function TranslationsContextProvider(\n  props: TranslationsContextPropsType\n) {\n  return (\n    <TranslationsContext.Provider value={props.value}>\n      {props.children}\n    </TranslationsContext.Provider>\n  );\n}\n\nexport function useTranslations() {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useTranslations must be used within the TranslationsContext`\n    );\n  }\n\n  function translate(\n    key: TranslationsKeyType,\n    variables?: TranslationVariableType\n  ) {\n    const translation = value.translations[key];\n\n    if (!translation) {\n      console.warn(`[@bgord/frontend] missing translation for key: ${key}`);\n      return key;\n    }\n\n    if (!variables) return translation;\n\n    return Object.entries(variables).reduce(\n      (result, [placeholder, value]) =>\n        result.replace(`{{${placeholder}}}`, String(value)),\n      translation\n    );\n  }\n\n  return translate;\n}\n\nexport function useLanguage(): TranslationsContextValueType[\"language\"] {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(`useLanguage must be used within the TranslationsContext`);\n  }\n\n  return value.language;\n}\n\nexport function usePluralize() {\n  const language = useLanguage();\n\n  return (options: Omit<PluralizeOptionsType, \"language\">) =>\n    pluralize({ ...options, language });\n}\n","import type { LanguageType } from \"@bgord/node/dist/schema\";\nimport Cookies from \"js-cookie\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport { useLanguage } from \"../translations\";\nimport { useClientFilter, UseClientFilterReturnType } from \"./use-client-filter\";\n\nexport function useLanguageSelector(\n  supportedLanguages: Record<LanguageType, LanguageType>\n): UseClientFilterReturnType<LanguageType> {\n  const language = useLanguage();\n\n  return useClientFilter({\n    enum: supportedLanguages,\n    currentQuery: language,\n    name: \"language\",\n    onUpdate: (current, previous) => {\n      const safeWindow = getSafeWindow();\n\n      if (!safeWindow) return;\n\n      if (!current || !previous || previous === current) return;\n\n      Cookies.set(\"accept-language\", current);\n      safeWindow.document.location.reload();\n    },\n  });\n}\n","import React from \"react\";\n\nexport type UseLeavingPromptConditionType = boolean;\n\nexport function useLeavingPrompt(\n  condition: UseLeavingPromptConditionType = false\n): void {\n  React.useEffect(() => {\n    if (!condition) return;\n\n    function handler(e: BeforeUnloadEvent) {\n      e.preventDefault();\n    }\n\n    window.addEventListener(\"beforeunload\", handler);\n\n    return () => window.removeEventListener(\"beforeunload\", handler);\n  }, [condition]);\n}\n","import { useState, SetStateAction, Dispatch } from \"react\";\n\nexport type UseListActionsType<T> = {\n  clear: VoidFunction;\n  add: (x: T | T[]) => void;\n  remove: (x: T) => void;\n  toggle: (x: T) => void;\n  isAdded: (x: T) => boolean;\n  update: Dispatch<SetStateAction<T[]>>;\n};\n\nexport type UseListReturnType<T> = [T[], UseListActionsType<T>];\n\nexport type UseListConfigType<T> = {\n  defaultItems?: T[];\n  comparisonFn?: (a: T, b: T) => boolean;\n};\n\nexport function useList<T>(\n  config?: UseListConfigType<T>\n): UseListReturnType<T> {\n  const defaultItems = config?.defaultItems ?? [];\n\n  const defaultComparisonFn = (a: T, b: T) => a === b;\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [items, setItems] = useState<T[]>(defaultItems);\n\n  function clear() {\n    setItems([]);\n  }\n\n  function add(payload: T | T[]) {\n    setItems((items) => {\n      if (Array.isArray(payload)) {\n        return [...items, ...payload];\n      }\n      return [...items, payload];\n    });\n  }\n\n  function remove(item: T) {\n    setItems((items) => items.filter((x) => !comparisonFn(x, item)));\n  }\n\n  function isAdded(item: T) {\n    return items.some((x) => comparisonFn(x, item));\n  }\n\n  function toggle(item: T) {\n    isAdded(item) ? remove(item) : add(item);\n  }\n\n  return [items, { clear, add, remove, toggle, isAdded, update: setItems }];\n}\n","import React from \"react\";\n\nexport function useMetaEnterSubmit() {\n  const handleMetaEnterSubmit = (\n    event: React.KeyboardEvent<HTMLTextAreaElement>\n  ) => {\n    if (event.key !== \"Enter\" || !event.metaKey) return;\n\n    event.currentTarget.form?.dispatchEvent(\n      new Event(\"submit\", { cancelable: true })\n    );\n  };\n\n  return { onKeyDown: handleMetaEnterSubmit };\n}\n","import { useField } from \"./use-field\";\nimport { PagedMetaType, PageType } from \"../pagination\";\n\ntype UsePaginationControlType = {\n  active: boolean;\n  disabled: boolean;\n  exists: boolean;\n  go: VoidFunction;\n  value: PageType | undefined;\n};\n\ntype UsePaginationReturnType = {\n  current: PageType;\n  last: PageType;\n\n  controls: {\n    firstPage: UsePaginationControlType;\n    previousPage: UsePaginationControlType;\n    nextPage: UsePaginationControlType;\n    lastPage: UsePaginationControlType;\n  };\n\n  update: (updated: PagedMetaType | null) => void;\n};\n\nexport function usePagination(): UsePaginationReturnType {\n  const meta = useField<PagedMetaType | null>(\"meta\", null);\n\n  const firstPage = 1;\n  const previousPage = meta.value?.previousPage;\n  const nextPage = meta.value?.nextPage;\n  const lastPage = meta.value?.lastPage || firstPage;\n\n  const page = useField(\"page\", firstPage);\n\n  return {\n    current: page.value,\n    last: lastPage,\n\n    controls: {\n      firstPage: {\n        active: !previousPage,\n        disabled: false,\n        exists: true,\n        go: () => page.set(firstPage),\n        value: firstPage,\n      },\n\n      previousPage: {\n        active: false,\n        disabled: !previousPage,\n        exists: Boolean(previousPage),\n        go: () => page.set(previousPage ?? page.value),\n        value: previousPage,\n      },\n\n      nextPage: {\n        active: false,\n        disabled: !nextPage,\n        exists: Boolean(nextPage),\n        go: () => page.set(nextPage ?? page.value),\n        value: nextPage,\n      },\n\n      lastPage: {\n        active: page.value === lastPage,\n        disabled: !nextPage,\n        exists: true,\n        go: () => page.set(lastPage ?? page.value),\n        value: lastPage,\n      },\n    },\n\n    update: (updated) => meta.set(updated),\n  };\n}\n","import * as Storage from \"ts-storage\";\n\nexport type SafeLocalStorageKeyType = string;\n\nexport class SafeLocalStorage {\n  static get<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    fallbackValue: T\n  ): T {\n    return Storage.get(key, fallbackValue).value;\n  }\n\n  static set<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    value: T\n  ) {\n    Storage.set(key, value);\n  }\n\n  static clear(key: SafeLocalStorageKeyType) {\n    Storage.remove(key);\n  }\n}\n","import * as React from \"react\";\n\nimport {\n  useToggle,\n  UseToggleReturnType,\n  UseToggleValueType,\n} from \"./use-toggle\";\nimport {\n  SafeLocalStorage,\n  SafeLocalStorageKeyType,\n} from \"../safe-local-storage\";\n\nexport type UsePersistentToggleReturnType = UseToggleReturnType & {\n  clear: VoidFunction;\n};\n\nexport function usePersistentToggle(\n  key: SafeLocalStorageKeyType,\n  defaultValue: UseToggleValueType = false\n): UsePersistentToggleReturnType {\n  const storedValue = SafeLocalStorage.get<UseToggleValueType>(\n    key,\n    defaultValue\n  );\n\n  const toggle = useToggle(storedValue);\n\n  React.useEffect(() => SafeLocalStorage.set(key, toggle.on), [key, toggle.on]);\n\n  return { ...toggle, clear: () => SafeLocalStorage.clear(key) };\n}\n","import type { TimestampType } from \"@bgord/node/dist/schema\";\nimport type { Falsy } from \"@bgord/node\";\n\nexport type RateLimiterOptionsType = {\n  limitMs: TimestampType;\n};\n\nexport type RateLimiterResultSuccessType = { allowed: true };\n\nexport type RateLimiterResultErrorType = {\n  allowed: false;\n  remainingMs: TimestampType;\n};\n\nexport type RateLimiterResultType =\n  | RateLimiterResultSuccessType\n  | RateLimiterResultErrorType;\n\nexport class RateLimiter {\n  private lastInvocationTimestamp: Falsy<TimestampType> = null;\n\n  private options: RateLimiterOptionsType;\n\n  constructor(options: RateLimiterOptionsType) {\n    this.options = options;\n  }\n\n  verify(currentTimestamp: TimestampType): RateLimiterResultType {\n    if (!this.lastInvocationTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    const nextAllowedTimestamp =\n      this.lastInvocationTimestamp + this.options.limitMs;\n\n    if (nextAllowedTimestamp <= currentTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    return {\n      allowed: false,\n      remainingMs: nextAllowedTimestamp - currentTimestamp,\n    };\n  }\n}\n","import { useRef } from \"react\";\n\nimport {\n  RateLimiterOptionsType,\n  RateLimiterResultErrorType,\n  RateLimiter,\n} from \"../rate-limiter\";\n\nexport type UseRateLimiterActionType<T> = (...args: T[]) => void;\n\nexport type UseRateLimiterOptionsType<T> = RateLimiterOptionsType & {\n  action: UseRateLimiterActionType<T>;\n  fallback?: (remainingMs: RateLimiterResultErrorType[\"remainingMs\"]) => void;\n};\n\nexport type UseRateLimiterReturnType<T> = UseRateLimiterActionType<T>;\n\nexport function useRateLimiter<T>(\n  options: UseRateLimiterOptionsType<T>\n): UseRateLimiterReturnType<T> {\n  const rateLimiter = useRef<RateLimiter>(new RateLimiter(options));\n\n  return function executor(...args: T[]) {\n    const currentTimestamp = Date.now();\n    const result = rateLimiter.current.verify(currentTimestamp);\n\n    if (result.allowed) {\n      return options.action(...args);\n    }\n\n    return options.fallback?.(result.remainingMs);\n  };\n}\n","import React from \"react\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type ScrollPositionType = number;\n\nexport type UseScrollReturnType = {\n  actions: { goToTop: VoidFunction };\n  position: {\n    value: ScrollPositionType;\n    isInitial: boolean;\n    hasChanged: boolean;\n  };\n  visible: UseToggleReturnType[\"on\"];\n  hidden: UseToggleReturnType[\"off\"];\n};\n\nexport function useScroll(): UseScrollReturnType {\n  const safeWindow = getSafeWindow();\n\n  // Scroll position always set at the top of the page\n  const defaultScrollPosition = 0;\n  const [scrollPosition, setScrollPosition] =\n    React.useState<ScrollPositionType>(defaultScrollPosition);\n\n  // Assuming scrollbar is hidden by default\n  const scrollbarVisibility = useToggle(false);\n\n  function goToTop() {\n    if (!safeWindow) return;\n    safeWindow.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  }\n\n  React.useLayoutEffect(() => {\n    function measure() {\n      if (!safeWindow) return;\n\n      setScrollPosition(safeWindow?.scrollY);\n\n      // Checking if the viewport (clientHeight) can fully contain\n      // full content height (scrollHeight)\n      if (\n        safeWindow.document.body.clientHeight <\n        safeWindow.document.body.scrollHeight\n      ) {\n        scrollbarVisibility.enable();\n      } else {\n        scrollbarVisibility.disable();\n      }\n    }\n\n    safeWindow?.addEventListener(\"scroll\", measure);\n\n    return () => safeWindow?.removeEventListener(\"scroll\", measure);\n  }, []);\n\n  return {\n    actions: { goToTop },\n    position: {\n      value: scrollPosition,\n      isInitial: scrollPosition === 0,\n      hasChanged: scrollPosition > 0,\n    },\n    visible: scrollbarVisibility.on,\n    hidden: scrollbarVisibility.off,\n  };\n}\n","import { useEffect } from \"react\";\n\nexport function useScrollLock(condition = true): void {\n  useEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const originalHtmlOverflow = window.getComputedStyle(html).overflow;\n\n    // Prevent scrolling on mount\n    html.style.overflow = \"hidden\";\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      html.style.overflow = originalHtmlOverflow;\n    };\n  }, [condition]);\n}\n","export type SoundSourceType = string;\n\nexport type UseSoundReturnType = { play: VoidFunction };\n\nexport function useSound(src: SoundSourceType): UseSoundReturnType {\n  const audio = new Audio(src);\n\n  return { play: audio.play.bind(audio) };\n}\n","import {\n  useClientFilter,\n  UseClientFilterConfigType,\n  UseClientFilterReturnType,\n} from \"./use-client-filter\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type UseUrlFilterConfigType<T> = UseClientFilterConfigType<T>;\n\nexport function useUrlFilter<T>(\n  config: UseUrlFilterConfigType<T>\n): UseClientFilterReturnType<T> {\n  const safeWindow = getSafeWindow();\n\n  const currentQuery =\n    new URLSearchParams(safeWindow?.location.search).get(config.name) ??\n    undefined;\n\n  return useClientFilter({\n    onUpdate: (current, previous) => {\n      if (!safeWindow) return;\n\n      const url = new URL(safeWindow.location.toString());\n      const params = new URLSearchParams(url.search);\n\n      if (current === undefined) {\n        params.delete(config.name);\n      } else {\n        params.set(config.name, current);\n      }\n\n      if (current === previous) return;\n\n      if (current !== previous) {\n        url.search = params.toString();\n        history.pushState({}, \"\", url.toString());\n      }\n    },\n    ...config,\n    defaultQuery: config.defaultQuery,\n    currentQuery: currentQuery,\n  });\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { DurationFormatter } from \"../durations\";\n\nexport type UseVideoSrcType = string;\n\ntype VideoDurationType = number;\ntype VideoCurrentTimeType = number;\ntype VideoVolumeType = number;\n\nexport const VIDEO_DEFAULT_VOLUME: VideoVolumeType = 1;\n\nexport enum UseVideoState {\n  \"initial\" = \"initial\",\n  \"ready\" = \"ready\",\n  \"playing\" = \"playing\",\n  \"paused\" = \"paused\",\n}\n\nexport type UseVideoReturnType = {\n  props: {\n    video: {\n      src: UseVideoSrcType;\n      onTimeUpdate: (event: Event) => void;\n      onLoadedMetadata: (event: Event) => void;\n      onEnded: (event: Event) => void;\n      controls: false;\n    };\n    player: {\n      min: 0;\n      step: 1;\n      max: VideoDurationType;\n      value: VideoDurationType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n    volume: {\n      min: 0;\n      max: 1;\n      step: 0.01;\n      value: VideoVolumeType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n  };\n  actions: {\n    play: VoidFunction;\n    pause: VoidFunction;\n    mute: VoidFunction;\n    unmute: VoidFunction;\n    reset: VoidFunction;\n    seek: (event: Event) => void;\n    changeVolume: (event: Event) => void;\n    triggerFullscreen: VoidFunction;\n  };\n\n  meta: {\n    state: UseVideoState;\n    isInitial: boolean;\n    isReady: boolean;\n    isPlaying: boolean;\n    isPaused: boolean;\n    matches: (states: UseVideoState[]) => boolean;\n    percentage: {\n      raw: number;\n      formatted: string;\n    };\n    currentTime: {\n      raw: VideoCurrentTimeType;\n      formatted: string;\n    };\n    duration: {\n      raw: VideoDurationType;\n      formatted: string;\n    };\n    volume: {\n      value: VideoVolumeType;\n      raw: number;\n      formatted: string;\n    };\n    muted: boolean;\n  };\n};\n\nexport function useVideo(src: UseVideoSrcType): UseVideoReturnType {\n  const [state, setState] = React.useState<UseVideoState>(\n    UseVideoState.initial\n  );\n\n  const ref = React.useRef<HTMLVideoElement | null>(null);\n\n  const duration = useField<VideoDurationType>(\"duration\", 0);\n  const currentTime = useField<VideoCurrentTimeType>(\"currentTime\", 0);\n  const volume = useField<VideoVolumeType>(\"volume\", VIDEO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (!ref.current) return;\n    ref.current.play();\n    setState(UseVideoState.playing);\n  }\n\n  function pause() {\n    if (!ref.current) return;\n    ref.current.pause();\n    setState(UseVideoState.paused);\n  }\n\n  function reset() {\n    if (!ref.current) return;\n    ref.current.currentTime = 0;\n    ref.current.pause();\n    currentTime.set(0);\n    setState(UseVideoState.paused);\n  }\n\n  function mute() {\n    if (!ref.current) return;\n    ref.current.volume = 0;\n    volume.set(0);\n  }\n\n  function unmute() {\n    if (!ref.current) return;\n    ref.current.volume = VIDEO_DEFAULT_VOLUME;\n    volume.set(VIDEO_DEFAULT_VOLUME);\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (!ref.current) return;\n    ref.current.currentTime = target.valueAsNumber;\n    currentTime.set(target.valueAsNumber);\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(UseVideoState.ready);\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLVideoElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(UseVideoState.paused);\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (!ref.current) return;\n    ref.current.volume = target.valueAsNumber;\n    volume.set(target.valueAsNumber);\n  }\n\n  function triggerFullscreen() {\n    if (!ref.current) return;\n    ref.current.requestFullscreen();\n  }\n\n  return {\n    props: {\n      video: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: {\n      play,\n      pause,\n      mute,\n      unmute,\n      reset,\n      seek,\n      changeVolume,\n      triggerFullscreen,\n    },\n    meta: {\n      state,\n      isInitial: state === UseVideoState.initial,\n      isReady: state === UseVideoState.ready,\n      isPlaying: state === UseVideoState.playing,\n      isPaused: state === UseVideoState.paused,\n      matches: (states: UseVideoState[]) =>\n        states.some((given) => given === state),\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import React from \"react\";\n\nimport * as hooks from \"../hooks\";\n\nexport type DialogPropsType = hooks.UseToggleReturnType &\n  JSX.IntrinsicElements[\"dialog\"];\n\nexport function Dialog(props: DialogPropsType) {\n  const { toggle: dialog, rest } = hooks.extractUseToggle(props);\n  const ref = React.useRef<HTMLDialogElement>(null);\n\n  React.useEffect(() => {\n    if (props.on) {\n      // @ts-ignore\n      ref.current?.showModal();\n    } else {\n      // @ts-ignore\n      ref.current?.close();\n    }\n  }, [props.on]);\n\n  hooks.useKeyboardShortcuts({ Escape: dialog.disable });\n  hooks.useAutofocus({ ref, condition: props.on });\n  hooks.useScrollLock(props.on);\n  hooks.useClickOutside(ref, dialog.disable);\n\n  return (\n    <dialog\n      ref={ref}\n      tabIndex={0}\n      data-display={props.on ? \"flex\" : \"none\"}\n      data-direction=\"column\"\n      data-mx=\"auto\"\n      data-p=\"24\"\n      data-position=\"fixed\"\n      data-z=\"2\"\n      data-bg=\"white\"\n      data-br=\"4\"\n      data-bc=\"gray-300\"\n      data-bw=\"1\"\n      data-backdrop=\"black\"\n      {...rest}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { useIsOnline } from \"../hooks\";\n\nexport function OfflineIndicator(props: { children: React.ReactChild }) {\n  const isOnline = useIsOnline();\n\n  if (isOnline) return null;\n\n  return <>{props.children}</>;\n}\n","import React from \"react\";\nimport type { PolymorphicPropsWithoutRef } from \"react-polymorphic-types\";\n\nconst OutboundLinkDefaultElement = \"a\";\n\nexport function OutboundLink<\n  T extends React.ElementType = typeof OutboundLinkDefaultElement\n>(props: PolymorphicPropsWithoutRef<{}, T>) {\n  const { as, ...rest } = props;\n\n  const Element = as || OutboundLinkDefaultElement;\n\n  return <Element target=\"_blank\" rel=\"noreferer noopener\" {...rest} />;\n}\n","type ExecFunctionListType = Function[];\n\nexport function exec(list: ExecFunctionListType) {\n  return function () {\n    list.forEach((item) => item());\n  };\n}\n","import React from \"react\";\n\nimport { useWindowDimensions } from \"../hooks/use-window-dimensions\";\nimport { useToggle } from \"../hooks/use-toggle\";\nimport { useField } from \"../hooks/use-field\";\nimport { exec } from \"../exec\";\n\nfunction Dimensions(props: JSX.IntrinsicElements[\"div\"]) {\n  const dimensions = useWindowDimensions();\n\n  return (\n    <div data-fs=\"12\" {...props}>\n      {dimensions.width} x {dimensions.height}\n    </div>\n  );\n}\n\nfunction Truncates() {\n  const enabled = useToggle();\n  const length = useField(\"length\", 128);\n\n  const [cache, setCache] = React.useState(new Map());\n\n  const handleTruncateClick = () => {\n    const elements = document.querySelectorAll('[data-transform=\"truncate\"]');\n\n    const updatedCache = new Map(cache);\n\n    elements.forEach((element) => {\n      const originalText = element.textContent;\n\n      if (!updatedCache.has(element)) {\n        updatedCache.set(element, originalText);\n        element.textContent = \"x\".repeat(length.value);\n      } else {\n        element.textContent = updatedCache.get(element);\n        updatedCache.delete(element);\n      }\n    });\n\n    setCache(updatedCache);\n  };\n\n  return (\n    <div data-display=\"flex\" data-cross=\"center\" data-gap=\"6\">\n      <label className=\"c-label\" {...length.label.props}>\n        Length\n      </label>\n\n      <input\n        className=\"c-input\"\n        type=\"number\"\n        value={length.value}\n        onChange={(event) => length.set(event.currentTarget.valueAsNumber)}\n        {...length.input.props}\n      />\n      <button\n        className=\"c-button\"\n        data-variant=\"bare\"\n        type=\"button\"\n        onClick={exec([() => handleTruncateClick(), enabled.toggle])}\n      >\n        {enabled.on ? \"Hide truncates\" : \"Expand truncates\"}\n      </button>\n    </div>\n  );\n}\n\nexport const DevTools = { Dimensions, Truncates };\n","import React, { Fragment } from \"react\";\n\nimport { UseFieldReturnType, extractUseField } from \"../hooks/use-field\";\n\nexport function Switch(\n  props: UseFieldReturnType<boolean> &\n    Omit<JSX.IntrinsicElements[\"input\"], \"label\" | \"value\">\n) {\n  const { field, rest } = extractUseField<\n    boolean,\n    Omit<JSX.IntrinsicElements[\"input\"], \"label\" | \"value\">\n  >(props);\n\n  return (\n    <Fragment>\n      <input\n        className=\"c-switch-checkbox c-visually-hidden\"\n        type=\"checkbox\"\n        checked={field.value}\n        onChange={(event) => field.set(event.currentTarget.checked)}\n        {...field.input.props}\n        {...rest}\n      />\n\n      <label className=\"c-switch-label\" {...field.label.props}>\n        <div className=\"c-switch-slider\"></div>\n      </label>\n    </Fragment>\n  );\n}\n","import { noop } from \"./noop\";\n\nexport type CopyToClipboardTextType = string;\ntype OnCopyToClipboardFailureType = (error?: unknown) => void;\ntype OnCopyToClipboardSuccessType = VoidFunction;\n\nconst defaultOnCopyToClipboardFailure: OnCopyToClipboardFailureType = (error) =>\n  console.warn(\"Copying to clipboard not supported\");\n\nexport type CopyToClipboardOptionsType = {\n  text: string;\n  onFailure?: OnCopyToClipboardFailureType;\n  onSuccess?: OnCopyToClipboardSuccessType;\n};\n\nexport async function copyToClipboard(options: CopyToClipboardOptionsType) {\n  const onFailure = options.onFailure ?? defaultOnCopyToClipboardFailure;\n  const onSuccess = options.onSuccess ?? noop;\n\n  if (!navigator.clipboard) onFailure();\n\n  try {\n    await navigator.clipboard.writeText(options.text);\n    onSuccess();\n  } catch (error) {\n    onFailure(error);\n  }\n}\n","import type { HourType } from \"@bgord/node/dist/schema\";\n\nimport * as Time from \"./time\";\n\nexport type DateType = Date | number | null | undefined;\n\nexport class DateFormatter {\n  static datetime(date: DateType, defaultValue = \"N/A\"): string {\n    if (!date) return defaultValue;\n\n    return new Date(date).toLocaleString();\n  }\n\n  static monthDay(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const days = DateFormatter._padDatePart(date.getDate());\n    const months = DateFormatter._padDatePart(date.getMonth() + 1);\n\n    return `${days}/${months}`;\n  }\n\n  static form(date: Date | null): string {\n    if (!date) return DateFormatter.form(new Date());\n\n    const year = DateFormatter._padDatePart(date.getFullYear());\n    const month = DateFormatter._padDatePart(date.getMonth() + 1);\n    const day = DateFormatter._padDatePart(date.getDate());\n\n    return `${year}-${month}-${day}`;\n  }\n\n  static clockUTC(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getUTCHours());\n    const minutes = DateFormatter._padDatePart(date.getUTCMinutes());\n    const seconds = DateFormatter._padDatePart(date.getUTCSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static clockLocal(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static countdown(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static formDatetimeLocal(timestamp: number) {\n    const localTimestamp =\n      timestamp - Time.Minutes(new Date().getTimezoneOffset()).ms;\n\n    return new Date(localTimestamp).toISOString().slice(0, 16);\n  }\n\n  static _padDatePart(value: number) {\n    return String(value).padStart(2, \"0\");\n  }\n}\n\nexport class HourFormatter {\n  static convertUtcToLocal(utcHour: HourType) {\n    const timeZoneOffsetInMins = new Date().getTimezoneOffset();\n\n    const utcHourInMins = Time.Hours(utcHour).minutes;\n\n    const localHourInMins = utcHourInMins - timeZoneOffsetInMins;\n    const localHour = (localHourInMins / 60) % 24;\n    const formattedLocalHour = `${String(localHour).padStart(2, \"0\")}:00`;\n\n    return { value: localHour, label: formattedLocalHour };\n  }\n}\n","import type { Schema } from \"@bgord/node\";\n\nexport class ETag {\n  static fromRevision(revision: Schema.RevisionType) {\n    return { \"if-match\": String(revision) };\n  }\n}\n\nexport type WeakETagValueType = string;\n\nexport class WeakETag {\n  static fromRevision(revision: Schema.RevisionType) {\n    return { \"if-match\": `W/${revision}` };\n  }\n}\n","import type { Schema } from \"@bgord/node\";\nimport React from \"react\";\n\nexport type FeatureFlagNameType = string;\n\nexport type FeatureFlagsContextValueType = {\n  flags: Record<FeatureFlagNameType, Schema.FeatureFlagType>;\n};\n\ntype FeatureFlagsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: FeatureFlagsContextValueType[\"flags\"];\n};\n\nconst FeatureFlagsContext = React.createContext<\n  FeatureFlagsContextValueType[\"flags\"]\n>({});\n\nexport function FeatureFlagsContextProvider(\n  props: FeatureFlagsContextPropsType\n) {\n  return (\n    <FeatureFlagsContext.Provider value={props.value}>\n      {props.children}\n    </FeatureFlagsContext.Provider>\n  );\n}\n\nexport function useFeatureFlags() {\n  const value = React.useContext(FeatureFlagsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useFeatureFlags must be used within the FeatureFlagsContext`\n    );\n  }\n\n  return value;\n}\n\nexport function useFeatureFlag(name: FeatureFlagNameType): boolean {\n  const value = React.useContext(FeatureFlagsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useFeatureFlag must be used within the FeatureFlagsContext`\n    );\n  }\n\n  return value[name] === \"yes\";\n}\n","export type FilterType = Record<string, unknown> | undefined;\n\nexport class FilterUrl {\n  value: string;\n\n  constructor(url: string, filters?: FilterType) {\n    const nonEmptyFilters = this.getNonEmptyFilters(filters);\n    const query = new URLSearchParams(nonEmptyFilters);\n\n    if (query.toString() === \"\") {\n      this.value = url;\n\n      return;\n    }\n\n    this.value = `${url}?${query.toString()}`;\n  }\n\n  private getNonEmptyFilters(filters: FilterType) {\n    if (filters === undefined) return {};\n\n    return Object.fromEntries(\n      Object.entries(filters).filter(([_key, value]) => value !== undefined)\n    ) as Record<string, string>;\n  }\n}\n","export type PatternConfigType = {\n  min?: number;\n  max?: number;\n  required?: JSX.IntrinsicElements[\"input\"][\"required\"];\n};\n\nexport class Form {\n  static pattern(\n    config: PatternConfigType\n  ): JSX.IntrinsicElements[\"textarea\"] & JSX.IntrinsicElements[\"input\"] {\n    const required = config.required ?? true;\n\n    if (config.min && !config.max)\n      return { pattern: `.{${config.min}}`, required };\n\n    if (config.min && config.max)\n      return { pattern: `.{${config.min},${config.max}}`, required };\n\n    if (!config.min && config.max)\n      return { pattern: `.{,${config.max}}`, required };\n\n    return { pattern: undefined, required };\n  }\n}\n","import { getSafeWindow } from \"./safe-window\";\n\nexport function isClient() {\n  return !getSafeWindow();\n}\n","export function LineClamp(lines: number = 2) {\n  return {\n    \"data-transform\": \"line-clamp\",\n    style: { \"--lines\": lines },\n  };\n}\n","type ApproximationValueType = number;\ntype ApproximationResultType = number;\ntype ApproximationDecimalPlacesType = number;\n\nexport class Approximation {\n  static float(\n    value: ApproximationValueType,\n    decimalPlaces: ApproximationDecimalPlacesType = 2\n  ): ApproximationResultType {\n    return parseFloat(value.toFixed(decimalPlaces));\n  }\n}\n\ntype MinMaxScalerValueType = number;\n\ntype MinMaxScalerConfigType = {\n  min: MinMaxScalerValueType;\n  max: MinMaxScalerValueType;\n  bound?: {\n    lower: MinMaxScalerValueType;\n    upper: MinMaxScalerValueType;\n  };\n};\n\nexport class MinMaxScaler {\n  private readonly min: MinMaxScalerValueType;\n  private readonly max: MinMaxScalerValueType;\n  private readonly lower: MinMaxScalerValueType;\n  private readonly upper: MinMaxScalerValueType;\n\n  constructor(config: MinMaxScalerConfigType) {\n    const lower = config.bound?.lower ?? 0;\n    const upper = config.bound?.upper ?? 1;\n\n    if (config.max - config.min < 0) {\n      throw new Error(\"Invalid MinMaxScaler min-max config\");\n    }\n\n    if (upper - lower <= 0) {\n      throw new Error(\"Invalid MinMaxScaler bound config\");\n    }\n\n    this.min = config.min;\n    this.max = config.max;\n    this.lower = lower;\n    this.upper = upper;\n  }\n\n  scale(value: MinMaxScalerValueType) {\n    const { min, max, lower, upper } = this;\n\n    if (value < min || value > max) {\n      throw new Error(\"Value out of min/max range\");\n    }\n\n    if (min === max)\n      return {\n        original: value,\n        scaled: (lower + upper) / 2,\n        isMin: value === min,\n        isMax: value === max,\n      };\n\n    const result = ((value - min) / (max - min)) * (upper - lower) + lower;\n\n    return {\n      original: value,\n      scaled: Approximation.float(result, 2),\n      isMin: value === min,\n      isMax: value === max,\n    };\n  }\n\n  descale(scaled: MinMaxScalerValueType) {\n    const { min, max, lower, upper } = this;\n\n    if (scaled < lower || scaled > upper) {\n      throw new Error(\"Scaled value out of bounds\");\n    }\n\n    const result = ((scaled - lower) / (upper - lower)) * (max - min) + min;\n\n    return {\n      original: Approximation.float(result, 2),\n      scaled,\n      isLowerBound: scaled === lower,\n      isUpperBound: scaled === upper,\n    };\n  }\n\n  static getMinMax(values: MinMaxScalerValueType[]) {\n    if (values.length === 0) {\n      throw new Error(\"An empty array supplied\");\n    }\n\n    return { min: Math.min(...values), max: Math.max(...values) };\n  }\n}\n","import type { UseInfiniteQueryResult } from \"react-query\";\nimport type { Paged } from \"@bgord/node\";\n\nexport class Pagination {\n  static empty = { result: [], meta: { exhausted: true } };\n\n  static infinite<T>(infinite: UseInfiniteQueryResult<Paged<T>>): T[] {\n    return (\n      infinite.data?.pages\n        ?.flat()\n        .map((data) => data.result)\n        .flat() ?? []\n    );\n  }\n}\n\nexport type { Paged, PageType } from \"@bgord/node\";\n\nexport type PagedMetaType = Paged<unknown>[\"meta\"];\n","import React from \"react\";\n\ntype ReorderingBaseItemType = { id: string };\ntype ReorderingIndexType = number;\ntype ReorderingCorrelationIdType = string;\n\nexport type ReorderingTransferType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType\n> = {\n  correlationId: ReorderingCorrelationIdType;\n  id: T[\"id\"];\n  item: T;\n  to: ReorderingIndexType;\n};\n\nexport type UseReorderingConfigType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType\n> = {\n  correlationId: ReorderingCorrelationIdType;\n  initialItems: T[];\n  callback: (transfer: ReorderingTransferType<T>) => void;\n  enabled?: boolean;\n};\n\nexport type UseReorderingReturnType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType\n> = {\n  items: T[];\n  enabled: boolean;\n  props: {\n    item: (index: ReorderingIndexType) => {\n      onDragOver: (event: React.DragEvent<HTMLElement>) => void;\n    };\n    handle: (index: ReorderingIndexType) => {\n      onDragStart: (event: React.DragEvent<HTMLElement>) => void;\n      onDragEnd: (event: React.DragEvent<HTMLElement>) => void;\n      draggable: UseReorderingConfigType<T>[\"enabled\"];\n    };\n  };\n};\n\nexport function useReordering<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType\n>(config: UseReorderingConfigType<T>): UseReorderingReturnType<T> {\n  const enabled = config.enabled ?? true;\n\n  const [items, setItems] = React.useState<T[]>(config.initialItems);\n  React.useEffect(\n    () => setItems(config.initialItems),\n    [JSON.stringify(config.initialItems)]\n  );\n\n  const draggedItem = React.useRef<T | null>(null);\n\n  const [startIndex, setStartIndex] =\n    React.useState<ReorderingIndexType | null>(null);\n  const [toIndex, setToIndex] = React.useState<ReorderingIndexType | null>(\n    null\n  );\n\n  function onDragStartFactory(index: ReorderingIndexType) {\n    return function onDragStart(event: React.DragEvent<HTMLElement>) {\n      setStartIndex(index);\n      draggedItem.current = items[index] ?? null;\n\n      if (!event?.dataTransfer || event.currentTarget.parentNode) return;\n\n      event.dataTransfer.effectAllowed = \"move\";\n      event.dataTransfer.setData(\n        \"text/html\",\n        event.currentTarget.parentNode as unknown as string\n      );\n      event.dataTransfer.setDragImage(\n        event.currentTarget.parentNode as unknown as Element,\n        20,\n        20\n      );\n    };\n  }\n\n  function onDragOverFactory(index: ReorderingIndexType) {\n    return function onDragOver(event: React.DragEvent<HTMLElement>) {\n      event.preventDefault();\n\n      const draggedOverItem = items[index];\n      setToIndex(index);\n\n      // if the item is dragged over itself, ignore\n      if (draggedItem.current === draggedOverItem || !draggedItem.current) {\n        return;\n      }\n\n      // filter out the currently dragged item\n      // add the dragged item after the dragged over item\n      setItems(\n        items\n          .filter((item) => item !== draggedItem.current)\n          .toSpliced(index, 0, draggedItem.current)\n      );\n    };\n  }\n\n  function onDragEndFactory(index: ReorderingIndexType) {\n    return function onDragEnd(_event: React.DragEvent<HTMLElement>) {\n      if (startIndex !== null && toIndex !== null && startIndex !== toIndex) {\n        config.callback({\n          correlationId: config.correlationId,\n          id: items[index]?.id as T[\"id\"],\n          item: items[index] as T,\n          to: toIndex as ReorderingIndexType,\n        });\n      }\n\n      setStartIndex(null);\n      draggedItem.current = null;\n      setToIndex(null);\n    };\n  }\n\n  const cursor = enabled ? (draggedItem.current ? \"grabbing\" : \"grab\") : \"auto\";\n\n  return {\n    items,\n    enabled,\n    props: {\n      item: (index: ReorderingIndexType) => ({\n        onDragOver: onDragOverFactory(index),\n      }),\n      handle: (index: ReorderingIndexType) => ({\n        onDragStart: onDragStartFactory(index),\n        onDragEnd: onDragEndFactory(index),\n        draggable: enabled,\n        style: { cursor },\n      }),\n    },\n  };\n}\n","export type RhythmBaseType = number;\nexport type RhythmTimesType = number;\n\nconst DEFAULT_BASE_PX = 12;\n\nexport function Rhythm(base: RhythmBaseType = DEFAULT_BASE_PX) {\n  return {\n    times(times: RhythmTimesType) {\n      const result = base * times;\n\n      const dimensions = {\n        height: { height: px(result) },\n        minHeight: { minHeight: px(result) },\n        maxHeight: { maxHeight: px(result) },\n        width: { width: px(result) },\n        minWidth: { minWidth: px(result) },\n        maxWidth: { maxWidth: px(result) },\n        square: { height: px(result), width: px(result) },\n      };\n\n      const style = {\n        height: { style: { height: px(result) } },\n        minHeight: { style: { minHeight: px(result) } },\n        maxHeight: { style: { maxHeight: px(result) } },\n        width: { style: { width: px(result) } },\n        minWidth: { style: { minWidth: px(result) } },\n        maxWidth: { style: { maxWidth: px(result) } },\n        square: { style: { height: px(result), width: px(result) } },\n      };\n\n      return { px: px(result), raw: result, style, ...dimensions };\n    },\n  };\n}\n\nfunction px(number: number) {\n  return `${number}px`;\n}\n","export class Sorts {\n  static updatedAtMostRecent<T extends { updatedAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.descending(a.updatedAt.raw, b.updatedAt.raw);\n  }\n\n  static updatedAtLeastRecent<T extends { updatedAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.ascending(a.updatedAt.raw, b.updatedAt.raw);\n  }\n\n  static createdAtMostRecent<T extends { createdAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.descending(a.createdAt.raw, b.createdAt.raw);\n  }\n\n  static createdAtLeastRecent<T extends { createdAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.ascending(a.createdAt.raw, b.createdAt.raw);\n  }\n\n  static aToZ(a: string, b: string): number {\n    return a.localeCompare(b);\n  }\n\n  static zToA(a: string, b: string): number {\n    return b.localeCompare(a);\n  }\n\n  static ascending(a: number, b: number): number {\n    return a > b ? 1 : 0;\n  }\n\n  static descending(a: number, b: number): number {\n    return a < b ? 1 : 0;\n  }\n}\n","export class ThousandsSeparator {\n  private static DEFAULT_SEPARATOR = ' ';\n\n  static format(\n    value: number,\n    separator = ThousandsSeparator.DEFAULT_SEPARATOR\n  ): string {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\n  }\n}\n","import React from \"react\";\nimport { useList } from \"./hooks/use-list\";\n\nexport type ToastsConfigType = {\n  timeout?: number;\n};\n\nexport type BaseToastType = {\n  id: string;\n  message: string;\n};\n\ntype ToastsContextDataType<ToastType extends BaseToastType = BaseToastType> = [\n  ToastType[],\n  {\n    add: (toast: Omit<ToastType, \"id\">) => void;\n    remove: (toast: ToastType) => void;\n    clear: VoidFunction;\n  }\n];\n\nconst ToastsContext = React.createContext<ToastsContextDataType | undefined>(\n  undefined\n);\n\nexport function ToastsContextProvider(\n  props: { children: JSX.Element | JSX.Element[] } & ToastsConfigType\n) {\n  function useToastsImplementation(): ToastsContextDataType {\n    const timeout = props?.timeout ?? 5000;\n\n    const [toasts, actions] = useList<BaseToastType>({\n      comparisonFn: (a, b) => a.id === b.id,\n    });\n\n    function add(payload: Omit<BaseToastType, \"id\">) {\n      const id = String(Date.now());\n      const toast = { ...payload, id };\n\n      actions.add(toast);\n      setTimeout(() => actions.remove(toast), timeout);\n    }\n\n    return [\n      toasts.toReversed(),\n      { add, remove: actions.remove, clear: actions.clear },\n    ];\n  }\n\n  const [toasts, actions] = useToastsImplementation();\n\n  return (\n    <ToastsContext.Provider value={[toasts, actions]}>\n      {props.children}\n    </ToastsContext.Provider>\n  );\n}\n\nexport function useToastsContext<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const context = React.useContext<ToastsContextDataType<ToastType>>(\n    ToastsContext as unknown as React.Context<ToastsContextDataType<ToastType>>\n  );\n\n  if (context === undefined) {\n    throw new Error(`useToasts must be used within the ToastsContextProvider`);\n  }\n\n  return context;\n}\n\nexport function useToastTrigger<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const [, actions] = useToastsContext<ToastType>();\n\n  return actions.add;\n}\n"],"names":["usePreviousValue","value","defaultValue","previousValue","useRef","useEffect","current","AnimaState","Anima","props","duration","_props$duration","state","setState","React","useState","visible","isInitial","appeared","appearing","hidden","previousState","setTimeout","hiding","cloneElement","children","effect","style","_extends","getAnimaProps","AnimaList","rest","_objectWithoutPropertiesLoose","_excluded","setIsInitial","map","child","useAnimaList","list","config","direction","_config$direction","officialList","setOfficialList","item","added","x","some","id","push","length","deleted","every","items","updated","find","y","count","filter","ServerError","constructor","message","_known","this","static","Object","hasOwnProperty","response","ok","error","json","isServerError","payload","API","input","init","fetch","mode","redirect","headers","Date","getTimezoneOffset","toString","then","extract","catch","handle","DurationFormatter","minutes","Math","floor","seconds","String","padStart","useField","name","evaluatedDefaultValue","setValue","set","handleChange","event","currentTarget","clear","label","htmlFor","changed","unchanged","extractUseField","field","AUDIO_DEFAULT_VOLUME","UseAudioState","useAudio","src","initial","ref","currentTime","volume","muted","percentage","round","seek","target","valueAsNumber","changeVolume","audio","onTimeUpdate","onLoadedMetadata","ready","onEnded","paused","controls","player","min","step","max","onInput","actions","play","playing","pause","mute","unmute","reset","meta","isReady","isPlaying","isPaused","matches","states","given","raw","formatted","format","useAutofocus","condition","_config$ref$current","focus","getSafeWindow","window","useWindowDimensions","windowSize","setWindowSize","width","undefined","height","safeWindow","addEventListener","handleResize","removeEventListener","innerWidth","innerHeight","useBreakpoint","breakpoint","dimensions","_dimensions$width","useClickOutside","onClickOutside","exclude","document","handleClickOutside","_ref$current","contains","node","_node$current","noop","useClientFilter","defaultQuery","_config$defaultQuery","currentQuery","_config$currentQuery","filterFn","_config$filterFn","query","options","keys","enum","onUpdate","_config$onUpdate","setQuery","previousQuery","onChange","newQuery","isNewQueryInEnum","Boolean","useClientSearch","toLowerCase","includes","defaultSortFn","useClientSort","default","sortFn","_config$options$state","newSort","isNewSortInEnum","Days","hours","ms","Hours","Minutes","Seconds","Time","getCurrentTimestamp","now","useCurrentTimestamp","timestamp","setTimestamp","timer","setInterval","clearInterval","useDebounce","debouncedValue","setDebouncedValue","delayMs","clearTimeout","useToggle","on","setIsOn","off","enable","disable","toggle","v","extractUseToggle","useDelayedLoader","delayedLoader","delayElapsed","timeoutId","isLoading","useDesignMode","designMode","useDisablePullToRefresh","useLayoutEffect","html","querySelector","body","originalHtmlOverscrollBehavior","getComputedStyle","overscrollBehavior","originalBodyOverflowBehavior","useDocumentTitle","title","UseExpandableListState","UseFileState","useExpandableList","numberOfExcessiveElements","areThereExcessiveElements","getState","contracted","expanded","displayShowMore","displayShowLess","showMore","showLess","_element","index","useFile","maxSize","_config$maxSize","Infinity","key","setKey","idle","file","setFile","selectFile","files","size","selected","clearFile","preview","useMemo","URL","createObjectURL","isIdle","isSelected","isError","data","multiple","useKeyboardShortcuts","enabled","_options$enabled","unsubscribeShortcuts","tinykeys","useFocusKeyboardShortcut","shortcut","useHover","_config$enabled","isHovering","handleMouseEnter","handleMouseLeave","attach","emptyImageResolution","getImageResolution","path","img","createElement","promise","Promise","resolve","reject","onload","onerror","useImageFileResolution","resolution","async","result","execute","_file$data","useIsOnline","onlineStatus","navigator","onLine","handleOnline","handleOffline","defaultUseIsVisibleConfig","threshold","root","rootMargin","isIntersectionObserverSupported","IntersectionObserverEntry","prototype","useIsVisible","isVisible","setVisible","element","observer","IntersectionObserver","entry","_entry$","isIntersecting","observe","unobserve","defaultComparisonFn","a","b","useItem","comparisonFn","_config$comparisonFn","setItem","_config$defaultItem","defaultItem","newer","isDefault","exists","compare","KeyNameEnum","PluralizationSupportedLanguages","useKeyHandler","executor","pluralize","language","en","_options$plural","plural","singular","pl","_options$value","polishPlurals","genitive","console","warn","TranslationsContext","createContext","translations","TranslationsContextProvider","Provider","useTranslations","useContext","Error","variables","translation","entries","reduce","placeholder","replace","useLanguage","usePluralize","useLanguageSelector","supportedLanguages","previous","Cookies","location","reload","useLeavingPrompt","handler","e","preventDefault","useList","defaultItems","_config$defaultItems","setItems","add","Array","isArray","remove","isAdded","update","useMetaEnterSubmit","onKeyDown","metaKey","_event$currentTarget$","form","dispatchEvent","Event","cancelable","usePagination","previousPage","_meta$value","nextPage","_meta$value2","lastPage","_meta$value3","page","last","firstPage","active","disabled","go","SafeLocalStorage","fallbackValue","Storage","get","usePersistentToggle","RateLimiter","lastInvocationTimestamp","verify","currentTimestamp","allowed","nextAllowedTimestamp","limitMs","remainingMs","useRateLimiter","rateLimiter","args","action","fallback","useScroll","scrollPosition","setScrollPosition","scrollbarVisibility","measure","scrollY","clientHeight","scrollHeight","goToTop","scrollTo","top","left","behavior","position","hasChanged","useScrollLock","originalHtmlOverflow","overflow","useSound","Audio","bind","useUrlFilter","_URLSearchParams$get","URLSearchParams","search","url","params","delete","history","pushState","VIDEO_DEFAULT_VOLUME","UseVideoState","useVideo","video","triggerFullscreen","requestFullscreen","Dialog","dialog","hooks","_ref$current2","showModal","close","Escape","tabIndex","OfflineIndicator","OutboundLink","as","rel","exec","forEach","DevTools","Dimensions","Truncates","cache","setCache","Map","className","type","onClick","handleTruncateClick","elements","querySelectorAll","updatedCache","originalText","textContent","has","repeat","Switch","Fragment","checked","defaultOnCopyToClipboardFailure","copyToClipboard","onFailure","_options$onFailure","onSuccess","_options$onSuccess","clipboard","writeText","text","DateFormatter","date","toLocaleString","_padDatePart","getDate","getMonth","getFullYear","getUTCHours","getUTCMinutes","getUTCSeconds","getHours","getMinutes","getSeconds","localTimestamp","toISOString","slice","HourFormatter","utcHour","timeZoneOffsetInMins","localHour","ETag","revision","WeakETag","FeatureFlagsContext","FeatureFlagsContextProvider","useFeatureFlags","useFeatureFlag","FilterUrl","filters","nonEmptyFilters","getNonEmptyFilters","fromEntries","_key","Form","required","_config$required","pattern","isClient","LineClamp","lines","Approximation","decimalPlaces","parseFloat","toFixed","MinMaxScaler","lower","upper","_config$bound$lower","_config$bound","bound","_config$bound$upper","_config$bound2","scale","original","scaled","isMin","isMax","float","descale","isLowerBound","isUpperBound","values","Pagination","infinite","_infinite$data$pages$","_infinite$data","_infinite$data$pages","pages","flat","useReordering","initialItems","JSON","stringify","draggedItem","startIndex","setStartIndex","toIndex","setToIndex","onDragStartFactory","_items$index","dataTransfer","parentNode","effectAllowed","setData","setDragImage","onDragOverFactory","draggedOverItem","toSpliced","onDragEndFactory","_event","_items$index2","callback","correlationId","to","cursor","onDragOver","onDragStart","onDragEnd","draggable","Rhythm","base","times","px","minHeight","maxHeight","minWidth","maxWidth","square","number","empty","exhausted","Sorts","descending","updatedAt","ascending","createdAt","localeCompare","ThousandsSeparator","separator","DEFAULT_SEPARATOR","ToastsContext","ToastsContextProvider","toasts","timeout","_props$timeout","toReversed","toast","useToastsImplementation","useToastsContext","context","useToastTrigger"],"mappings":"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"}