import{useState as e,useEffect as n,useLayoutEffect as t,useRef as o}from"react";function r(n=!1){const[t,o]=e(n);return{on:t,off:!t,enable:()=>o(!0),disable:()=>o(!1),toggle:()=>o(e=>!e)}}function d(){const[t,o]=e({width:void 0,height:void 0});return n(()=>{function e(){o({width:window.innerWidth,height:window.innerHeight})}return window.addEventListener("resize",e),e(),()=>window.removeEventListener("resize",e)},[]),t}function i(e=!0){t(()=>{if(!e)return;const n=document.querySelector("html"),t=document.body,o=window.getComputedStyle(t).overflow,r=window.getComputedStyle(n).overflow;return t.style.overflow="hidden",n.style.overflow="hidden",()=>{t.style.overflow=o,n.style.overflow=r}},[e])}function c(e){const t=o(null);return n(()=>{t.current=e}),t.current}var u;function s(t){const o=t.length-t.max,r=t.length>t.max;function d(){return r?u.contracted:u.expanded}const[i,c]=e(d);return n(()=>c(d()),[t.length,t.max]),{state:i,displayShowMore:i===u.contracted,displayShowLess:i===u.expanded&&r,showMore:function(){i===u.contracted&&c(u.expanded)},showLess:function(){i===u.expanded&&c(u.contracted)},numberOfExcessiveElements:o,filterFn:function(e,n){return i===u.expanded||n<t.max}}}!function(e){e.contracted="contracted",e.expanded="expanded"}(u||(u={}));export{u as UseExpandableListState,s as useExpandableList,c as usePreviousValue,i as useScrollLock,r as useToggle,d as useWindowDimensions};
//# sourceMappingURL=bgord-frontend.modern.js.map
