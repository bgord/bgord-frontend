{"version":3,"file":"bgord-frontend.cjs","sources":["../hooks/use-previous-value.ts","../anima.tsx","../server-error.ts","../durations.ts","../hooks/use-field.ts","../hooks/use-autofocus.ts","../safe-window.ts","../hooks/use-window-dimensions.ts","../time.ts","../hooks/use-expandable-list.ts","../hooks/use-file.ts","../hooks/use-current-timestamp.ts","../hooks/use-filter.ts","../hooks/use-toggle.ts","../get-image-resolution.ts","../hooks/use-keyboard-handler.ts","../hooks/use-is-online.ts","../hooks/use-is-visible.ts","../hooks/use-keyboard-shortcuts.ts","../hooks/use-list.ts","../safe-local-storage.ts","../rate-limiter.ts","../hooks/use-scroll-lock.ts","../copy-to-clipboard.ts","../dates.ts","../filter-url.ts","../pagination.ts","../pluralize.ts","../rhythm.ts","../toasts.tsx","../translations.tsx","../api.ts","../hooks/use-audio.ts","../components/dialog.tsx","../components/offline-indicator.tsx","../components/outbound-link.tsx","../exec.ts","../is-client.ts","../hooks/use-breakpoint.ts","../hooks/use-click-outside.ts","../hooks/use-client-search.ts","../hooks/use-debounce.ts","../hooks/use-disable-pull-to-refresh.ts","../hooks/use-document-title.ts","../hooks/use-hover.ts","../hooks/use-image-file-resolution.ts","../hooks/use-leaving-prompt.ts","../hooks/use-persistent-toggle.ts","../hooks/use-rate-limiter.ts","../hooks/use-scroll.ts","../hooks/use-sound.ts","../hooks/use-url-filter.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport function usePreviousValue<T>(value: T, defaultValue?: T | undefined) {\n  const previousValue = useRef<T | undefined>(defaultValue);\n\n  useEffect(() => {\n    previousValue.current = value;\n  });\n\n  return previousValue.current;\n}\n","import React from \"react\";\n\nimport { usePreviousValue } from \"./hooks/use-previous-value\";\n\nexport enum AnimaState {\n  appearing = \"appearing\",\n  appeared = \"appeared\",\n  hidding = \"hidding\",\n  hidden = \"hidden\",\n}\n\nexport type AnimaEffectType = string;\n\nexport type AnimaConfigType = {\n  children: JSX.Element;\n\n  visible: boolean;\n  effect: AnimaEffectType;\n\n  duration?: number;\n  isInitial?: boolean;\n};\n\nexport function Anima(props: AnimaConfigType) {\n  const duration = props.duration ?? 300;\n\n  function getInitialState() {\n    if (!props.visible) return AnimaState.hidden;\n    if (props.isInitial) return AnimaState.appeared;\n    return AnimaState.appearing;\n  }\n\n  const [state, setState] = React.useState<AnimaState>(getInitialState);\n  const previousState = usePreviousValue(state);\n\n  React.useEffect(() => {\n    if (props.isInitial) return;\n\n    if (props.visible) {\n      setState(AnimaState.appearing);\n      setTimeout(() => setState(AnimaState.appeared), 100);\n    } else {\n      if (!previousState) return;\n      setState(AnimaState.hidding);\n      setTimeout(() => setState(AnimaState.hidden), duration);\n    }\n  }, [props.visible]);\n\n  if (state === AnimaState.hidden) return null;\n\n  return React.cloneElement(props.children, {\n    \"data-anima\": state,\n    \"data-anima-effect\": props.effect,\n    style: { \"--duration\": `${duration}ms`, ...props.children.props.style },\n  });\n}\n\nexport function getAnimaProps(props: Record<string, any>) {\n  return {\n    \"data-anima\": props[\"data-anima\"] as AnimaState | undefined,\n    \"data-anima-effect\": props[\"data-anima-effect\"] as\n      | AnimaEffectType\n      | undefined,\n    style: props.style as React.CSSProperties,\n  };\n}\n\nexport type AnimaListPropsType = {\n  children: JSX.Element[];\n} & JSX.IntrinsicElements[\"ul\"];\n\nexport function AnimaList(props: AnimaListPropsType) {\n  const { children, ...rest } = props;\n\n  const [isInitial, setIsInitial] = React.useState<boolean>(true);\n\n  React.useEffect(() => setIsInitial(false), []);\n\n  return (\n    <ul {...rest}>\n      {props.children.map((child) => React.cloneElement(child, { isInitial }))}\n    </ul>\n  );\n}\n\nexport type UseAnimaListDirectionType = \"head\" | \"tail\";\n\nexport type UseAnimaListConfigType = {\n  direction?: UseAnimaListDirectionType;\n  duration?: number;\n};\n\nexport type UseAnimaListItemType<T> = { item: T; props: { visible: boolean } };\n\ntype UseAnimaListReturnType<T> = {\n  items: { item: T; props: { visible: boolean } }[];\n  count: number;\n};\n\nexport function useAnimaList<T extends { id: string }>(\n  list: T[],\n  config?: UseAnimaListConfigType\n): UseAnimaListReturnType<T> {\n  const duration = config?.duration ?? 300;\n  const direction = config?.direction ?? \"head\";\n\n  const [officialList, setOfficialList] = React.useState<\n    UseAnimaListItemType<T>[]\n  >(list.map((item) => ({ item, props: { visible: true } })));\n\n  let added: T[] = [];\n\n  for (const item of list) {\n    const wasAdded = !officialList\n      .map((x) => x.item)\n      .some((x) => item.id === x.id);\n\n    if (wasAdded) added.push(item);\n  }\n\n  React.useEffect(() => {\n    if (added.length === 0) return;\n\n    if (direction === \"head\") {\n      setOfficialList((officialList) => [\n        ...added.map((item) => ({ item, props: { visible: true } })),\n        ...officialList,\n      ]);\n    } else {\n      setOfficialList((officialList) => [\n        ...officialList,\n        ...added.map((item) => ({ item, props: { visible: true } })),\n      ]);\n    }\n\n    added = [];\n  }, [added.length, direction]);\n\n  let deleted: T[] = [];\n\n  for (const { item } of officialList) {\n    const wasDeleted = list.every((x) => x.id !== item.id);\n\n    if (wasDeleted) deleted.push(item);\n  }\n\n  React.useEffect(() => {\n    if (deleted.length === 0) return;\n\n    setOfficialList((officialList) =>\n      officialList.map((x) => {\n        const wasDeleted = deleted.some((item) => item.id === x.item.id);\n\n        return wasDeleted ? { ...x, props: { visible: false } } : x;\n      })\n    );\n\n    deleted = [];\n  }, [deleted.length]);\n\n  return {\n    items: officialList.map((item) => {\n      const updated = list.find((y) => y.id === item.item.id);\n      return updated ? { ...item, item: updated } : item;\n    }),\n    count: officialList.filter((x) => x.props.visible).length,\n  };\n}\n","export type ServerErrorConfigType = {\n  message: string;\n};\n\nexport class ServerError {\n  message: ServerErrorConfigType[\"message\"];\n\n  _known = true;\n\n  constructor(config: ServerErrorConfigType) {\n    this.message = config.message;\n  }\n\n  static isServerError(value: unknown): value is ServerError {\n    if (\n      value &&\n      typeof value === \"object\" &&\n      value === Object(value) &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"_known\") &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"message\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  static async extract(response: Response) {\n    if (response.ok) return response;\n\n    const error = await response.json();\n\n    const message = ServerError.isServerError(error)\n      ? error.message\n      : \"app.error.general\";\n\n    throw new ServerError({ message });\n  }\n\n  static async handle(payload: unknown): Promise<Response> {\n    throw new ServerError({\n      message: ServerError.isServerError(payload)\n        ? payload.message\n        : \"app.error.general\",\n    });\n  }\n}\n","export class DurationFormatter {\n  static format(duration: number) {\n    const minutes = Math.floor(duration / 60);\n    const seconds = duration % 60;\n\n    const formattedMinutes = String(minutes).padStart(2, \"0\");\n    const formattedSeconds = String(seconds).padStart(2, \"0\");\n\n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n","import { useState, Dispatch, SetStateAction } from \"react\";\n\nexport type UseFieldDefaultValueType<T> = T | (() => T);\nexport type UseFieldNameType = string;\n\nexport type UseFieldReturnType<T> = {\n  value: T;\n  set: Dispatch<SetStateAction<T>>;\n  clear: VoidFunction;\n  label: { props: { htmlFor: UseFieldNameType } };\n  input: { props: { id: UseFieldNameType; name: UseFieldNameType } };\n  changed: boolean;\n  unchanged: boolean;\n};\n\nexport function useField<T>(\n  name: UseFieldNameType,\n  defaultValue: UseFieldDefaultValueType<T>\n): UseFieldReturnType<T> {\n  const evaluatedDefaultValue =\n    // @ts-ignore\n    typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n\n  const [value, setValue] = useState(evaluatedDefaultValue);\n\n  function clear() {\n    setValue(evaluatedDefaultValue);\n  }\n\n  return {\n    value,\n    set: setValue,\n    clear,\n    label: { props: { htmlFor: name } },\n    input: { props: { id: name, name: name } },\n    changed: value !== evaluatedDefaultValue,\n    unchanged: value == evaluatedDefaultValue,\n  };\n}\n","import React from \"react\";\n\nexport type UseAutofocusConfigType = {\n  ref: React.RefObject<HTMLElement>;\n  condition: boolean;\n};\n\nexport function useAutofocus(config: UseAutofocusConfigType) {\n  React.useEffect(() => {\n    if (!config.condition) return;\n\n    config.ref.current?.focus();\n  }, [config.condition]);\n}\n","export function getSafeWindow() {\n  if (typeof window === \"undefined\") return undefined;\n  return window;\n}\n","import { useState, useEffect } from \"react\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type WindowDimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowDimensions(): WindowDimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowDimensions>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    const safeWindow = getSafeWindow();\n\n    if (!safeWindow) return;\n\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: safeWindow?.innerWidth,\n        height: safeWindow?.innerHeight,\n      });\n    }\n\n    // Add event listener\n    safeWindow.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => safeWindow.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","export function Days(value: number) {\n  return {\n    value,\n    toHours() {\n      return value * 24;\n    },\n    toMinutes() {\n      return value * 24 * 60;\n    },\n    toSeconds() {\n      return value * 24 * 60 * 60;\n    },\n    toMs() {\n      return value * 24 * 60 * 60 * 1000;\n    },\n  };\n}\n\nexport function Hours(value: number) {\n  return {\n    value,\n    toMinutes() {\n      return value * 60;\n    },\n    toSeconds() {\n      return value * 60 * 60;\n    },\n    toMs() {\n      return value * 60 * 60 * 1000;\n    },\n  };\n}\n\nexport function Minutes(value: number) {\n  return {\n    value,\n    toSeconds() {\n      return value * 60;\n    },\n    toMs() {\n      return value * 60 * 1000;\n    },\n  };\n}\n\nexport function Seconds(value: number) {\n  return {\n    value,\n    toMs() {\n      return value * 1000;\n    },\n  };\n}\n\nexport const Time = { Days, Hours, Minutes, Seconds };\n","import { useState, useEffect } from \"react\";\n\nexport type UseExpandableListConfigType = { max: number; length: number };\n\nexport enum UseExpandableListState {\n  contracted = \"contracted\",\n  expanded = \"expanded\",\n}\n\nexport function useExpandableList(config: UseExpandableListConfigType) {\n  const numberOfExcessiveElements = config.length - config.max;\n  const areThereExcessiveElements = config.length > config.max;\n\n  function getState() {\n    return areThereExcessiveElements\n      ? UseExpandableListState.contracted\n      : UseExpandableListState.expanded;\n  }\n\n  const [state, setState] = useState<UseExpandableListState>(getState);\n\n  useEffect(() => setState(getState()), [config.length, config.max]);\n\n  function showMore() {\n    if (state === UseExpandableListState.contracted) {\n      setState(UseExpandableListState.expanded);\n    }\n  }\n\n  function showLess() {\n    if (state === UseExpandableListState.expanded) {\n      setState(UseExpandableListState.contracted);\n    }\n  }\n\n  function filterFn(_element: any, index: number) {\n    if (state === UseExpandableListState.expanded) return true;\n    return index < config.max;\n  }\n\n  return {\n    state,\n    displayShowMore: state === UseExpandableListState.contracted,\n    displayShowLess:\n      state === UseExpandableListState.expanded && areThereExcessiveElements,\n    showMore,\n    showLess,\n    numberOfExcessiveElements,\n    filterFn,\n  };\n}\n","import { useState } from \"react\";\n\nexport type UseFileConfigType = {\n  maxSize?: number;\n};\n\nexport enum UseFileState {\n  \"idle\" = \"idle\",\n  \"selected\" = \"selected\",\n  \"error\" = \"error\",\n}\n\ntype UseFileIdle = {\n  state: UseFileState.idle;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n};\n\ntype UseFileSelected = {\n  state: UseFileState.selected;\n  data: File;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n    previewFile: () => ReturnType<typeof URL.createObjectURL> | undefined;\n  };\n};\n\ntype UseFileError = {\n  state: UseFileState.error;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n};\n\nexport type UseFileReturnType = UseFileIdle | UseFileSelected | UseFileError;\n\nexport function useFile(config?: UseFileConfigType): UseFileReturnType {\n  const maxSize = config?.maxSize ?? Infinity;\n\n  const [state, setState] = useState<UseFileState>(UseFileState.idle);\n\n  const [file, setFile] = useState<File | null>(null);\n\n  function selectFile(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.currentTarget.files;\n\n    if (!files || !files[0]) return;\n\n    const file = files[0];\n\n    if (file.size > maxSize) {\n      setState(UseFileState.error);\n      return undefined;\n    }\n\n    setFile(file);\n    setState(UseFileState.selected);\n\n    return file;\n  }\n\n  function clearFile() {\n    setFile(null);\n    setState(UseFileState.idle);\n  }\n\n  function previewFile() {\n    if (!file) return undefined;\n    return URL.createObjectURL(file);\n  }\n\n  if (state === UseFileState.idle) {\n    return { state, data: null, actions: { selectFile, clearFile } };\n  }\n\n  if (state === UseFileState.selected) {\n    return {\n      state,\n      data: file as File,\n      actions: { selectFile, clearFile, previewFile },\n    };\n  }\n\n  return { state, data: null, actions: { selectFile, clearFile } };\n}\n","import { useState, useEffect } from \"react\";\nimport { Time } from \"../time\";\n\nexport type CurrentTimestampType = number;\n\nexport function getCurrentTimestamp(): CurrentTimestampType {\n  return Date.now();\n}\n\nexport function useCurrentTimestamp(): CurrentTimestampType {\n  const [timestamp, setTimestamp] =\n    useState<CurrentTimestampType>(getCurrentTimestamp);\n\n  useEffect(() => {\n    const timer = setInterval(\n      () => setTimestamp(getCurrentTimestamp()),\n      Time.Seconds(1).toMs()\n    );\n\n    return () => clearInterval(timer);\n  }, []);\n\n  return timestamp;\n}\n","import { useState, useEffect } from \"react\";\nimport { usePreviousValue } from \"./use-previous-value\";\nimport { noop } from \"../noop\";\n\nexport type UseFilterQueryType = string | undefined;\n\nexport type UseFilterConfigType<T> = {\n  label: string;\n  enum: { [key: string]: UseFilterQueryType };\n  defaultQuery?: UseFilterQueryType;\n  currentQuery?: UseFilterQueryType;\n  filterFn?: (value: T) => boolean;\n  onUpdate?: (\n    current: UseFilterQueryType,\n    previous: UseFilterQueryType\n  ) => void;\n};\n\nexport function useFilter<T = string>(config: UseFilterConfigType<T>) {\n  const defaultQuery = config.defaultQuery ?? undefined;\n  const currentQuery = config.currentQuery ?? undefined;\n\n  const filterFn = config.filterFn ?? defaultFilterFn;\n  const options = Object.keys(config.enum);\n  const onUpdate = config?.onUpdate ?? noop;\n\n  const [query, setQuery] = useState<UseFilterQueryType>(\n    currentQuery ?? defaultQuery\n  );\n  const previousQuery = usePreviousValue(query);\n\n  function clear() {\n    setQuery(defaultQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newQuery = event.currentTarget.value;\n\n    const isNewQueryInEnum = Boolean(config.enum[String(newQuery)]);\n\n    setQuery(isNewQueryInEnum ? newQuery : undefined);\n  }\n\n  function defaultFilterFn(value: T) {\n    if (query === undefined) return true;\n\n    return query === String(value);\n  }\n\n  useEffect(() => {\n    onUpdate(query, previousQuery);\n  }, [previousQuery, query]);\n\n  return {\n    query,\n    clear,\n    onChange,\n    filterFn,\n    options,\n    onUpdate,\n    label: config.label,\n  };\n}\n","import { useState } from \"react\";\n\nexport type UseToggleValueType = boolean;\n\nexport type UseToggleReturnType = {\n  on: UseToggleValueType;\n  off: UseToggleValueType;\n  enable: VoidFunction;\n  disable: VoidFunction;\n  toggle: VoidFunction;\n};\n\nexport function useToggle(defaultValue = false): UseToggleReturnType {\n  const [on, setIsOn] = useState(defaultValue);\n\n  const enable = () => setIsOn(true);\n  const disable = () => setIsOn(false);\n  const toggle = () => setIsOn((v) => !v);\n\n  return { on, off: !on, enable, disable, toggle };\n}\n","export type ImagePathType = string | undefined;\n\nexport type ImageResolutionType = {\n  width: number | null;\n  height: number | null;\n};\n\nexport const emptyImageResolution: ImageResolutionType = {\n  width: null,\n  height: null,\n};\n\nexport async function getImageResolution(\n  path: ImagePathType\n): Promise<ImageResolutionType> {\n  if (!path) return emptyImageResolution;\n\n  const img = document.createElement(\"img\");\n\n  const promise = new Promise<ImageResolutionType>((resolve, reject) => {\n    img.onload = () => resolve({ width: img.width, height: img.height });\n    img.onerror = reject;\n  });\n\n  img.src = path;\n\n  return promise;\n}\n","import React from \"react\";\n\nexport enum KeyNameEnum {\n  Enter = \"Enter\",\n  Space = \" \",\n}\n\nexport type UseKeyHandlerConfigType = Partial<Record<KeyNameEnum, Function>>;\n\nexport function useKeyHandler(config: UseKeyHandlerConfigType) {\n  const keys = Object.keys(config);\n\n  function handleKey(event: React.KeyboardEvent<HTMLElement>) {\n    const key = event.key as KeyNameEnum;\n    const executor = config[key];\n\n    if (keys.includes(event.key) && config[key] && executor) {\n      executor();\n    }\n  }\n\n  return handleKey;\n}\n","import React from \"react\";\nimport { useToggle } from \"./use-toggle\";\n\ntype OnlineStatusType = boolean;\n\nexport const useIsOnline = (): OnlineStatusType => {\n  const onlineStatus = useToggle(getOnlineStatus());\n\n  React.useEffect(() => {\n    function handleOnline() {\n      onlineStatus.enable();\n    }\n\n    function handleOffline() {\n      onlineStatus.disable();\n    }\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  return onlineStatus.on;\n};\n\n// Check if browser supports `navigator.onLine`,\n// otherwise, we assume the user is online.\nfunction getOnlineStatus(): OnlineStatusType {\n  return typeof navigator !== \"undefined\" &&\n    typeof navigator.onLine === \"boolean\"\n    ? navigator.onLine\n    : true;\n}\n","import { RefObject, useEffect, useState } from \"react\";\n\nexport const defaultUseIsVisibleConfig = {\n  threshold: 0,\n  root: null,\n  rootMargin: \"0%\",\n  ref: { current: null },\n};\n\nexport function isIntersectionObserverSupported() {\n  return (\n    \"IntersectionObserver\" in window &&\n    \"IntersectionObserverEntry\" in window &&\n    \"intersectionRatio\" in window.IntersectionObserverEntry.prototype\n  );\n}\n\nexport type UseIsVisibleConfigType = IntersectionObserverInit & {\n  ref: RefObject<Element>;\n};\n\nexport type UseIsVisibleReturnType = boolean;\n\nexport function useIsVisible(\n  config: UseIsVisibleConfigType = defaultUseIsVisibleConfig\n): UseIsVisibleReturnType {\n  const [isVisible, setVisible] = useState<UseIsVisibleReturnType>(false);\n\n  useEffect(() => {\n    const element = config.ref.current;\n\n    if (!isIntersectionObserverSupported() || !element) return;\n\n    const observer = new IntersectionObserver(\n      (entry) => setVisible(Boolean(entry[0]?.isIntersecting)),\n      config\n    );\n\n    observer.observe(element);\n\n    return () => observer.unobserve(element);\n  }, []);\n\n  return isVisible;\n}\n","import React from \"react\";\nimport tinykeys from \"tinykeys\";\n\nexport interface UseKeyboardShortcurtsConfigType {\n  [keybinding: string]: (event: KeyboardEvent) => void;\n}\n\nexport function useKeyboardShortcurts(config: UseKeyboardShortcurtsConfigType) {\n  React.useEffect(() => {\n    const unsubscribeShortcuts = tinykeys(window, config);\n\n    return () => unsubscribeShortcuts();\n  }, [config]);\n}\n","import { useState, SetStateAction, Dispatch } from \"react\";\n\nexport type UseListActionsType<T> = {\n  clear: VoidFunction;\n  add: (x: T | T[]) => void;\n  remove: (x: T) => void;\n  toggle: (x: T) => void;\n  isAdded: (x: T) => boolean;\n  update: Dispatch<SetStateAction<T[]>>;\n};\n\nexport type UseListReturnType<T> = [T[], UseListActionsType<T>];\n\nexport type UseListConfigType<T> = {\n  defaultItems?: T[];\n  comparisonFn?: (a: T, b: T) => boolean;\n};\n\nexport function useList<T>(\n  config?: UseListConfigType<T>\n): UseListReturnType<T> {\n  const defaultItems = config?.defaultItems ?? [];\n\n  const defaultComparisonFn = (a: T, b: T) => a === b;\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [items, setItems] = useState<T[]>(defaultItems);\n\n  function clear() {\n    setItems([]);\n  }\n\n  function add(payload: T | T[]) {\n    setItems((items) => {\n      if (Array.isArray(payload)) {\n        return [...items, ...payload];\n      }\n      return [...items, payload];\n    });\n  }\n\n  function remove(item: T) {\n    setItems((items) => items.filter((x) => !comparisonFn(x, item)));\n  }\n\n  function isAdded(item: T) {\n    return items.some((x) => comparisonFn(x, item));\n  }\n\n  function toggle(item: T) {\n    isAdded(item) ? remove(item) : add(item);\n  }\n\n  return [items, { clear, add, remove, toggle, isAdded, update: setItems }];\n}\n","import * as Storage from \"ts-storage\";\n\nexport type SafeLocalStorageKeyType = string;\n\nexport class SafeLocalStorage {\n  static get<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    fallbackValue: T\n  ): T {\n    return Storage.get(key, fallbackValue).value;\n  }\n\n  static set<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    value: T\n  ) {\n    Storage.set(key, value);\n  }\n\n  static clear(key: SafeLocalStorageKeyType) {\n    Storage.remove(key);\n  }\n}\n","import type { TimestampType } from \"@bgord/node/dist/schema\";\nimport type { Falsy } from \"@bgord/node\";\n\nexport type RateLimiterOptionsType = {\n  limitMs: TimestampType;\n};\n\ntype RateLimiterResultSuccessType = { allowed: true };\nexport type RateLimiterResultErrorType = {\n  allowed: false;\n  remainingMs: TimestampType;\n};\ntype RateLimiterResultType =\n  | RateLimiterResultSuccessType\n  | RateLimiterResultErrorType;\n\nexport class RateLimiter {\n  private lastInvocationTimestamp: Falsy<TimestampType> = null;\n\n  private options: RateLimiterOptionsType;\n\n  constructor(options: RateLimiterOptionsType) {\n    this.options = options;\n  }\n\n  verify(currentTimestamp: TimestampType): RateLimiterResultType {\n    if (!this.lastInvocationTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    const nextAllowedTimestamp =\n      this.lastInvocationTimestamp + this.options.limitMs;\n\n    if (nextAllowedTimestamp <= currentTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    return {\n      allowed: false,\n      remainingMs: nextAllowedTimestamp - currentTimestamp,\n    };\n  }\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useScrollLock(condition = true) {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overflows\n    const originalBodyOverflow = window.getComputedStyle(body).overflow;\n    const originalHtmlOverflow = window.getComputedStyle(html).overflow;\n\n    // Prevent scrolling on mount\n    body.style.overflow = \"hidden\";\n    html.style.overflow = \"hidden\";\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      body.style.overflow = originalBodyOverflow;\n      html.style.overflow = originalHtmlOverflow;\n    };\n  }, [condition]);\n}\n","import { noop } from \"./noop\";\n\nexport type CopyToClipboardTextType = string;\ntype OnCopyToClipboardFailureType = (error?: unknown) => void;\ntype OnCopyToClipboardSuccessType = VoidFunction;\n\nconst defaultOnCopyToClipboardFailure: OnCopyToClipboardFailureType = (error) =>\n  console.warn(\"Copying to clipboard not supported\");\n\nexport type CopyToClipboardOptionsType = {\n  text: string;\n  onFailure?: OnCopyToClipboardFailureType;\n  onSuccess?: OnCopyToClipboardSuccessType;\n};\n\nexport async function copyToClipboard(options: CopyToClipboardOptionsType) {\n  const onFailure = options.onFailure ?? defaultOnCopyToClipboardFailure;\n  const onSuccess = options.onSuccess ?? noop;\n\n  if (!navigator.clipboard) onFailure();\n\n  try {\n    await navigator.clipboard.writeText(options.text);\n    onSuccess();\n  } catch (error) {\n    onFailure(error);\n  }\n}\n","import type { HourType } from \"@bgord/node/dist/schema\";\n\nimport * as Time from \"./time\";\n\nexport type DateType = Date | number | null | undefined;\n\nexport class DateFormatter {\n  static datetime(date: DateType, defaultValue = \"N/A\"): string {\n    if (!date) return defaultValue;\n\n    return new Date(date).toLocaleString();\n  }\n\n  static monthDay(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const days = DateFormatter._padDatePart(date.getDate());\n    const months = DateFormatter._padDatePart(date.getMonth() + 1);\n\n    return `${months}/${days}`;\n  }\n\n  static form(date: Date | null): string {\n    if (!date) return DateFormatter.form(new Date());\n\n    const year = DateFormatter._padDatePart(date.getFullYear());\n    const month = DateFormatter._padDatePart(date.getMonth() + 1);\n    const day = DateFormatter._padDatePart(date.getDate());\n\n    return `${year}-${month}-${day}`;\n  }\n\n  static clockUTC(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getUTCHours());\n    const minutes = DateFormatter._padDatePart(date.getUTCMinutes());\n    const seconds = DateFormatter._padDatePart(date.getUTCSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static clockLocal(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static countdown(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static _padDatePart(value: number) {\n    return String(value).padStart(2, \"0\");\n  }\n}\n\nexport class HourFormatter {\n  static convertUtcToLocal(utcHour: HourType) {\n    const timeZoneOffsetInMins = new Date().getTimezoneOffset();\n\n    const utcHourInMins = Time.Hours(utcHour).toMinutes();\n\n    const localHourInMins = utcHourInMins - timeZoneOffsetInMins;\n    const localHour = (localHourInMins / 60) % 24;\n    const formattedLocalHour = `${String(localHour).padStart(2, \"0\")}:00`;\n\n    return { value: localHour, label: formattedLocalHour };\n  }\n}\n","export type FilterType = Record<string, unknown> | undefined;\n\nexport class FilterUrl {\n  value: string;\n\n  constructor(url: string, filters?: FilterType) {\n    const query = new URLSearchParams(this.getNonEmptyFilters(filters));\n\n    if (query.toString() === \"\") {\n      this.value = url;\n\n      return;\n    }\n\n    this.value = `${url}?${query.toString()}`;\n  }\n\n  private getNonEmptyFilters(filters: FilterType) {\n    if (filters === undefined) return {};\n\n    return Object.fromEntries(\n      Object.entries(filters).filter(([_key, value]) => value !== undefined)\n    ) as Record<string, string>;\n  }\n}\n","import type { UseInfiniteQueryResult } from \"react-query\";\nimport type { Paged } from \"@bgord/node\";\n\nexport class Pagination {\n  static empty = { result: [], meta: { exhausted: true } };\n\n  static extract<T>(infinite: UseInfiniteQueryResult<Paged<T>>): T[] {\n    return (\n      infinite.data?.pages\n        ?.flat()\n        .map((data) => data.result)\n        .flat() ?? []\n    );\n  }\n}\n\nexport type { Paged } from \"@bgord/node\";\n","import type { Falsy, Schema } from \"@bgord/node\";\n\ntype PluralizeWordType = string;\ntype PluralizeValueType = Falsy<number>;\n\nexport type PluralizeOptionsType = {\n  value: PluralizeValueType;\n  singular: PluralizeWordType;\n  plural?: PluralizeWordType;\n  language: Schema.LanguageType;\n};\n\nexport function pluralize(options: PluralizeOptionsType): PluralizeWordType {\n  if (options.language !== \"en\") {\n    console.warn(\n      `[@bgord/frontend] missing pluralization fuction for language ${options.language}.`\n    );\n\n    return options.singular;\n  }\n\n  const plural = options.plural ?? `${options.singular}s`;\n\n  if (options.value === 1) return options.singular;\n  return plural;\n}\n","export type RhythmBaseType = number;\nexport type RhythmTimesType = number;\n\nexport class Rhythm {\n  static base(base: RhythmBaseType = 12) {\n    return {\n      times(times: RhythmTimesType) {\n        const result = base * times;\n\n        return {\n          px: `${result}px`,\n          raw: result,\n          height: { height: `${result}px` },\n          minHeight: { minHeight: `${result}px` },\n          maxHeight: { maxHeight: `${result}px` },\n          width: { width: `${result}px` },\n          minWidth: { minWidth: `${result}px` },\n          maxWidth: { maxWidth: `${result}px` },\n        };\n      },\n    };\n  }\n}\n","import React from \"react\";\nimport { useList } from \"./hooks/use-list\";\n\nexport type ToastsConfigType = {\n  timeout?: number;\n};\n\nexport type BaseToastType = {\n  id: string;\n  message: string;\n};\n\ntype ToastsContextDataType<ToastType extends BaseToastType = BaseToastType> = [\n  ToastType[],\n  {\n    add: (toast: Omit<ToastType, \"id\">) => void;\n    remove: (toast: ToastType) => void;\n    clear: VoidFunction;\n  }\n];\n\nconst ToastsContext = React.createContext<ToastsContextDataType | undefined>(\n  undefined\n);\n\nexport function ToastsContextProvider(\n  props: { children: JSX.Element | JSX.Element[] } & ToastsConfigType\n) {\n  function useToastsImplementation(): ToastsContextDataType {\n    const timeout = props?.timeout ?? 5000;\n\n    const [toasts, actions] = useList<BaseToastType>({\n      comparisonFn: (a, b) => a.id === b.id,\n    });\n\n    function add(payload: Omit<BaseToastType, \"id\">) {\n      const id = String(Date.now());\n      const toast = { ...payload, id };\n\n      actions.add(toast);\n      setTimeout(() => actions.remove(toast), timeout);\n    }\n\n    return [\n      [...toasts].reverse(),\n      { add, remove: actions.remove, clear: actions.clear },\n    ];\n  }\n\n  const [toasts, actions] = useToastsImplementation();\n\n  return (\n    <ToastsContext.Provider value={[toasts, actions]}>\n      {props.children}\n    </ToastsContext.Provider>\n  );\n}\n\nexport function useToastsContext<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const context = React.useContext<ToastsContextDataType<ToastType>>(\n    ToastsContext as unknown as React.Context<ToastsContextDataType<ToastType>>\n  );\n\n  if (context === undefined) {\n    throw new Error(`useToasts must be used within the ToastsContextProvider`);\n  }\n\n  return context;\n}\n\nexport function useToastTrigger<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const [, actions] = useToastsContext<ToastType>();\n\n  return actions.add;\n}\n","import React from \"react\";\nimport type {\n  TranslationsType,\n  TranslationsKeyType,\n  Schema,\n} from \"@bgord/node\";\nimport { pluralize, PluralizeOptionsType } from \"./pluralize\";\n\ntype TranslationsContextValueType = {\n  translations: TranslationsType;\n  language: Schema.LanguageType;\n};\n\ntype TranslationPlaceholderType = string;\ntype TranslationPlaceholderValueType = string | number;\ntype TranslationVariableType = Record<\n  TranslationPlaceholderType,\n  TranslationPlaceholderValueType\n>;\n\nconst TranslationsContext = React.createContext<TranslationsContextValueType>({\n  translations: {},\n  language: \"en\",\n});\n\ntype TranslationsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: TranslationsContextValueType;\n};\n\nexport function TranslationsContextProvider(\n  props: TranslationsContextPropsType\n) {\n  return (\n    <TranslationsContext.Provider value={props.value}>\n      {props.children}\n    </TranslationsContext.Provider>\n  );\n}\n\nexport function useTranslations() {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useTranslations must be used within the TranslationsContext`\n    );\n  }\n\n  function translate(\n    key: TranslationsKeyType,\n    variables?: TranslationVariableType\n  ) {\n    const translation = value.translations[key];\n\n    if (!translation) {\n      console.warn(`[@bgord/frontend] missing translation for key: ${key}`);\n      return key;\n    }\n\n    if (!variables) return translation;\n\n    return Object.entries(variables).reduce(\n      (result, [placeholder, value]) =>\n        result.replace(`{{${placeholder}}}`, String(value)),\n      translation\n    );\n  }\n\n  return translate;\n}\n\nexport function useLanguage(): TranslationsContextValueType[\"language\"] {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(`useLanguage must be used within the TranslationsContext`);\n  }\n\n  return value.language;\n}\n\nexport function usePluralize() {\n  const language = useLanguage();\n\n  return (options: Omit<PluralizeOptionsType, \"language\">) =>\n    pluralize({ ...options, language });\n}\n","import { ServerError } from \"./server-error\";\n\nexport const API: typeof fetch = (input, init) =>\n  fetch(input, {\n    mode: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n\n      \"time-zone-offset\": new Date().getTimezoneOffset().toString(),\n    },\n    redirect: \"follow\",\n    ...init,\n  })\n    .then(ServerError.extract)\n    .catch(ServerError.handle);\n","import * as React from \"react\";\n\nimport { DurationFormatter } from \"../durations\";\nimport { useField } from \"./use-field\";\n\nexport const AUDIO_DEFAULT_VOLUME = 1;\n\nexport type UseAudioSrcType = string;\n\nexport type UseAudioStateType = \"initial\" | \"ready\" | \"playing\" | \"paused\";\n\nexport function useAudio(src: UseAudioSrcType) {\n  const [state, setState] = React.useState<UseAudioStateType>(\"initial\");\n\n  const ref = React.useRef<HTMLAudioElement | null>(null);\n\n  const duration = useField<number>(\"duration\", 0);\n  const currentTime = useField<number>(\"currentTime\", 0);\n  const volume = useField<number>(\"volume\", AUDIO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (ref.current) {\n      ref.current.play();\n      setState(\"playing\");\n    }\n  }\n\n  function pause() {\n    if (ref.current) {\n      ref.current.pause();\n      setState(\"paused\");\n    }\n  }\n\n  function reset() {\n    if (ref.current) {\n      ref.current.currentTime = 0;\n      ref.current.pause();\n      currentTime.set(0);\n      setState(\"paused\");\n    }\n  }\n\n  function mute() {\n    if (ref.current) {\n      ref.current.volume = 0;\n      volume.set(0);\n    }\n  }\n\n  function unmute() {\n    if (ref.current) {\n      ref.current.volume = AUDIO_DEFAULT_VOLUME;\n      volume.set(AUDIO_DEFAULT_VOLUME);\n    }\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.currentTime = target.valueAsNumber;\n      currentTime.set(target.valueAsNumber);\n    }\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLAudioElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(\"ready\");\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLAudioElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(\"paused\");\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.volume = target.valueAsNumber;\n      volume.set(target.valueAsNumber);\n    }\n  }\n\n  return {\n    props: {\n      audio: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: { play, pause, mute, unmute, reset, seek, changeVolume },\n    meta: {\n      state,\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import React from \"react\";\n\nimport * as hooks from \"../hooks\";\n\nexport type DialogPropsType = hooks.UseToggleReturnType &\n  JSX.IntrinsicElements[\"dialog\"];\n\nexport function Dialog(props: DialogPropsType) {\n  const { disable, enable, on, off, toggle, ...rest } = props;\n  const ref = React.useRef<HTMLDialogElement>(null);\n\n  React.useEffect(() => {\n    if (props.on) {\n      // @ts-ignore\n      ref.current?.showModal();\n    } else {\n      // @ts-ignore\n      ref.current?.close();\n    }\n  }, [props.on]);\n\n  hooks.useKeyboardShortcurts({ Escape: disable });\n  hooks.useAutofocus({ ref, condition: props.on });\n  hooks.useScrollLock(props.on);\n\n  return (\n    <dialog\n      ref={ref}\n      tabIndex={0}\n      data-display={props.on ? \"flex\" : \"none\"}\n      data-direction=\"column\"\n      data-mx=\"auto\"\n      data-p=\"24\"\n      data-position=\"absolute\"\n      data-z=\"2\"\n      data-bg=\"white\"\n      data-br=\"4\"\n      data-bc=\"gray-300\"\n      data-bw=\"1\"\n      data-backdrop=\"black\"\n      {...rest}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { useIsOnline } from \"../hooks\";\n\nexport function OfflineIndicator(props: { children: React.ReactChild }) {\n  const isOnline = useIsOnline();\n\n  if (isOnline) return null;\n\n  return <>{props.children}</>;\n}\n","import React from \"react\";\nimport type { PolymorphicPropsWithoutRef } from \"react-polymorphic-types\";\n\nconst OutboundLinkDefaultElement = \"a\";\n\nexport function OutboundLink<\n  T extends React.ElementType = typeof OutboundLinkDefaultElement\n>(props: PolymorphicPropsWithoutRef<{}, T>) {\n  const { as, ...rest } = props;\n\n  const Element = as || OutboundLinkDefaultElement;\n\n  return <Element target=\"_blank\" rel=\"noreferer noopener\" {...rest} />;\n}\n","type ExecFunctionListType = Function[];\n\nexport function exec(list: ExecFunctionListType) {\n  return function () {\n    list.forEach((item) => item());\n  };\n}\n","import { getSafeWindow } from \"./safe-window\";\n\nexport function isClient() {\n  return !getSafeWindow();\n}\n","import { useWindowDimensions } from \"./use-window-dimensions\";\n\nexport type BreakpointType = number;\n\nexport function useBreakpoint(breakpoint: BreakpointType): boolean {\n  const dimensions = useWindowDimensions();\n  const width = dimensions?.width ?? 0;\n\n  return width <= breakpoint;\n}\n","import React from \"react\";\n\nexport function useClickOutside(\n  ref: React.RefObject<HTMLElement>,\n  onClickOutside: VoidFunction,\n  exclude?: React.RefObject<HTMLElement>[]\n) {\n  React.useEffect(() => {\n    if (!ref.current) return;\n\n    function handleClickOutside(event: MouseEvent) {\n      // Check if click event happened outside the `ref`\n      // so the `onClickOutside` callback `may` be fired.\n      if (!ref.current?.contains(event.target as Node)) {\n        // The second check is to check if some `exclude`d node\n        // outside the `ref` node has been clicked.\n        const isExcludedNodeClicked = exclude?.some((node) =>\n          node.current?.contains(event.target as Node)\n        );\n\n        // `onClickOutside` callback is fired if the click event\n        // happened outside both `ref` node and `exclude`d nodes.\n        if (!isExcludedNodeClicked) {\n          onClickOutside();\n        }\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [onClickOutside, ref, exclude]);\n}\n","import { useState } from \"react\";\n\nexport type UseClientSearchQueryType = string;\n\nexport type UseClientSearchReturnType = {\n  query: UseClientSearchQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: (value: string) => boolean;\n};\n\nexport function useClientSearch(): UseClientSearchReturnType {\n  const emptyQuery: UseClientSearchQueryType = \"\";\n\n  const [query, setValue] = useState<UseClientSearchQueryType>(emptyQuery);\n\n  function clear() {\n    setValue(emptyQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setValue(event.currentTarget.value);\n  }\n\n  function filterFn(value: string) {\n    if (query === emptyQuery) return true;\n\n    return value?.toLowerCase().includes(query.toLowerCase());\n  }\n\n  return { query, clear, onChange, filterFn };\n}\n","import React from \"react\";\n\ntype UseDebounceConfigType<T> = { value: T; delayMs: number };\n\nexport function useDebounce<T>(config: UseDebounceConfigType<T>): T {\n  const [debouncedValue, setDebouncedValue] = React.useState<T>(config.value);\n\n  React.useEffect(() => {\n    const timer = setTimeout(\n      () => setDebouncedValue(config.value),\n      config.delayMs\n    );\n\n    return () => clearTimeout(timer);\n  }, [config.value, config.delayMs]);\n\n  return debouncedValue;\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useDisablePullToRefresh(condition = true) {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overscroll behaviors\n    const originalHtmlOverscrollBehavior =\n      window.getComputedStyle(html).overscrollBehavior;\n    const originalBodyOverflowBehavior =\n      window.getComputedStyle(body).overscrollBehavior;\n\n    // Disable pull to refresh\n    body.style.overscrollBehavior = \"none\";\n    html.style.overscrollBehavior = \"none\";\n\n    // Enable pull to refresh when component unmounts\n    return () => {\n      body.style.overscrollBehavior = originalBodyOverflowBehavior;\n      html.style.overscrollBehavior = originalHtmlOverscrollBehavior;\n    };\n  }, [condition]);\n}\n","import React from \"react\";\n\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n","import React from \"react\";\n\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type UseHoverReturnType = {\n  attach: { ref: React.RefObject<any> };\n  isHovering: UseToggleReturnType[\"on\"];\n};\n\nexport function useHover(): UseHoverReturnType {\n  const ref = React.useRef<any>(null);\n  const isHovering = useToggle(false);\n\n  const handleMouseEnter = isHovering.enable;\n  const handleMouseLeave = isHovering.disable;\n\n  React.useEffect(() => {\n    const node = ref.current;\n\n    if (node) {\n      node.addEventListener(\"mouseenter\", handleMouseEnter);\n      node.addEventListener(\"mouseleave\", handleMouseLeave);\n    }\n\n    return () => {\n      if (node) {\n        node.removeEventListener(\"mouseenter\", handleMouseEnter);\n        node.removeEventListener(\"mouseleave\", handleMouseLeave);\n      }\n    };\n  }, []);\n\n  return { attach: { ref }, isHovering: isHovering.on };\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { UseFileReturnType, UseFileState } from \"./use-file\";\nimport {\n  getImageResolution,\n  ImageResolutionType,\n  emptyImageResolution,\n} from \"../get-image-resolution\";\n\nexport function useImageFileResolution(\n  file: UseFileReturnType\n): ImageResolutionType {\n  const resolution = useField<ImageResolutionType>(\n    \"resolution\",\n    emptyImageResolution\n  );\n\n  React.useEffect(() => {\n    async function execute() {\n      if (file.state === UseFileState.selected) {\n        try {\n          const result = await getImageResolution(file.actions.previewFile());\n\n          return resolution.set(result);\n        } catch (error) {\n          return resolution.clear();\n        }\n      }\n\n      if (\n        [UseFileState.error, UseFileState.idle].includes(file.state) &&\n        resolution.value.width !== null &&\n        resolution.value.height !== null\n      ) {\n        resolution.clear();\n      }\n    }\n\n    execute();\n  }, [file.state, file.data?.name]);\n\n  return resolution.value;\n}\n","import React from \"react\";\n\nexport type UseLeavingPromptConditionType = boolean;\n\nexport function useLeavingPrompt(\n  condition: UseLeavingPromptConditionType = false\n) {\n  React.useEffect(() => {\n    if (!condition) return;\n\n    function handler(e: BeforeUnloadEvent) {\n      e.preventDefault();\n    }\n\n    window.addEventListener(\"beforeunload\", handler);\n\n    return () => window.removeEventListener(\"beforeunload\", handler);\n  }, [condition]);\n}\n","import * as React from \"react\";\n\nimport {\n  useToggle,\n  UseToggleReturnType,\n  UseToggleValueType,\n} from \"./use-toggle\";\nimport {\n  SafeLocalStorage,\n  SafeLocalStorageKeyType,\n} from \"../safe-local-storage\";\n\nexport function usePersistentToggle(\n  key: SafeLocalStorageKeyType,\n  defaultValue: UseToggleValueType = false\n): UseToggleReturnType & { clear: VoidFunction } {\n  const storedValue = SafeLocalStorage.get<UseToggleValueType>(\n    key,\n    defaultValue\n  );\n\n  const toggle = useToggle(storedValue);\n\n  React.useEffect(() => SafeLocalStorage.set(key, toggle.on), [key, toggle.on]);\n\n  return { ...toggle, clear: () => SafeLocalStorage.clear(key) };\n}\n","import { useRef } from \"react\";\n\nimport {\n  RateLimiterOptionsType,\n  RateLimiterResultErrorType,\n  RateLimiter,\n} from \"../rate-limiter\";\n\ntype UseRateLimiterOptionsType<T> = RateLimiterOptionsType & {\n  action: (...args: T[]) => void;\n  fallback?: (remainingMs: RateLimiterResultErrorType[\"remainingMs\"]) => void;\n};\n\nexport function useRateLimiter<T>(options: UseRateLimiterOptionsType<T>) {\n  const rateLimiter = useRef<RateLimiter>(new RateLimiter(options));\n\n  function executor(...args: T[]) {\n    const currentTimestamp = Date.now();\n    const result = rateLimiter.current.verify(currentTimestamp);\n\n    if (result.allowed) {\n      return options.action(...args);\n    }\n\n    return options.fallback?.(result.remainingMs);\n  }\n\n  return executor;\n}\n","import React from \"react\";\nimport { getSafeWindow } from \"../safe-window\";\nimport { useToggle } from \"./use-toggle\";\n\nexport function useScroll() {\n  const safeWindow = getSafeWindow();\n\n  // Scroll position always set at the top of the page\n  const defaultScrollPosition = 0;\n  const [scrollPosition, setScrollPosition] = React.useState<number>(\n    defaultScrollPosition\n  );\n\n  // Assuming scrollbar is hidden by default\n  const scrollbarVisibility = useToggle(false);\n\n  function goToTop() {\n    if (!safeWindow) return;\n    safeWindow.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  }\n\n  React.useLayoutEffect(() => {\n    function measure() {\n      if (!safeWindow) return;\n\n      setScrollPosition(safeWindow?.scrollY);\n\n      // Checking if the viewport (clientHeight) can fully contain\n      // full content height (scrollHeight)\n      if (\n        safeWindow.document.body.clientHeight <\n        safeWindow.document.body.scrollHeight\n      ) {\n        scrollbarVisibility.enable();\n      } else {\n        scrollbarVisibility.disable();\n      }\n    }\n\n    safeWindow?.addEventListener(\"scroll\", measure);\n\n    return () => safeWindow?.removeEventListener(\"scroll\", measure);\n  }, []);\n\n  return {\n    actions: { goToTop },\n    position: {\n      value: scrollPosition,\n      isInitial: scrollPosition === 0,\n      hasChanged: scrollPosition > 0,\n    },\n    visible: scrollbarVisibility.on,\n    hidden: scrollbarVisibility.off,\n  };\n}\n","export type SoundSourceType = string;\n\nexport type UseSoundReturnType = { play: VoidFunction };\n\nexport function useSound(src: SoundSourceType): UseSoundReturnType {\n  const audio = new Audio(src);\n\n  return { play: audio.play.bind(audio) };\n}\n","import { useFilter, UseFilterConfigType } from \"./use-filter\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type UseUrlFilterConfigType<T> = UseFilterConfigType<T>;\n\nexport function useUrlFilter<T>(config: UseUrlFilterConfigType<T>) {\n  const safeWindow = getSafeWindow();\n\n  const currentQuery =\n    new URLSearchParams(safeWindow?.location.search).get(config.label) ??\n    undefined;\n\n  return useFilter({\n    onUpdate: (current, previous) => {\n      if (!safeWindow) return;\n\n      const url = new URL(safeWindow.location.toString());\n      const params = new URLSearchParams(url.search);\n\n      if (current === undefined) {\n        params.delete(config.label);\n      } else {\n        params.set(config.label, current);\n      }\n\n      if (current === previous) return;\n\n      if (current !== previous) {\n        url.search = params.toString();\n        history.pushState({}, \"\", url.toString());\n      }\n    },\n    ...config,\n    defaultQuery: config.defaultQuery,\n    currentQuery: currentQuery,\n  });\n}\n"],"names":["value","defaultValue","useRef","useEffect","previousValue","current","AnimaState","ServerError","config","message","_known","this","isServerError","Object","hasOwnProperty","extract","response","ok","json","error","handle","payload","format","duration","Math","floor","String","minutes","padStart","seconds","name","useState","evaluatedDefaultValue","setValue","set","clear","label","props","htmlFor","input","id","changed","unchanged","React","condition","ref","_config$ref$current","focus","width","undefined","height","windowSize","setWindowSize","getSafeWindow","safeWindow","addEventListener","handleResize","removeEventListener","innerWidth","innerHeight","toHours","toMinutes","toSeconds","toMs","Time","UseExpandableListState","UseFileState","Days","Hours","Minutes","Seconds","now","defaultQuery","currentQuery","filterFn","query","keys","onUpdate","noop","setQuery","usePreviousValue","previousQuery","onChange","event","currentTarget","Boolean","newQuery","isNewQueryInEnum","options","on","setIsOn","off","enable","disable","toggle","v","getImageResolution","KeyNameEnum","path","emptyImageResolution","document","createElement","resolve","reject","img","onload","onerror","src","promise","useToggle","onLine","navigator","onlineStatus","window","handleOnline","handleOffline","threshold","root","rootMargin","IntersectionObserverEntry","prototype","tinykeys","defaultItems","comparisonFn","a","b","items","setItems","Array","isArray","item","filter","x","some","add","remove","isAdded","update","SafeLocalStorage","get","key","fallbackValue","Storage","lastInvocationTimestamp","verify","currentTimestamp","allowed","limitMs","nextAllowedTimestamp","remainingMs","useLayoutEffect","querySelector","body","getComputedStyle","overflow","html","style","originalBodyOverflow","originalHtmlOverflow","warn","datetime","date","toLocaleString","monthDay","timestamp","DateFormatter","_padDatePart","getDate","getMonth","days","form","getFullYear","clockUTC","getUTCHours","getUTCMinutes","getUTCSeconds","clockLocal","getHours","getMinutes","getSeconds","countdown","convertUtcToLocal","utcHour","getTimezoneOffset","timeZoneOffsetInMins","localHour","url","filters","getNonEmptyFilters","toString","fromEntries","entries","infinite","data","_infinite$data","pages","_infinite$data$pages","flat","map","result","language","console","singular","plural","Pagination","empty","meta","exhausted","Rhythm","base","times","px","raw","minHeight","maxHeight","minWidth","maxWidth","createContext","useContext","ToastsContext","context","translations","TranslationsContext","init","mode","headers","redirect","then","visible","isInitial","appeared","appearing","hidden","state","setState","setTimeout","previousState","hidding","cloneElement","children","effect","rest","setIsInitial","child","_ref$current","showModal","_ref$current2","close","hooks","Escape","tabIndex","useIsOnline","as","target","rel","actions","timeout","useList","reverse","Date","toast","Provider","onFailure","defaultOnCopyToClipboardFailure","onSuccess","clipboard","writeText","text","list","forEach","direction","officialList","setOfficialList","added","push","length","every","deleted","find","y","updated","count","useField","volume","round","currentTime","valueAsNumber","audio","onTimeUpdate","onLoadedMetadata","onEnded","controls","player","min","step","max","onInput","seek","percentage","changeVolume","play","pause","mute","unmute","reset","formatted","DurationFormatter","muted","breakpoint","useWindowDimensions","dimensions","onClickOutside","exclude","handleClickOutside","contains","node","_node$current","toLowerCase","includes","getCurrentTimestamp","setTimestamp","setInterval","timer","debouncedValue","setDebouncedValue","delayMs","overscrollBehavior","originalBodyOverflowBehavior","originalHtmlOverscrollBehavior","title","contracted","expanded","getState","displayShowMore","displayShowLess","areThereExcessiveElements","showMore","showLess","numberOfExcessiveElements","_element","index","maxSize","Infinity","idle","file","setFile","files","size","selected","selectFile","clearFile","previewFile","createObjectURL","isHovering","handleMouseEnter","handleMouseLeave","attach","resolution","execute","_file$data","defaultUseIsVisibleConfig","isVisible","setVisible","isIntersectionObserverSupported","element","entry","_entry$","isIntersecting","observer","observe","unobserve","executor","handler","e","preventDefault","useLanguage","rateLimiter","action","fallback","scrollPosition","setScrollPosition","scrollY","clientHeight","scrollHeight","scrollbarVisibility","measure","goToTop","scrollTo","top","left","behavior","position","hasChanged","bind","useToastsContext","variables","translation","reduce","replace","location","search","previous","params","history","pushState"],"mappings":"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"}