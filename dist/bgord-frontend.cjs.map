{"version":3,"file":"bgord-frontend.cjs","sources":["../hooks/use-previous-value.ts","../anima.tsx","../server-error.ts","../hooks/use-audio.ts","../durations.ts","../hooks/use-field.ts","../hooks/use-autofocus.ts","../safe-window.ts","../hooks/use-window-dimensions.ts","../hooks/use-click-outside.ts","../time.ts","../hooks/use-expandable-list.ts","../hooks/use-file.ts","../hooks/use-current-timestamp.ts","../hooks/use-filter.ts","../hooks/use-toggle.ts","../get-image-resolution.ts","../hooks/use-keyboard-handler.ts","../hooks/use-is-online.ts","../hooks/use-is-visible.ts","../hooks/use-item.ts","../hooks/use-keyboard-shortcuts.ts","../pluralize.ts","../translations.tsx","../hooks/use-list.ts","../safe-local-storage.ts","../hooks/use-video.ts","../rate-limiter.ts","../hooks/use-scroll-lock.ts","../copy-to-clipboard.ts","../dates.ts","../filter-url.ts","../pagination.ts","../rhythm.ts","../toasts.tsx","../api.ts","../components/dialog.tsx","../components/offline-indicator.tsx","../components/outbound-link.tsx","../exec.ts","../is-client.ts","../hooks/use-breakpoint.ts","../hooks/use-client-search.ts","../hooks/use-debounce.ts","../hooks/use-disable-pull-to-refresh.ts","../hooks/use-document-title.ts","../hooks/use-hover.ts","../hooks/use-image-file-resolution.ts","../hooks/use-language-selector.ts","../hooks/use-leaving-prompt.ts","../hooks/use-pagination.ts","../hooks/use-persistent-toggle.ts","../hooks/use-rate-limiter.ts","../hooks/use-scroll.ts","../hooks/use-sound.ts","../hooks/use-url-filter.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport function usePreviousValue<T>(\n  value: T,\n  defaultValue?: T | undefined\n): T | undefined {\n  const previousValue = useRef<T | undefined>(defaultValue);\n\n  useEffect(() => {\n    previousValue.current = value;\n  });\n\n  return previousValue.current;\n}\n","import React from \"react\";\n\nimport { usePreviousValue } from \"./hooks/use-previous-value\";\n\nexport enum AnimaState {\n  appearing = \"appearing\",\n  appeared = \"appeared\",\n  hidding = \"hidding\",\n  hidden = \"hidden\",\n}\n\nexport type AnimaEffectType = string;\n\nexport type AnimaConfigType = {\n  children: JSX.Element;\n\n  visible: boolean;\n  effect: AnimaEffectType;\n\n  duration?: number;\n  isInitial?: boolean;\n};\n\nexport function Anima(props: AnimaConfigType) {\n  const duration = props.duration ?? 300;\n\n  function getInitialState() {\n    if (!props.visible) return AnimaState.hidden;\n    if (props.isInitial) return AnimaState.appeared;\n    return AnimaState.appearing;\n  }\n\n  const [state, setState] = React.useState<AnimaState>(getInitialState);\n  const previousState = usePreviousValue(state);\n\n  React.useEffect(() => {\n    if (props.isInitial) return;\n\n    if (props.visible) {\n      setState(AnimaState.appearing);\n      setTimeout(() => setState(AnimaState.appeared), 100);\n    } else {\n      if (!previousState) return;\n      setState(AnimaState.hidding);\n      setTimeout(() => setState(AnimaState.hidden), duration);\n    }\n  }, [props.visible]);\n\n  if (state === AnimaState.hidden) return null;\n\n  return React.cloneElement(props.children, {\n    \"data-anima\": state,\n    \"data-anima-effect\": props.effect,\n    style: { \"--duration\": `${duration}ms`, ...props.children.props.style },\n  });\n}\n\nexport function getAnimaProps(props: Record<string, any>) {\n  return {\n    \"data-anima\": props[\"data-anima\"] as AnimaState | undefined,\n    \"data-anima-effect\": props[\"data-anima-effect\"] as\n      | AnimaEffectType\n      | undefined,\n    style: props.style as React.CSSProperties,\n  };\n}\n\nexport type AnimaListPropsType = {\n  children: JSX.Element[];\n} & JSX.IntrinsicElements[\"ul\"];\n\nexport function AnimaList(props: AnimaListPropsType) {\n  const { children, ...rest } = props;\n\n  const [isInitial, setIsInitial] = React.useState<boolean>(true);\n\n  React.useEffect(() => setIsInitial(false), []);\n\n  return (\n    <ul {...rest}>\n      {props.children.map((child) => React.cloneElement(child, { isInitial }))}\n    </ul>\n  );\n}\n\nexport type UseAnimaListDirectionType = \"head\" | \"tail\";\n\nexport type UseAnimaListConfigType = {\n  direction?: UseAnimaListDirectionType;\n  duration?: number;\n};\n\nexport type UseAnimaListItemType<T> = { item: T; props: { visible: boolean } };\n\ntype UseAnimaListReturnType<T> = {\n  items: { item: T; props: { visible: boolean } }[];\n  count: number;\n};\n\nexport function useAnimaList<T extends { id: string }>(\n  list: T[],\n  config?: UseAnimaListConfigType\n): UseAnimaListReturnType<T> {\n  const duration = config?.duration ?? 300;\n  const direction = config?.direction ?? \"head\";\n\n  const [officialList, setOfficialList] = React.useState<\n    UseAnimaListItemType<T>[]\n  >(list.map((item) => ({ item, props: { visible: true } })));\n\n  let added: T[] = [];\n\n  for (const item of list) {\n    const wasAdded = !officialList\n      .map((x) => x.item)\n      .some((x) => item.id === x.id);\n\n    if (wasAdded) added.push(item);\n  }\n\n  React.useEffect(() => {\n    if (added.length === 0) return;\n\n    if (direction === \"head\") {\n      setOfficialList((officialList) => [\n        ...added.map((item) => ({ item, props: { visible: true } })),\n        ...officialList,\n      ]);\n    } else {\n      setOfficialList((officialList) => [\n        ...officialList,\n        ...added.map((item) => ({ item, props: { visible: true } })),\n      ]);\n    }\n\n    added = [];\n  }, [added.length, direction]);\n\n  let deleted: T[] = [];\n\n  for (const { item } of officialList) {\n    const wasDeleted = list.every((x) => x.id !== item.id);\n\n    if (wasDeleted) deleted.push(item);\n  }\n\n  React.useEffect(() => {\n    if (deleted.length === 0) return;\n\n    setOfficialList((officialList) =>\n      officialList.map((x) => {\n        const wasDeleted = deleted.some((item) => item.id === x.item.id);\n\n        return wasDeleted ? { ...x, props: { visible: false } } : x;\n      })\n    );\n\n    deleted = [];\n  }, [deleted.length]);\n\n  return {\n    items: officialList.map((item) => {\n      const updated = list.find((y) => y.id === item.item.id);\n      return updated ? { ...item, item: updated } : item;\n    }),\n    count: officialList.filter((x) => x.props.visible).length,\n  };\n}\n","export type ServerErrorConfigType = {\n  message: string;\n};\n\nexport class ServerError {\n  message: ServerErrorConfigType[\"message\"];\n\n  _known = true;\n\n  constructor(config: ServerErrorConfigType) {\n    this.message = config.message;\n  }\n\n  static isServerError(value: unknown): value is ServerError {\n    if (\n      value &&\n      typeof value === \"object\" &&\n      value === Object(value) &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"_known\") &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"message\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  static async extract(response: Response) {\n    if (response.ok) return response;\n\n    const error = await response.json();\n\n    const message = ServerError.isServerError(error)\n      ? error.message\n      : \"app.error.general\";\n\n    throw new ServerError({ message });\n  }\n\n  static async handle(payload: unknown): Promise<Response> {\n    throw new ServerError({\n      message: ServerError.isServerError(payload)\n        ? payload.message\n        : \"app.error.general\",\n    });\n  }\n}\n","import * as React from \"react\";\n\nimport { DurationFormatter } from \"../durations\";\nimport { useField } from \"./use-field\";\n\nexport type UseAudioSrcType = string;\n\ntype AudioDurationType = number;\ntype AudioCurrentTimeType = number;\ntype AudioVolumeType = number;\n\nexport const AUDIO_DEFAULT_VOLUME: AudioVolumeType = 1;\n\nexport enum UseAudioState {\n  \"initial\" = \"initial\",\n  \"ready\" = \"ready\",\n  \"playing\" = \"playing\",\n  \"paused\" = \"paused\",\n}\n\nexport type UseAudioReturnType = {\n  props: {\n    audio: {\n      src: UseAudioSrcType;\n      onTimeUpdate: (event: Event) => void;\n      onLoadedMetadata: (event: Event) => void;\n      onEnded: (event: Event) => void;\n      controls: false;\n    };\n    player: {\n      min: 0;\n      step: 1;\n      max: AudioDurationType;\n      value: AudioDurationType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n    volume: {\n      min: 0;\n      max: 1;\n      value: AudioVolumeType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n  };\n  actions: {\n    play: VoidFunction;\n    pause: VoidFunction;\n    mute: VoidFunction;\n    unmute: VoidFunction;\n    reset: VoidFunction;\n    seek: (event: Event) => void;\n    changeVolume: (event: Event) => void;\n  };\n\n  meta: {\n    state: UseAudioState;\n    isInitial: boolean;\n    isReady: boolean;\n    isPlaying: boolean;\n    isPaused: boolean;\n    matches: (states: UseAudioState[]) => boolean;\n    percentage: {\n      raw: number;\n      formatted: string;\n    };\n    currentTime: {\n      raw: AudioCurrentTimeType;\n      formatted: string;\n    };\n    duration: {\n      raw: AudioDurationType;\n      formatted: string;\n    };\n    volume: {\n      value: AudioVolumeType;\n      raw: number;\n      formatted: string;\n    };\n    muted: boolean;\n  };\n};\n\nexport function useAudio(src: UseAudioSrcType): UseAudioReturnType {\n  const [state, setState] = React.useState<UseAudioState>(\n    UseAudioState.initial\n  );\n\n  const ref = React.useRef<HTMLAudioElement | null>(null);\n\n  const duration = useField<AudioDurationType>(\"duration\", 0);\n  const currentTime = useField<AudioCurrentTimeType>(\"currentTime\", 0);\n  const volume = useField<AudioVolumeType>(\"volume\", AUDIO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (ref.current) {\n      ref.current.play();\n      setState(UseAudioState.playing);\n    }\n  }\n\n  function pause() {\n    if (ref.current) {\n      ref.current.pause();\n      setState(UseAudioState.paused);\n    }\n  }\n\n  function reset() {\n    if (ref.current) {\n      ref.current.currentTime = 0;\n      ref.current.pause();\n      currentTime.set(0);\n      setState(UseAudioState.paused);\n    }\n  }\n\n  function mute() {\n    if (ref.current) {\n      ref.current.volume = 0;\n      volume.set(0);\n    }\n  }\n\n  function unmute() {\n    if (ref.current) {\n      ref.current.volume = AUDIO_DEFAULT_VOLUME;\n      volume.set(AUDIO_DEFAULT_VOLUME);\n    }\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.currentTime = target.valueAsNumber;\n      currentTime.set(target.valueAsNumber);\n    }\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLAudioElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(UseAudioState.ready);\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLAudioElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(UseAudioState.paused);\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.volume = target.valueAsNumber;\n      volume.set(target.valueAsNumber);\n    }\n  }\n\n  return {\n    props: {\n      audio: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: { play, pause, mute, unmute, reset, seek, changeVolume },\n    meta: {\n      state,\n      isInitial: state === UseAudioState.initial,\n      isReady: state === UseAudioState.ready,\n      isPlaying: state === UseAudioState.playing,\n      isPaused: state === UseAudioState.paused,\n      matches: (states: UseAudioState[]) =>\n        states.some((given) => given === state),\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","export class DurationFormatter {\n  static format(duration: number) {\n    const minutes = Math.floor(duration / 60);\n    const seconds = duration % 60;\n\n    const formattedMinutes = String(minutes).padStart(2, \"0\");\n    const formattedSeconds = String(seconds).padStart(2, \"0\");\n\n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n","import { useState, Dispatch, SetStateAction } from \"react\";\n\nexport type UseFieldDefaultValueType<T> = T | (() => T);\nexport type UseFieldNameType = string;\n\nexport type UseFieldReturnType<T> = {\n  value: T;\n  set: Dispatch<SetStateAction<T>>;\n  clear: VoidFunction;\n  label: { props: { htmlFor: UseFieldNameType } };\n  input: { props: { id: UseFieldNameType; name: UseFieldNameType } };\n  changed: boolean;\n  unchanged: boolean;\n};\n\nexport function useField<T>(\n  name: UseFieldNameType,\n  defaultValue: UseFieldDefaultValueType<T>\n): UseFieldReturnType<T> {\n  const evaluatedDefaultValue =\n    // @ts-ignore\n    typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n\n  const [value, setValue] = useState(evaluatedDefaultValue);\n\n  function clear() {\n    setValue(evaluatedDefaultValue);\n  }\n\n  return {\n    value,\n    set: setValue,\n    clear,\n    label: { props: { htmlFor: name } },\n    input: { props: { id: name, name: name } },\n    changed: value !== evaluatedDefaultValue,\n    unchanged: value == evaluatedDefaultValue,\n  };\n}\n","import React from \"react\";\n\nexport type UseAutofocusConfigType = {\n  ref: React.RefObject<HTMLElement>;\n  condition: boolean;\n};\n\nexport function useAutofocus(config: UseAutofocusConfigType): void {\n  React.useEffect(() => {\n    if (!config.condition) return;\n\n    config.ref.current?.focus();\n  }, [config.condition]);\n}\n","export function getSafeWindow() {\n  if (typeof window === \"undefined\") return undefined;\n  return window;\n}\n","import { useState, useEffect } from \"react\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type WindowDimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowDimensions(): WindowDimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowDimensions>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    const safeWindow = getSafeWindow();\n\n    if (!safeWindow) return;\n\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: safeWindow?.innerWidth,\n        height: safeWindow?.innerHeight,\n      });\n    }\n\n    // Add event listener\n    safeWindow.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => safeWindow.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import React from \"react\";\n\nexport function useClickOutside(\n  ref: React.RefObject<HTMLElement>,\n  onClickOutside: VoidFunction,\n  exclude?: React.RefObject<HTMLElement>[]\n): void {\n  React.useEffect(() => {\n    if (!ref.current) return;\n\n    function handleClickOutside(event: MouseEvent) {\n      // Check if click event happened outside the `ref`\n      // so the `onClickOutside` callback `may` be fired.\n      if (!ref.current?.contains(event.target as Node)) {\n        // The second check is to check if some `exclude`d node\n        // outside the `ref` node has been clicked.\n        const isExcludedNodeClicked = exclude?.some((node) =>\n          node.current?.contains(event.target as Node)\n        );\n\n        // `onClickOutside` callback is fired if the click event\n        // happened outside both `ref` node and `exclude`d nodes.\n        if (!isExcludedNodeClicked) {\n          onClickOutside();\n        }\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [onClickOutside, ref, exclude]);\n}\n","export function Days(value: number) {\n  return {\n    value,\n    hours: value * 24,\n    minutes: value * 24 * 60,\n    seconds: value * 24 * 60 * 60,\n    ms: value * 24 * 60 * 60 * 1000,\n  };\n}\n\nexport function Hours(value: number) {\n  return {\n    value,\n    minutes: value * 60,\n    seconds: value * 60 * 60,\n    ms: value * 60 * 60 * 1000,\n  };\n}\n\nexport function Minutes(value: number) {\n  return { value, seconds: value * 60, ms: value * 60 * 1000 };\n}\n\nexport function Seconds(value: number) {\n  return { value, ms: value * 1000 };\n}\n\nexport const Time = { Days, Hours, Minutes, Seconds };\n","import { useState, useEffect } from \"react\";\n\nexport enum UseExpandableListState {\n  contracted = \"contracted\",\n  expanded = \"expanded\",\n}\n\nexport type UseExpandableListConfigType = { max: number; length: number };\n\nexport type UseExpandableListReturnType = {\n  state: UseExpandableListState;\n  displayShowMore: boolean;\n  displayShowLess: boolean;\n  actions: {\n    showMore: VoidFunction;\n    showLess: VoidFunction;\n  };\n  numberOfExcessiveElements: number;\n  filterFn: (element: unknown, index: number) => void;\n};\n\nexport function useExpandableList(\n  config: UseExpandableListConfigType\n): UseExpandableListReturnType {\n  const numberOfExcessiveElements = config.length - config.max;\n  const areThereExcessiveElements = config.length > config.max;\n\n  function getState() {\n    return areThereExcessiveElements\n      ? UseExpandableListState.contracted\n      : UseExpandableListState.expanded;\n  }\n\n  const [state, setState] = useState<UseExpandableListState>(getState);\n\n  useEffect(() => setState(getState()), [config.length, config.max]);\n\n  function showMore() {\n    if (state === UseExpandableListState.contracted) {\n      setState(UseExpandableListState.expanded);\n    }\n  }\n\n  function showLess() {\n    if (state === UseExpandableListState.expanded) {\n      setState(UseExpandableListState.contracted);\n    }\n  }\n\n  function filterFn(_element: unknown, index: number) {\n    if (state === UseExpandableListState.expanded) return true;\n    return index < config.max;\n  }\n\n  return {\n    state,\n    displayShowMore: state === UseExpandableListState.contracted,\n    displayShowLess:\n      state === UseExpandableListState.expanded && areThereExcessiveElements,\n    actions: {\n      showMore,\n      showLess,\n    },\n    numberOfExcessiveElements,\n    filterFn,\n  };\n}\n","import { useState, useMemo } from \"react\";\n\ntype UseFileNameType = string;\n\nexport type UseFileConfigType = {\n  maxSize?: number;\n};\n\nexport enum UseFileState {\n  \"idle\" = \"idle\",\n  \"selected\" = \"selected\",\n  \"error\" = \"error\",\n}\n\ntype UseFileIdle = {\n  state: UseFileState.idle;\n  matches: (states: UseFileState[]) => boolean;\n  isIdle: true;\n  isSelected: false;\n  isError: false;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  label: { props: { htmlFor: UseFileNameType } };\n  input: { props: { id: UseFileNameType; name: UseFileNameType } };\n};\n\ntype UseFileSelected = {\n  state: UseFileState.selected;\n  matches: (states: UseFileState[]) => boolean;\n  data: File;\n  isIdle: false;\n  isSelected: true;\n  isError: false;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  preview: ReturnType<typeof URL.createObjectURL> | undefined;\n  label: { props: { htmlFor: UseFileNameType } };\n  input: { props: { id: UseFileNameType; name: UseFileNameType } };\n};\n\ntype UseFileError = {\n  state: UseFileState.error;\n  matches: (states: UseFileState[]) => boolean;\n  data: null;\n  isIdle: false;\n  isSelected: false;\n  isError: true;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  label: { props: { htmlFor: UseFileNameType } };\n  input: { props: { id: UseFileNameType; name: UseFileNameType } };\n};\n\nexport type UseFileReturnType = UseFileIdle | UseFileSelected | UseFileError;\n\nexport function useFile(\n  name: UseFileNameType,\n  config?: UseFileConfigType\n): UseFileReturnType {\n  const maxSize = config?.maxSize ?? Infinity;\n\n  const [state, setState] = useState<UseFileState>(UseFileState.idle);\n\n  const [file, setFile] = useState<File | null>(null);\n\n  function selectFile(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.currentTarget.files;\n\n    if (!files || !files[0]) return;\n\n    const file = files[0];\n\n    if (file.size > maxSize) {\n      setState(UseFileState.error);\n      return undefined;\n    }\n\n    setFile(file);\n    setState(UseFileState.selected);\n\n    return file;\n  }\n\n  function clearFile() {\n    setFile(null);\n    setState(UseFileState.idle);\n  }\n\n  const preview = useMemo(\n    () => (file ? URL.createObjectURL(file) : undefined),\n    [file]\n  );\n\n  function matches(states: UseFileState[]) {\n    return states.some((given) => given === state);\n  }\n\n  if (state === UseFileState.idle) {\n    return {\n      state,\n      matches,\n      isIdle: true,\n      isSelected: false,\n      isError: false,\n      data: null,\n      actions: { selectFile, clearFile },\n      label: { props: { htmlFor: name } },\n      input: { props: { id: name, name: name } },\n    };\n  }\n\n  if (state === UseFileState.selected) {\n    return {\n      state,\n      matches,\n      data: file as File,\n      isIdle: false,\n      isSelected: true,\n      isError: false,\n      actions: { selectFile, clearFile },\n      preview,\n      label: { props: { htmlFor: name } },\n      input: { props: { id: name, name: name } },\n    };\n  }\n\n  return {\n    state,\n    matches,\n    data: null,\n    isIdle: false,\n    isSelected: false,\n    isError: true,\n    actions: { selectFile, clearFile },\n    label: { props: { htmlFor: name } },\n    input: { props: { id: name, name: name } },\n  };\n}\n","import type { TimestampType } from \"@bgord/node/dist/schema\";\nimport { useState, useEffect } from \"react\";\nimport { Time } from \"../time\";\n\nexport function getCurrentTimestamp(): TimestampType {\n  return Date.now();\n}\n\nexport function useCurrentTimestamp(): TimestampType {\n  const [timestamp, setTimestamp] =\n    useState<TimestampType>(getCurrentTimestamp);\n\n  useEffect(() => {\n    const timer = setInterval(\n      () => setTimestamp(getCurrentTimestamp()),\n      Time.Seconds(1).ms\n    );\n\n    return () => clearInterval(timer);\n  }, []);\n\n  return timestamp;\n}\n","import { useState, useEffect } from \"react\";\nimport { usePreviousValue } from \"./use-previous-value\";\nimport { noop } from \"../noop\";\n\nexport type UseFilterQueryType = string | undefined;\nexport type UseFilterNameType = string;\n\nexport type UseFilterConfigType<T> = {\n  name: string;\n  enum: { [key: string]: UseFilterQueryType };\n  defaultQuery?: UseFilterQueryType;\n  currentQuery?: UseFilterQueryType;\n  filterFn?: (value: T) => boolean;\n  onUpdate?: (\n    current: UseFilterQueryType,\n    previous: UseFilterQueryType\n  ) => void;\n};\n\nexport type UseFilterReturnType<T> = {\n  query: UseFilterQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: UseFilterConfigType<T>[\"filterFn\"];\n  options: UseFilterConfigType<T>[\"enum\"][0][];\n  onUpdate: UseFilterConfigType<T>[\"onUpdate\"];\n  name: UseFilterConfigType<T>[\"name\"];\n  changed: boolean;\n  unchanged: boolean;\n  label: { props: { htmlFor: UseFilterNameType } };\n  input: { props: { id: UseFilterNameType; name: UseFilterNameType } };\n};\n\nexport function useFilter<T = string>(\n  config: UseFilterConfigType<T>\n): UseFilterReturnType<T> {\n  const defaultQuery = config.defaultQuery ?? undefined;\n  const currentQuery = config.currentQuery ?? undefined;\n\n  const filterFn = config.filterFn ?? defaultFilterFn;\n  const options = Object.keys(config.enum);\n  const onUpdate = config?.onUpdate ?? noop;\n\n  const [query, setQuery] = useState<UseFilterQueryType>(\n    currentQuery ?? defaultQuery\n  );\n  const previousQuery = usePreviousValue(query);\n\n  function clear() {\n    setQuery(defaultQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newQuery = event.currentTarget.value;\n\n    const isNewQueryInEnum = Boolean(config.enum[String(newQuery)]);\n\n    setQuery(isNewQueryInEnum ? newQuery : undefined);\n  }\n\n  function defaultFilterFn(value: T) {\n    if (query === undefined) return true;\n\n    return query === String(value);\n  }\n\n  useEffect(() => {\n    onUpdate(query, previousQuery);\n  }, [previousQuery, query]);\n\n  return {\n    query,\n    clear,\n    onChange,\n    filterFn,\n    options,\n    onUpdate,\n    name: config.name,\n    changed: query !== defaultQuery,\n    unchanged: query === defaultQuery,\n    label: { props: { htmlFor: config.name } },\n    input: { props: { id: config.name, name: config.name } },\n  };\n}\n","import { useState } from \"react\";\n\nexport type UseToggleValueType = boolean;\n\nexport type UseToggleReturnType = {\n  on: UseToggleValueType;\n  off: UseToggleValueType;\n  enable: VoidFunction;\n  disable: VoidFunction;\n  toggle: VoidFunction;\n};\n\nexport function useToggle(defaultValue = false): UseToggleReturnType {\n  const [on, setIsOn] = useState(defaultValue);\n\n  const enable = () => setIsOn(true);\n  const disable = () => setIsOn(false);\n  const toggle = () => setIsOn((v) => !v);\n\n  return { on, off: !on, enable, disable, toggle };\n}\n","export type ImagePathType = string | undefined;\n\nexport type ImageResolutionType = {\n  width: number | null;\n  height: number | null;\n};\n\nexport const emptyImageResolution: ImageResolutionType = {\n  width: null,\n  height: null,\n};\n\nexport async function getImageResolution(\n  path: ImagePathType\n): Promise<ImageResolutionType> {\n  if (!path) return emptyImageResolution;\n\n  const img = document.createElement(\"img\");\n\n  const promise = new Promise<ImageResolutionType>((resolve, reject) => {\n    img.onload = () => resolve({ width: img.width, height: img.height });\n    img.onerror = reject;\n  });\n\n  img.src = path;\n\n  return promise;\n}\n","import React from \"react\";\n\nexport enum KeyNameEnum {\n  Enter = \"Enter\",\n  Space = \" \",\n}\n\nexport type UseKeyHandlerConfigType = Partial<Record<KeyNameEnum, Function>>;\n\nexport type UseKeyHandlerReturnType = (\n  event: React.KeyboardEvent<HTMLElement>\n) => void;\n\nexport function useKeyHandler(\n  config: UseKeyHandlerConfigType\n): UseKeyHandlerReturnType {\n  const keys = Object.keys(config);\n\n  return function handleKey(event: React.KeyboardEvent<HTMLElement>) {\n    const key = event.key as KeyNameEnum;\n    const executor = config[key];\n\n    if (keys.includes(event.key) && config[key] && executor) {\n      executor();\n    }\n  };\n}\n","import React from \"react\";\nimport { useToggle } from \"./use-toggle\";\n\ntype OnlineStatusType = boolean;\n\nexport const useIsOnline = (): OnlineStatusType => {\n  const onlineStatus = useToggle(getOnlineStatus());\n\n  React.useEffect(() => {\n    function handleOnline() {\n      onlineStatus.enable();\n    }\n\n    function handleOffline() {\n      onlineStatus.disable();\n    }\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  return onlineStatus.on;\n};\n\n// Check if browser supports `navigator.onLine`,\n// otherwise, we assume the user is online.\nfunction getOnlineStatus(): OnlineStatusType {\n  return typeof navigator !== \"undefined\" &&\n    typeof navigator.onLine === \"boolean\"\n    ? navigator.onLine\n    : true;\n}\n","import { RefObject, useEffect, useState } from \"react\";\n\nexport const defaultUseIsVisibleConfig = {\n  threshold: 0,\n  root: null,\n  rootMargin: \"0%\",\n  ref: { current: null },\n};\n\nexport function isIntersectionObserverSupported() {\n  return (\n    \"IntersectionObserver\" in window &&\n    \"IntersectionObserverEntry\" in window &&\n    \"intersectionRatio\" in window.IntersectionObserverEntry.prototype\n  );\n}\n\nexport type UseIsVisibleConfigType = IntersectionObserverInit & {\n  ref: RefObject<Element>;\n};\n\nexport type UseIsVisibleReturnType = boolean;\n\nexport function useIsVisible(\n  config: UseIsVisibleConfigType = defaultUseIsVisibleConfig\n): UseIsVisibleReturnType {\n  const [isVisible, setVisible] = useState<UseIsVisibleReturnType>(false);\n\n  useEffect(() => {\n    const element = config.ref.current;\n\n    if (!isIntersectionObserverSupported() || !element) return;\n\n    const observer = new IntersectionObserver(\n      (entry) => setVisible(Boolean(entry[0]?.isIntersecting)),\n      config\n    );\n\n    observer.observe(element);\n\n    return () => observer.unobserve(element);\n  }, []);\n\n  return isVisible;\n}\n","import { useState } from \"react\";\n\ntype UseItemValueType<T> = T | null;\n\nexport type UseItemReturnType<T> = {\n  clear: VoidFunction;\n  set: (item: NonNullable<UseItemValueType<T>>) => void;\n  toggle: (item: NonNullable<UseItemValueType<T>>) => any;\n  value: UseItemValueType<T>;\n  isDefault: boolean;\n  exists: boolean;\n  compare: (a: UseItemValueType<T>) => boolean;\n};\n\nexport type UseItemConfigType<T> = {\n  defaultItem?: UseItemValueType<T>;\n\n  comparisonFn?: (a: UseItemValueType<T>, b: UseItemValueType<T>) => boolean;\n};\n\nfunction defaultComparisonFn<T>(\n  a: UseItemValueType<T>,\n  b: UseItemValueType<T>\n) {\n  return a === b;\n}\n\nconst defaultItem = null;\n\nexport function useItem<T>(\n  config?: UseItemConfigType<T>\n): UseItemReturnType<T> {\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [item, setItem] = useState<UseItemValueType<T>>(\n    config?.defaultItem ?? defaultItem\n  );\n\n  return {\n    clear: () => setItem(defaultItem),\n\n    set: (newer) => setItem(newer),\n\n    toggle: (newer) =>\n      setItem((current) => {\n        if (current === defaultItem) return newer;\n\n        return comparisonFn(current, newer) ? defaultItem : newer;\n      }),\n\n    value: item,\n\n    isDefault: comparisonFn(item, defaultItem),\n\n    exists: !comparisonFn(item, defaultItem),\n\n    compare: (given: UseItemValueType<T>) => comparisonFn(item, given),\n  };\n}\n","import React from \"react\";\nimport tinykeys from \"tinykeys\";\n\nexport interface UseKeyboardShortcurtsConfigType {\n  [keybinding: string]: (event: KeyboardEvent) => void;\n}\n\nexport function useKeyboardShortcurts(\n  config: UseKeyboardShortcurtsConfigType\n): void {\n  React.useEffect(() => {\n    const unsubscribeShortcuts = tinykeys(window, config);\n\n    return () => unsubscribeShortcuts();\n  }, [config]);\n}\n","import { polishPlurals } from \"polish-plurals\";\nimport type { Falsy, Schema } from \"@bgord/node\";\n\ntype PluralizeWordType = string;\ntype PluralizeValueType = Falsy<number>;\n\nexport type PluralizeOptionsType = {\n  value: PluralizeValueType;\n  singular: PluralizeWordType;\n  plural?: PluralizeWordType;\n  genitive?: PluralizeWordType;\n  language: Schema.LanguageType;\n};\n\nenum PluralizationSupportedLanguages {\n  en = \"en\",\n  pl = \"pl\",\n}\n\nexport function pluralize(options: PluralizeOptionsType): PluralizeWordType {\n  if (options.language === PluralizationSupportedLanguages.en) {\n    const plural = options.plural ?? `${options.singular}s`;\n\n    if (options.value === 1) return options.singular;\n\n    return plural;\n  }\n\n  if (options.language === PluralizationSupportedLanguages.pl) {\n    const value = options.value ?? 1;\n\n    if (value === 1) return options.singular;\n\n    return polishPlurals(\n      options.singular,\n      String(options.plural),\n      String(options.genitive),\n      value\n    );\n  }\n\n  console.warn(\n    `[@bgord/frontend] missing pluralization fuction for language ${options.language}.`\n  );\n\n  return options.singular;\n}\n","import React from \"react\";\nimport type {\n  TranslationsType,\n  TranslationsKeyType,\n  Schema,\n} from \"@bgord/node\";\nimport { pluralize, PluralizeOptionsType } from \"./pluralize\";\n\ntype TranslationsContextValueType = {\n  translations: TranslationsType;\n  language: Schema.LanguageType;\n};\n\ntype TranslationPlaceholderType = string;\ntype TranslationPlaceholderValueType = string | number;\ntype TranslationVariableType = Record<\n  TranslationPlaceholderType,\n  TranslationPlaceholderValueType\n>;\n\nconst TranslationsContext = React.createContext<TranslationsContextValueType>({\n  translations: {},\n  language: \"en\",\n});\n\ntype TranslationsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: TranslationsContextValueType;\n};\n\nexport function TranslationsContextProvider(\n  props: TranslationsContextPropsType\n) {\n  return (\n    <TranslationsContext.Provider value={props.value}>\n      {props.children}\n    </TranslationsContext.Provider>\n  );\n}\n\nexport function useTranslations() {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useTranslations must be used within the TranslationsContext`\n    );\n  }\n\n  function translate(\n    key: TranslationsKeyType,\n    variables?: TranslationVariableType\n  ) {\n    const translation = value.translations[key];\n\n    if (!translation) {\n      console.warn(`[@bgord/frontend] missing translation for key: ${key}`);\n      return key;\n    }\n\n    if (!variables) return translation;\n\n    return Object.entries(variables).reduce(\n      (result, [placeholder, value]) =>\n        result.replace(`{{${placeholder}}}`, String(value)),\n      translation\n    );\n  }\n\n  return translate;\n}\n\nexport function useLanguage(): TranslationsContextValueType[\"language\"] {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(`useLanguage must be used within the TranslationsContext`);\n  }\n\n  return value.language;\n}\n\nexport function usePluralize() {\n  const language = useLanguage();\n\n  return (options: Omit<PluralizeOptionsType, \"language\">) =>\n    pluralize({ ...options, language });\n}\n","import { useState, SetStateAction, Dispatch } from \"react\";\n\nexport type UseListActionsType<T> = {\n  clear: VoidFunction;\n  add: (x: T | T[]) => void;\n  remove: (x: T) => void;\n  toggle: (x: T) => void;\n  isAdded: (x: T) => boolean;\n  update: Dispatch<SetStateAction<T[]>>;\n};\n\nexport type UseListReturnType<T> = [T[], UseListActionsType<T>];\n\nexport type UseListConfigType<T> = {\n  defaultItems?: T[];\n  comparisonFn?: (a: T, b: T) => boolean;\n};\n\nexport function useList<T>(\n  config?: UseListConfigType<T>\n): UseListReturnType<T> {\n  const defaultItems = config?.defaultItems ?? [];\n\n  const defaultComparisonFn = (a: T, b: T) => a === b;\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [items, setItems] = useState<T[]>(defaultItems);\n\n  function clear() {\n    setItems([]);\n  }\n\n  function add(payload: T | T[]) {\n    setItems((items) => {\n      if (Array.isArray(payload)) {\n        return [...items, ...payload];\n      }\n      return [...items, payload];\n    });\n  }\n\n  function remove(item: T) {\n    setItems((items) => items.filter((x) => !comparisonFn(x, item)));\n  }\n\n  function isAdded(item: T) {\n    return items.some((x) => comparisonFn(x, item));\n  }\n\n  function toggle(item: T) {\n    isAdded(item) ? remove(item) : add(item);\n  }\n\n  return [items, { clear, add, remove, toggle, isAdded, update: setItems }];\n}\n","import * as Storage from \"ts-storage\";\n\nexport type SafeLocalStorageKeyType = string;\n\nexport class SafeLocalStorage {\n  static get<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    fallbackValue: T\n  ): T {\n    return Storage.get(key, fallbackValue).value;\n  }\n\n  static set<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    value: T\n  ) {\n    Storage.set(key, value);\n  }\n\n  static clear(key: SafeLocalStorageKeyType) {\n    Storage.remove(key);\n  }\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { DurationFormatter } from \"../durations\";\n\nexport type UseVideoSrcType = string;\n\ntype VideoDurationType = number;\ntype VideoCurrentTimeType = number;\ntype VideoVolumeType = number;\n\nexport const VIDEO_DEFAULT_VOLUME: VideoVolumeType = 1;\n\nexport enum UseVideoState {\n  \"initial\" = \"initial\",\n  \"ready\" = \"ready\",\n  \"playing\" = \"playing\",\n  \"paused\" = \"paused\",\n}\n\nexport type UseVideoReturnType = {\n  props: {\n    video: {\n      src: UseVideoSrcType;\n      onTimeUpdate: (event: Event) => void;\n      onLoadedMetadata: (event: Event) => void;\n      onEnded: (event: Event) => void;\n      controls: false;\n    };\n    player: {\n      min: 0;\n      step: 1;\n      max: VideoDurationType;\n      value: VideoDurationType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n    volume: {\n      min: 0;\n      max: 1;\n      value: VideoVolumeType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n  };\n  actions: {\n    play: VoidFunction;\n    pause: VoidFunction;\n    mute: VoidFunction;\n    unmute: VoidFunction;\n    reset: VoidFunction;\n    seek: (event: Event) => void;\n    changeVolume: (event: Event) => void;\n    triggerFullscreen: VoidFunction;\n  };\n\n  meta: {\n    state: UseVideoState;\n    isInitial: boolean;\n    isReady: boolean;\n    isPlaying: boolean;\n    isPaused: boolean;\n    matches: (states: UseVideoState[]) => boolean;\n    percentage: {\n      raw: number;\n      formatted: string;\n    };\n    currentTime: {\n      raw: VideoCurrentTimeType;\n      formatted: string;\n    };\n    duration: {\n      raw: VideoDurationType;\n      formatted: string;\n    };\n    volume: {\n      value: VideoVolumeType;\n      raw: number;\n      formatted: string;\n    };\n    muted: boolean;\n  };\n};\n\nexport function useVideo(src: UseVideoSrcType): UseVideoReturnType {\n  const [state, setState] = React.useState<UseVideoState>(\n    UseVideoState.initial\n  );\n\n  const ref = React.useRef<HTMLVideoElement | null>(null);\n\n  const duration = useField<VideoDurationType>(\"duration\", 0);\n  const currentTime = useField<VideoCurrentTimeType>(\"currentTime\", 0);\n  const volume = useField<VideoVolumeType>(\"volume\", VIDEO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (!ref.current) return;\n    ref.current.play();\n    setState(UseVideoState.playing);\n  }\n\n  function pause() {\n    if (!ref.current) return;\n    ref.current.pause();\n    setState(UseVideoState.paused);\n  }\n\n  function reset() {\n    if (!ref.current) return;\n    ref.current.currentTime = 0;\n    ref.current.pause();\n    currentTime.set(0);\n    setState(UseVideoState.paused);\n  }\n\n  function mute() {\n    if (!ref.current) return;\n    ref.current.volume = 0;\n    volume.set(0);\n  }\n\n  function unmute() {\n    if (!ref.current) return;\n    ref.current.volume = VIDEO_DEFAULT_VOLUME;\n    volume.set(VIDEO_DEFAULT_VOLUME);\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (!ref.current) return;\n    ref.current.currentTime = target.valueAsNumber;\n    currentTime.set(target.valueAsNumber);\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(UseVideoState.ready);\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLVideoElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(UseVideoState.paused);\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (!ref.current) return;\n    ref.current.volume = target.valueAsNumber;\n    volume.set(target.valueAsNumber);\n  }\n\n  function triggerFullscreen() {\n    if (!ref.current) return;\n    ref.current.requestFullscreen();\n  }\n\n  return {\n    props: {\n      video: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: {\n      play,\n      pause,\n      mute,\n      unmute,\n      reset,\n      seek,\n      changeVolume,\n      triggerFullscreen,\n    },\n    meta: {\n      state,\n      isInitial: state === UseVideoState.initial,\n      isReady: state === UseVideoState.ready,\n      isPlaying: state === UseVideoState.playing,\n      isPaused: state === UseVideoState.paused,\n      matches: (states: UseVideoState[]) =>\n        states.some((given) => given === state),\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import type { TimestampType } from \"@bgord/node/dist/schema\";\nimport type { Falsy } from \"@bgord/node\";\n\nexport type RateLimiterOptionsType = {\n  limitMs: TimestampType;\n};\n\nexport type RateLimiterResultSuccessType = { allowed: true };\n\nexport type RateLimiterResultErrorType = {\n  allowed: false;\n  remainingMs: TimestampType;\n};\n\nexport type RateLimiterResultType =\n  | RateLimiterResultSuccessType\n  | RateLimiterResultErrorType;\n\nexport class RateLimiter {\n  private lastInvocationTimestamp: Falsy<TimestampType> = null;\n\n  private options: RateLimiterOptionsType;\n\n  constructor(options: RateLimiterOptionsType) {\n    this.options = options;\n  }\n\n  verify(currentTimestamp: TimestampType): RateLimiterResultType {\n    if (!this.lastInvocationTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    const nextAllowedTimestamp =\n      this.lastInvocationTimestamp + this.options.limitMs;\n\n    if (nextAllowedTimestamp <= currentTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    return {\n      allowed: false,\n      remainingMs: nextAllowedTimestamp - currentTimestamp,\n    };\n  }\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useScrollLock(condition = true): void {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overflows\n    const originalBodyOverflow = window.getComputedStyle(body).overflow;\n    const originalHtmlOverflow = window.getComputedStyle(html).overflow;\n\n    // Prevent scrolling on mount\n    body.style.overflow = \"hidden\";\n    html.style.overflow = \"hidden\";\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      body.style.overflow = originalBodyOverflow;\n      html.style.overflow = originalHtmlOverflow;\n    };\n  }, [condition]);\n}\n","import { noop } from \"./noop\";\n\nexport type CopyToClipboardTextType = string;\ntype OnCopyToClipboardFailureType = (error?: unknown) => void;\ntype OnCopyToClipboardSuccessType = VoidFunction;\n\nconst defaultOnCopyToClipboardFailure: OnCopyToClipboardFailureType = (error) =>\n  console.warn(\"Copying to clipboard not supported\");\n\nexport type CopyToClipboardOptionsType = {\n  text: string;\n  onFailure?: OnCopyToClipboardFailureType;\n  onSuccess?: OnCopyToClipboardSuccessType;\n};\n\nexport async function copyToClipboard(options: CopyToClipboardOptionsType) {\n  const onFailure = options.onFailure ?? defaultOnCopyToClipboardFailure;\n  const onSuccess = options.onSuccess ?? noop;\n\n  if (!navigator.clipboard) onFailure();\n\n  try {\n    await navigator.clipboard.writeText(options.text);\n    onSuccess();\n  } catch (error) {\n    onFailure(error);\n  }\n}\n","import type { HourType } from \"@bgord/node/dist/schema\";\n\nimport * as Time from \"./time\";\n\nexport type DateType = Date | number | null | undefined;\n\nexport class DateFormatter {\n  static datetime(date: DateType, defaultValue = \"N/A\"): string {\n    if (!date) return defaultValue;\n\n    return new Date(date).toLocaleString();\n  }\n\n  static monthDay(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const days = DateFormatter._padDatePart(date.getDate());\n    const months = DateFormatter._padDatePart(date.getMonth() + 1);\n\n    return `${months}/${days}`;\n  }\n\n  static form(date: Date | null): string {\n    if (!date) return DateFormatter.form(new Date());\n\n    const year = DateFormatter._padDatePart(date.getFullYear());\n    const month = DateFormatter._padDatePart(date.getMonth() + 1);\n    const day = DateFormatter._padDatePart(date.getDate());\n\n    return `${year}-${month}-${day}`;\n  }\n\n  static clockUTC(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getUTCHours());\n    const minutes = DateFormatter._padDatePart(date.getUTCMinutes());\n    const seconds = DateFormatter._padDatePart(date.getUTCSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static clockLocal(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static countdown(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static formDatetimeLocal(timestamp: number) {\n    const localTimestamp =\n      timestamp - Time.Minutes(new Date().getTimezoneOffset()).ms;\n\n    return new Date(localTimestamp).toISOString().slice(0, 16);\n  }\n\n  static _padDatePart(value: number) {\n    return String(value).padStart(2, \"0\");\n  }\n}\n\nexport class HourFormatter {\n  static convertUtcToLocal(utcHour: HourType) {\n    const timeZoneOffsetInMins = new Date().getTimezoneOffset();\n\n    const utcHourInMins = Time.Hours(utcHour).minutes;\n\n    const localHourInMins = utcHourInMins - timeZoneOffsetInMins;\n    const localHour = (localHourInMins / 60) % 24;\n    const formattedLocalHour = `${String(localHour).padStart(2, \"0\")}:00`;\n\n    return { value: localHour, label: formattedLocalHour };\n  }\n}\n","export type FilterType = Record<string, unknown> | undefined;\n\nexport class FilterUrl {\n  value: string;\n\n  constructor(url: string, filters?: FilterType) {\n    const query = new URLSearchParams(this.getNonEmptyFilters(filters));\n\n    if (query.toString() === \"\") {\n      this.value = url;\n\n      return;\n    }\n\n    this.value = `${url}?${query.toString()}`;\n  }\n\n  private getNonEmptyFilters(filters: FilterType) {\n    if (filters === undefined) return {};\n\n    return Object.fromEntries(\n      Object.entries(filters).filter(([_key, value]) => value !== undefined)\n    ) as Record<string, string>;\n  }\n}\n","import type { UseInfiniteQueryResult } from \"react-query\";\nimport type { Paged } from \"@bgord/node\";\n\nexport class Pagination {\n  static empty = { result: [], meta: { exhausted: true } };\n\n  static infinite<T>(infinite: UseInfiniteQueryResult<Paged<T>>): T[] {\n    return (\n      infinite.data?.pages\n        ?.flat()\n        .map((data) => data.result)\n        .flat() ?? []\n    );\n  }\n}\n\nexport type { Paged, PageType } from \"@bgord/node\";\n\nexport type PagedMetaType = Paged<unknown>[\"meta\"];\n","export type RhythmBaseType = number;\nexport type RhythmTimesType = number;\n\nconst DEFAULT_BASE_PX = 12;\n\nexport function Rhythm(base: RhythmBaseType = DEFAULT_BASE_PX) {\n  return {\n    times(times: RhythmTimesType) {\n      const result = base * times;\n\n      const dimensions = {\n        height: { height: px(result) },\n        minHeight: { minHeight: px(result) },\n        maxHeight: { maxHeight: px(result) },\n        width: { width: px(result) },\n        minWidth: { minWidth: px(result) },\n        maxWidth: { maxWidth: px(result) },\n        square: { height: px(result), width: px(result) },\n      };\n\n      const style = {\n        height: { style: { height: px(result) } },\n        minHeight: { style: { minHeight: px(result) } },\n        maxHeight: { style: { maxHeight: px(result) } },\n        width: { style: { width: px(result) } },\n        minWidth: { style: { minWidth: px(result) } },\n        maxWidth: { style: { maxWidth: px(result) } },\n        square: { style: { height: px(result), width: px(result) } },\n      };\n\n      return { px: px(result), raw: result, style, ...dimensions };\n    },\n  };\n}\n\nfunction px(number: number) {\n  return `${number}px`;\n}\n","import React from \"react\";\nimport { useList } from \"./hooks/use-list\";\n\nexport type ToastsConfigType = {\n  timeout?: number;\n};\n\nexport type BaseToastType = {\n  id: string;\n  message: string;\n};\n\ntype ToastsContextDataType<ToastType extends BaseToastType = BaseToastType> = [\n  ToastType[],\n  {\n    add: (toast: Omit<ToastType, \"id\">) => void;\n    remove: (toast: ToastType) => void;\n    clear: VoidFunction;\n  }\n];\n\nconst ToastsContext = React.createContext<ToastsContextDataType | undefined>(\n  undefined\n);\n\nexport function ToastsContextProvider(\n  props: { children: JSX.Element | JSX.Element[] } & ToastsConfigType\n) {\n  function useToastsImplementation(): ToastsContextDataType {\n    const timeout = props?.timeout ?? 5000;\n\n    const [toasts, actions] = useList<BaseToastType>({\n      comparisonFn: (a, b) => a.id === b.id,\n    });\n\n    function add(payload: Omit<BaseToastType, \"id\">) {\n      const id = String(Date.now());\n      const toast = { ...payload, id };\n\n      actions.add(toast);\n      setTimeout(() => actions.remove(toast), timeout);\n    }\n\n    return [\n      [...toasts].reverse(),\n      { add, remove: actions.remove, clear: actions.clear },\n    ];\n  }\n\n  const [toasts, actions] = useToastsImplementation();\n\n  return (\n    <ToastsContext.Provider value={[toasts, actions]}>\n      {props.children}\n    </ToastsContext.Provider>\n  );\n}\n\nexport function useToastsContext<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const context = React.useContext<ToastsContextDataType<ToastType>>(\n    ToastsContext as unknown as React.Context<ToastsContextDataType<ToastType>>\n  );\n\n  if (context === undefined) {\n    throw new Error(`useToasts must be used within the ToastsContextProvider`);\n  }\n\n  return context;\n}\n\nexport function useToastTrigger<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const [, actions] = useToastsContext<ToastType>();\n\n  return actions.add;\n}\n","import { ServerError } from \"./server-error\";\n\nexport const API: typeof fetch = (input, init) =>\n  fetch(input, {\n    mode: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n\n      \"time-zone-offset\": new Date().getTimezoneOffset().toString(),\n    },\n    redirect: \"follow\",\n    ...init,\n  })\n    .then(ServerError.extract)\n    .catch(ServerError.handle);\n","import React from \"react\";\n\nimport * as hooks from \"../hooks\";\n\nexport type DialogPropsType = hooks.UseToggleReturnType &\n  JSX.IntrinsicElements[\"dialog\"];\n\nexport function Dialog(props: DialogPropsType) {\n  const { disable, enable, on, off, toggle, ...rest } = props;\n  const ref = React.useRef<HTMLDialogElement>(null);\n\n  React.useEffect(() => {\n    if (props.on) {\n      // @ts-ignore\n      ref.current?.showModal();\n    } else {\n      // @ts-ignore\n      ref.current?.close();\n    }\n  }, [props.on]);\n\n  hooks.useKeyboardShortcurts({ Escape: disable });\n  hooks.useAutofocus({ ref, condition: props.on });\n  hooks.useScrollLock(props.on);\n  hooks.useClickOutside(ref, disable);\n\n  return (\n    <dialog\n      ref={ref}\n      tabIndex={0}\n      data-display={props.on ? \"flex\" : \"none\"}\n      data-direction=\"column\"\n      data-mx=\"auto\"\n      data-p=\"24\"\n      data-position=\"absolute\"\n      data-z=\"2\"\n      data-bg=\"white\"\n      data-br=\"4\"\n      data-bc=\"gray-300\"\n      data-bw=\"1\"\n      data-backdrop=\"black\"\n      {...rest}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { useIsOnline } from \"../hooks\";\n\nexport function OfflineIndicator(props: { children: React.ReactChild }) {\n  const isOnline = useIsOnline();\n\n  if (isOnline) return null;\n\n  return <>{props.children}</>;\n}\n","import React from \"react\";\nimport type { PolymorphicPropsWithoutRef } from \"react-polymorphic-types\";\n\nconst OutboundLinkDefaultElement = \"a\";\n\nexport function OutboundLink<\n  T extends React.ElementType = typeof OutboundLinkDefaultElement\n>(props: PolymorphicPropsWithoutRef<{}, T>) {\n  const { as, ...rest } = props;\n\n  const Element = as || OutboundLinkDefaultElement;\n\n  return <Element target=\"_blank\" rel=\"noreferer noopener\" {...rest} />;\n}\n","type ExecFunctionListType = Function[];\n\nexport function exec(list: ExecFunctionListType) {\n  return function () {\n    list.forEach((item) => item());\n  };\n}\n","import { getSafeWindow } from \"./safe-window\";\n\nexport function isClient() {\n  return !getSafeWindow();\n}\n","import { useWindowDimensions } from \"./use-window-dimensions\";\n\nexport type BreakpointType = number;\n\nexport type UseBreakpointReturnType = boolean;\n\nexport function useBreakpoint(\n  breakpoint: BreakpointType\n): UseBreakpointReturnType {\n  const dimensions = useWindowDimensions();\n  const width = dimensions?.width ?? 0;\n\n  return width <= breakpoint;\n}\n","import { useState } from \"react\";\n\nexport type UseClientSearchQueryType = string;\n\nexport type UseClientSearchReturnType = {\n  query: UseClientSearchQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: (value: string) => boolean;\n  changed: boolean;\n  unchanged: boolean;\n};\n\nexport function useClientSearch(): UseClientSearchReturnType {\n  const emptyQuery: UseClientSearchQueryType = \"\";\n\n  const [query, setValue] = useState<UseClientSearchQueryType>(emptyQuery);\n\n  function clear() {\n    setValue(emptyQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setValue(event.currentTarget.value);\n  }\n\n  function filterFn(value: string) {\n    if (query === emptyQuery) return true;\n\n    return value?.toLowerCase().includes(query.toLowerCase());\n  }\n\n  return {\n    query,\n    clear,\n    onChange,\n    filterFn,\n    changed: query !== emptyQuery,\n    unchanged: query === emptyQuery,\n  };\n}\n","import React from \"react\";\n\ntype UseDebounceConfigType<T> = { value: T; delayMs: number };\n\nexport function useDebounce<T>(config: UseDebounceConfigType<T>): T {\n  const [debouncedValue, setDebouncedValue] = React.useState<T>(config.value);\n\n  React.useEffect(() => {\n    const timer = setTimeout(\n      () => setDebouncedValue(config.value),\n      config.delayMs\n    );\n\n    return () => clearTimeout(timer);\n  }, [config.value, config.delayMs]);\n\n  return debouncedValue;\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useDisablePullToRefresh(condition = true): void {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overscroll behaviors\n    const originalHtmlOverscrollBehavior =\n      window.getComputedStyle(html).overscrollBehavior;\n    const originalBodyOverflowBehavior =\n      window.getComputedStyle(body).overscrollBehavior;\n\n    // Disable pull to refresh\n    body.style.overscrollBehavior = \"none\";\n    html.style.overscrollBehavior = \"none\";\n\n    // Enable pull to refresh when component unmounts\n    return () => {\n      body.style.overscrollBehavior = originalBodyOverflowBehavior;\n      html.style.overscrollBehavior = originalHtmlOverscrollBehavior;\n    };\n  }, [condition]);\n}\n","import React from \"react\";\n\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n","import React from \"react\";\n\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type UseHoverReturnType = {\n  attach: { ref: React.RefObject<any> };\n  isHovering: UseToggleReturnType[\"on\"];\n};\n\nexport function useHover(): UseHoverReturnType {\n  const ref = React.useRef<any>(null);\n  const isHovering = useToggle(false);\n\n  const handleMouseEnter = isHovering.enable;\n  const handleMouseLeave = isHovering.disable;\n\n  React.useEffect(() => {\n    const node = ref.current;\n\n    if (node) {\n      node.addEventListener(\"mouseenter\", handleMouseEnter);\n      node.addEventListener(\"mouseleave\", handleMouseLeave);\n    }\n\n    return () => {\n      if (node) {\n        node.removeEventListener(\"mouseenter\", handleMouseEnter);\n        node.removeEventListener(\"mouseleave\", handleMouseLeave);\n      }\n    };\n  }, []);\n\n  return { attach: { ref }, isHovering: isHovering.on };\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { UseFileReturnType, UseFileState } from \"./use-file\";\nimport {\n  getImageResolution,\n  ImageResolutionType,\n  emptyImageResolution,\n} from \"../get-image-resolution\";\n\nexport function useImageFileResolution(\n  file: UseFileReturnType\n): ImageResolutionType {\n  const resolution = useField<ImageResolutionType>(\n    \"resolution\",\n    emptyImageResolution\n  );\n\n  React.useEffect(() => {\n    async function execute() {\n      if (file.state === UseFileState.selected) {\n        try {\n          const result = await getImageResolution(file.preview);\n\n          return resolution.set(result);\n        } catch (error) {\n          return resolution.clear();\n        }\n      }\n\n      if (\n        [UseFileState.error, UseFileState.idle].includes(file.state) &&\n        resolution.value.width !== null &&\n        resolution.value.height !== null\n      ) {\n        resolution.clear();\n      }\n    }\n\n    execute();\n  }, [file.state, file.data?.name]);\n\n  return resolution.value;\n}\n","import type { LanguageType } from \"@bgord/node/dist/schema\";\nimport Cookies from \"js-cookie\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport { useLanguage } from \"../translations\";\nimport { useFilter, UseFilterReturnType } from \"./use-filter\";\n\nexport function useLanguageSelector(\n  supportedLanguages: Record<LanguageType, LanguageType>\n): UseFilterReturnType<LanguageType> {\n  const language = useLanguage();\n\n  return useFilter({\n    enum: supportedLanguages,\n    currentQuery: language,\n    name: \"language\",\n    onUpdate: (current, previous) => {\n      const safeWindow = getSafeWindow();\n\n      if (!safeWindow) return;\n\n      if (!current || !previous || previous === current) return;\n\n      Cookies.set(\"accept-language\", current);\n      safeWindow.document.location.reload();\n    },\n  });\n}\n","import React from \"react\";\n\nexport type UseLeavingPromptConditionType = boolean;\n\nexport function useLeavingPrompt(\n  condition: UseLeavingPromptConditionType = false\n): void {\n  React.useEffect(() => {\n    if (!condition) return;\n\n    function handler(e: BeforeUnloadEvent) {\n      e.preventDefault();\n    }\n\n    window.addEventListener(\"beforeunload\", handler);\n\n    return () => window.removeEventListener(\"beforeunload\", handler);\n  }, [condition]);\n}\n","import { useField } from \"./use-field\";\nimport { PagedMetaType, PageType } from \"../pagination\";\n\ntype UsePaginationControlType = {\n  active: boolean;\n  disabled: boolean;\n  exists: boolean;\n  go: VoidFunction;\n  value: PageType | undefined;\n};\n\ntype UsePaginationReturnType = {\n  current: PageType;\n  last: PageType | undefined;\n\n  controls: {\n    firstPage: UsePaginationControlType;\n    previousPage: UsePaginationControlType;\n    nextPage: UsePaginationControlType;\n    lastPage: UsePaginationControlType;\n  };\n\n  update: (updated: PagedMetaType | null) => void;\n};\n\nexport function usePagination(): UsePaginationReturnType {\n  const meta = useField<PagedMetaType | null>(\"meta\", null);\n\n  const firstPage = 1;\n  const previousPage = meta.value?.previousPage;\n  const nextPage = meta.value?.nextPage;\n  const lastPage = meta.value?.lastPage;\n\n  const page = useField(\"page\", firstPage);\n\n  return {\n    current: page.value,\n    last: lastPage,\n\n    controls: {\n      firstPage: {\n        active: !previousPage,\n        disabled: false,\n        exists: true,\n        go: () => page.set(firstPage),\n        value: firstPage,\n      },\n\n      previousPage: {\n        active: false,\n        disabled: !previousPage,\n        exists: Boolean(previousPage),\n        go: () => page.set(previousPage ?? page.value),\n        value: previousPage,\n      },\n\n      nextPage: {\n        active: false,\n        disabled: !nextPage,\n        exists: Boolean(nextPage),\n        go: () => page.set(nextPage ?? page.value),\n        value: nextPage,\n      },\n\n      lastPage: {\n        active: page.value === lastPage,\n        disabled: !nextPage,\n        exists: true,\n        go: () => page.set(lastPage ?? page.value),\n        value: lastPage,\n      },\n    },\n\n    update: (updated) => meta.set(updated),\n  };\n}\n","import * as React from \"react\";\n\nimport {\n  useToggle,\n  UseToggleReturnType,\n  UseToggleValueType,\n} from \"./use-toggle\";\nimport {\n  SafeLocalStorage,\n  SafeLocalStorageKeyType,\n} from \"../safe-local-storage\";\n\nexport type UsePersistentToggleReturnType = UseToggleReturnType & {\n  clear: VoidFunction;\n};\n\nexport function usePersistentToggle(\n  key: SafeLocalStorageKeyType,\n  defaultValue: UseToggleValueType = false\n): UsePersistentToggleReturnType {\n  const storedValue = SafeLocalStorage.get<UseToggleValueType>(\n    key,\n    defaultValue\n  );\n\n  const toggle = useToggle(storedValue);\n\n  React.useEffect(() => SafeLocalStorage.set(key, toggle.on), [key, toggle.on]);\n\n  return { ...toggle, clear: () => SafeLocalStorage.clear(key) };\n}\n","import { useRef } from \"react\";\n\nimport {\n  RateLimiterOptionsType,\n  RateLimiterResultErrorType,\n  RateLimiter,\n} from \"../rate-limiter\";\n\nexport type UseRateLimiterActionType<T> = (...args: T[]) => void;\n\nexport type UseRateLimiterOptionsType<T> = RateLimiterOptionsType & {\n  action: UseRateLimiterActionType<T>;\n  fallback?: (remainingMs: RateLimiterResultErrorType[\"remainingMs\"]) => void;\n};\n\nexport type UseRateLimiterReturnType<T> = UseRateLimiterActionType<T>;\n\nexport function useRateLimiter<T>(\n  options: UseRateLimiterOptionsType<T>\n): UseRateLimiterReturnType<T> {\n  const rateLimiter = useRef<RateLimiter>(new RateLimiter(options));\n\n  return function executor(...args: T[]) {\n    const currentTimestamp = Date.now();\n    const result = rateLimiter.current.verify(currentTimestamp);\n\n    if (result.allowed) {\n      return options.action(...args);\n    }\n\n    return options.fallback?.(result.remainingMs);\n  };\n}\n","import React from \"react\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type ScrollPositionType = number;\n\nexport type UseScrollReturnType = {\n  actions: { goToTop: VoidFunction };\n  position: {\n    value: ScrollPositionType;\n    isInitial: boolean;\n    hasChanged: boolean;\n  };\n  visible: UseToggleReturnType[\"on\"];\n  hidden: UseToggleReturnType[\"off\"];\n};\n\nexport function useScroll(): UseScrollReturnType {\n  const safeWindow = getSafeWindow();\n\n  // Scroll position always set at the top of the page\n  const defaultScrollPosition = 0;\n  const [scrollPosition, setScrollPosition] =\n    React.useState<ScrollPositionType>(defaultScrollPosition);\n\n  // Assuming scrollbar is hidden by default\n  const scrollbarVisibility = useToggle(false);\n\n  function goToTop() {\n    if (!safeWindow) return;\n    safeWindow.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  }\n\n  React.useLayoutEffect(() => {\n    function measure() {\n      if (!safeWindow) return;\n\n      setScrollPosition(safeWindow?.scrollY);\n\n      // Checking if the viewport (clientHeight) can fully contain\n      // full content height (scrollHeight)\n      if (\n        safeWindow.document.body.clientHeight <\n        safeWindow.document.body.scrollHeight\n      ) {\n        scrollbarVisibility.enable();\n      } else {\n        scrollbarVisibility.disable();\n      }\n    }\n\n    safeWindow?.addEventListener(\"scroll\", measure);\n\n    return () => safeWindow?.removeEventListener(\"scroll\", measure);\n  }, []);\n\n  return {\n    actions: { goToTop },\n    position: {\n      value: scrollPosition,\n      isInitial: scrollPosition === 0,\n      hasChanged: scrollPosition > 0,\n    },\n    visible: scrollbarVisibility.on,\n    hidden: scrollbarVisibility.off,\n  };\n}\n","export type SoundSourceType = string;\n\nexport type UseSoundReturnType = { play: VoidFunction };\n\nexport function useSound(src: SoundSourceType): UseSoundReturnType {\n  const audio = new Audio(src);\n\n  return { play: audio.play.bind(audio) };\n}\n","import {\n  useFilter,\n  UseFilterConfigType,\n  UseFilterReturnType,\n} from \"./use-filter\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type UseUrlFilterConfigType<T> = UseFilterConfigType<T>;\n\nexport function useUrlFilter<T>(\n  config: UseUrlFilterConfigType<T>\n): UseFilterReturnType<T> {\n  const safeWindow = getSafeWindow();\n\n  const currentQuery =\n    new URLSearchParams(safeWindow?.location.search).get(config.name) ??\n    undefined;\n\n  return useFilter({\n    onUpdate: (current, previous) => {\n      if (!safeWindow) return;\n\n      const url = new URL(safeWindow.location.toString());\n      const params = new URLSearchParams(url.search);\n\n      if (current === undefined) {\n        params.delete(config.name);\n      } else {\n        params.set(config.name, current);\n      }\n\n      if (current === previous) return;\n\n      if (current !== previous) {\n        url.search = params.toString();\n        history.pushState({}, \"\", url.toString());\n      }\n    },\n    ...config,\n    defaultQuery: config.defaultQuery,\n    currentQuery: currentQuery,\n  });\n}\n"],"names":["value","defaultValue","useRef","useEffect","previousValue","current","AnimaState","ServerError","UseAudioState","config","message","_known","this","isServerError","Object","hasOwnProperty","extract","response","ok","json","error","handle","payload","format","duration","Math","floor","String","minutes","padStart","seconds","name","useState","evaluatedDefaultValue","setValue","set","clear","label","props","htmlFor","input","id","changed","unchanged","React","condition","ref","_config$ref$current","focus","width","undefined","height","windowSize","setWindowSize","getSafeWindow","safeWindow","addEventListener","handleResize","removeEventListener","innerWidth","innerHeight","onClickOutside","exclude","document","handleClickOutside","event","_ref$current","contains","target","some","node","_node$current","hours","ms","Time","UseExpandableListState","UseFileState","Days","Hours","Minutes","Seconds","now","defaultQuery","currentQuery","filterFn","query","keys","onUpdate","noop","setQuery","usePreviousValue","previousQuery","onChange","currentTarget","Boolean","newQuery","isNewQueryInEnum","options","on","setIsOn","off","enable","disable","toggle","v","getImageResolution","KeyNameEnum","path","emptyImageResolution","createElement","resolve","reject","img","onload","onerror","src","promise","useToggle","onLine","navigator","onlineStatus","window","handleOnline","handleOffline","threshold","root","rootMargin","IntersectionObserverEntry","prototype","a","b","tinykeys","language","PluralizationSupportedLanguages","en","plural","singular","pl","genitive","console","warn","createContext","translations","useContext","TranslationsContext","defaultItems","comparisonFn","items","setItems","Array","isArray","item","filter","x","add","remove","isAdded","update","SafeLocalStorage","UseVideoState","get","key","fallbackValue","Storage","lastInvocationTimestamp","verify","currentTimestamp","allowed","limitMs","nextAllowedTimestamp","remainingMs","useLayoutEffect","querySelector","body","getComputedStyle","overflow","html","style","originalBodyOverflow","originalHtmlOverflow","datetime","date","toLocaleString","monthDay","timestamp","DateFormatter","_padDatePart","getDate","getMonth","days","form","getFullYear","clockUTC","getUTCHours","getUTCMinutes","getUTCSeconds","clockLocal","getHours","getMinutes","getSeconds","countdown","formDatetimeLocal","getTimezoneOffset","localTimestamp","toISOString","slice","convertUtcToLocal","utcHour","timeZoneOffsetInMins","localHour","url","filters","getNonEmptyFilters","toString","fromEntries","entries","infinite","data","_infinite$data","pages","_infinite$data$pages","flat","map","result","number","Pagination","empty","meta","exhausted","ToastsContext","context","init","mode","headers","redirect","then","visible","isInitial","appeared","appearing","hidden","state","setState","setTimeout","previousState","hidding","cloneElement","children","effect","rest","setIsInitial","child","showModal","_ref$current2","close","hooks","Escape","tabIndex","useIsOnline","as","rel","base","times","px","minHeight","maxHeight","minWidth","maxWidth","square","raw","dimensions","actions","timeout","useList","reverse","Date","toast","Provider","onFailure","defaultOnCopyToClipboardFailure","onSuccess","clipboard","writeText","text","list","forEach","direction","officialList","setOfficialList","added","push","length","every","deleted","find","y","updated","count","initial","useField","volume","round","currentTime","valueAsNumber","audio","onTimeUpdate","onLoadedMetadata","ready","onEnded","paused","controls","player","min","step","max","onInput","seek","percentage","changeVolume","play","playing","pause","mute","unmute","reset","isReady","isPlaying","isPaused","matches","states","given","formatted","DurationFormatter","muted","breakpoint","useWindowDimensions","toLowerCase","includes","getCurrentTimestamp","setTimestamp","setInterval","timer","debouncedValue","setDebouncedValue","delayMs","overscrollBehavior","originalBodyOverflowBehavior","originalHtmlOverscrollBehavior","title","contracted","expanded","getState","displayShowMore","displayShowLess","areThereExcessiveElements","showMore","showLess","numberOfExcessiveElements","_element","index","maxSize","Infinity","idle","file","setFile","files","size","selected","useMemo","URL","createObjectURL","isIdle","isSelected","isError","selectFile","clearFile","preview","isHovering","handleMouseEnter","handleMouseLeave","attach","resolution","execute","_file$data","defaultUseIsVisibleConfig","isVisible","setVisible","isIntersectionObserverSupported","element","entry","_entry$","isIntersecting","observer","observe","unobserve","defaultComparisonFn","defaultItem","setItem","newer","isDefault","exists","compare","executor","supportedLanguages","enum","useLanguage","previous","Cookies","location","reload","handler","e","preventDefault","_meta$value","previousPage","_meta$value2","nextPage","_meta$value3","lastPage","page","last","firstPage","active","disabled","go","rateLimiter","action","fallback","scrollPosition","setScrollPosition","scrollY","clientHeight","scrollHeight","scrollbarVisibility","measure","goToTop","scrollTo","top","left","behavior","position","hasChanged","bind","useToastsContext","variables","translation","reduce","replace","search","params","history","pushState","video","triggerFullscreen","requestFullscreen"],"mappings":"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"}