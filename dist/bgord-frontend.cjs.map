{"version":3,"file":"bgord-frontend.cjs","sources":["../hooks/use-previous-value.ts","../anima.tsx","../server-error.ts","../hooks/use-audio.ts","../durations.ts","../hooks/use-field.ts","../hooks/use-autofocus.ts","../safe-window.ts","../hooks/use-window-dimensions.ts","../hooks/use-click-outside.ts","../time.ts","../hooks/use-expandable-list.ts","../hooks/use-file.ts","../hooks/use-current-timestamp.ts","../hooks/use-toggle.ts","../hooks/use-filter.ts","../get-image-resolution.ts","../hooks/use-keyboard-handler.ts","../hooks/use-is-online.ts","../hooks/use-is-visible.ts","../hooks/use-item.ts","../hooks/use-keyboard-shortcuts.ts","../pluralize.ts","../translations.tsx","../hooks/use-list.ts","../safe-local-storage.ts","../hooks/use-video.ts","../rate-limiter.ts","../hooks/use-scroll-lock.ts","../exec.ts","../components/dev-tools.tsx","../copy-to-clipboard.ts","../dates.ts","../feature-flags.tsx","../filter-url.ts","../pagination.ts","../rhythm.ts","../thousands-separator.ts","../toasts.tsx","../api.ts","../components/dialog.tsx","../components/offline-indicator.tsx","../components/outbound-link.tsx","../is-client.ts","../hooks/use-breakpoint.ts","../hooks/use-client-search.ts","../hooks/use-debounce.ts","../hooks/use-design-mode.ts","../hooks/use-disable-pull-to-refresh.ts","../hooks/use-document-title.ts","../hooks/use-hover.ts","../hooks/use-image-file-resolution.ts","../hooks/use-language-selector.ts","../hooks/use-leaving-prompt.ts","../hooks/use-pagination.ts","../hooks/use-persistent-toggle.ts","../hooks/use-rate-limiter.ts","../reordering.ts","../hooks/use-scroll.ts","../hooks/use-sound.ts","../hooks/use-url-filter.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport function usePreviousValue<T>(\n  value: T,\n  defaultValue?: T | undefined\n): T | undefined {\n  const previousValue = useRef<T | undefined>(defaultValue);\n\n  useEffect(() => {\n    previousValue.current = value;\n  });\n\n  return previousValue.current;\n}\n","import React from \"react\";\n\nimport { usePreviousValue } from \"./hooks/use-previous-value\";\n\nexport enum AnimaState {\n  appearing = \"appearing\",\n  appeared = \"appeared\",\n  hiding = \"hiding\",\n  hidden = \"hidden\",\n}\n\nexport type AnimaEffectType = string;\n\nexport type AnimaConfigType = {\n  children: JSX.Element;\n\n  visible: boolean;\n  effect: AnimaEffectType;\n\n  duration?: number;\n  isInitial?: boolean;\n};\n\nexport function Anima(props: AnimaConfigType) {\n  const duration = props.duration ?? 300;\n\n  function getInitialState() {\n    if (!props.visible) return AnimaState.hidden;\n    if (props.isInitial) return AnimaState.appeared;\n    return AnimaState.appearing;\n  }\n\n  const [state, setState] = React.useState<AnimaState>(getInitialState);\n  const previousState = usePreviousValue(state);\n\n  React.useEffect(() => {\n    if (props.isInitial) return;\n\n    if (props.visible) {\n      setState(AnimaState.appearing);\n      setTimeout(() => setState(AnimaState.appeared), 100);\n    } else {\n      if (!previousState) return;\n      setState(AnimaState.hiding);\n      setTimeout(() => setState(AnimaState.hidden), duration);\n    }\n  }, [props.visible]);\n\n  if (state === AnimaState.hidden) return null;\n\n  return React.cloneElement(props.children, {\n    \"data-anima\": state,\n    \"data-anima-effect\": props.effect,\n    style: { \"--duration\": `${duration}ms`, ...props.children.props.style },\n  });\n}\n\nexport function getAnimaProps(props: Record<string, any>) {\n  return {\n    \"data-anima\": props[\"data-anima\"] as AnimaState | undefined,\n    \"data-anima-effect\": props[\"data-anima-effect\"] as\n      | AnimaEffectType\n      | undefined,\n    style: props.style as React.CSSProperties,\n  };\n}\n\nexport type AnimaListPropsType = {\n  children: JSX.Element[];\n} & JSX.IntrinsicElements[\"ul\"];\n\nexport function AnimaList(props: AnimaListPropsType) {\n  const { children, ...rest } = props;\n\n  const [isInitial, setIsInitial] = React.useState<boolean>(true);\n\n  React.useEffect(() => setIsInitial(false), []);\n\n  return (\n    <ul {...rest}>\n      {props.children.map((child) => React.cloneElement(child, { isInitial }))}\n    </ul>\n  );\n}\n\nexport type UseAnimaListDirectionType = \"head\" | \"tail\";\n\nexport type UseAnimaListConfigType = {\n  direction?: UseAnimaListDirectionType;\n  duration?: number;\n};\n\nexport type UseAnimaListItemType<T> = { item: T; props: { visible: boolean } };\n\ntype UseAnimaListReturnType<T> = {\n  items: { item: T; props: { visible: boolean } }[];\n  count: number;\n};\n\nexport function useAnimaList<T extends { id: string }>(\n  list: T[],\n  config?: UseAnimaListConfigType\n): UseAnimaListReturnType<T> {\n  const duration = config?.duration ?? 300;\n  const direction = config?.direction ?? \"head\";\n\n  const [officialList, setOfficialList] = React.useState<\n    UseAnimaListItemType<T>[]\n  >(list.map((item) => ({ item, props: { visible: true } })));\n\n  let added: T[] = [];\n\n  for (const item of list) {\n    const wasAdded = !officialList\n      .map((x) => x.item)\n      .some((x) => item.id === x.id);\n\n    if (wasAdded) added.push(item);\n  }\n\n  React.useEffect(() => {\n    if (added.length === 0) return;\n\n    if (direction === \"head\") {\n      setOfficialList((officialList) => [\n        ...added.map((item) => ({ item, props: { visible: true } })),\n        ...officialList,\n      ]);\n    } else {\n      setOfficialList((officialList) => [\n        ...officialList,\n        ...added.map((item) => ({ item, props: { visible: true } })),\n      ]);\n    }\n\n    added = [];\n  }, [added.length, direction]);\n\n  let deleted: T[] = [];\n\n  for (const { item } of officialList) {\n    const wasDeleted = list.every((x) => x.id !== item.id);\n\n    if (wasDeleted) deleted.push(item);\n  }\n\n  React.useEffect(() => {\n    if (deleted.length === 0) return;\n\n    setOfficialList((officialList) =>\n      officialList.map((x) => {\n        const wasDeleted = deleted.some((item) => item.id === x.item.id);\n\n        return wasDeleted ? { ...x, props: { visible: false } } : x;\n      })\n    );\n\n    deleted = [];\n  }, [deleted.length]);\n\n  return {\n    items: officialList.map((item) => {\n      const updated = list.find((y) => y.id === item.item.id);\n      return updated ? { ...item, item: updated } : item;\n    }),\n    count: officialList.filter((x) => x.props.visible).length,\n  };\n}\n","export type ServerErrorConfigType = {\n  message: string;\n};\n\nexport class ServerError {\n  message: ServerErrorConfigType[\"message\"];\n\n  _known = true;\n\n  constructor(config: ServerErrorConfigType) {\n    this.message = config.message;\n  }\n\n  static isServerError(value: unknown): value is ServerError {\n    if (\n      value &&\n      typeof value === \"object\" &&\n      value === Object(value) &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"_known\") &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"message\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  static async extract(response: Response) {\n    if (response.ok) return response;\n\n    const error = await response.json();\n\n    const message = ServerError.isServerError(error)\n      ? error.message\n      : \"app.error.general\";\n\n    throw new ServerError({ message });\n  }\n\n  static async handle(payload: unknown): Promise<Response> {\n    throw new ServerError({\n      message: ServerError.isServerError(payload)\n        ? payload.message\n        : \"app.error.general\",\n    });\n  }\n}\n","import * as React from \"react\";\n\nimport { DurationFormatter } from \"../durations\";\nimport { useField } from \"./use-field\";\n\nexport type UseAudioSrcType = string;\n\ntype AudioDurationType = number;\ntype AudioCurrentTimeType = number;\ntype AudioVolumeType = number;\n\nexport const AUDIO_DEFAULT_VOLUME: AudioVolumeType = 1;\n\nexport enum UseAudioState {\n  \"initial\" = \"initial\",\n  \"ready\" = \"ready\",\n  \"playing\" = \"playing\",\n  \"paused\" = \"paused\",\n}\n\nexport type UseAudioReturnType = {\n  props: {\n    audio: {\n      src: UseAudioSrcType;\n      onTimeUpdate: (event: Event) => void;\n      onLoadedMetadata: (event: Event) => void;\n      onEnded: (event: Event) => void;\n      controls: false;\n    };\n    player: {\n      min: 0;\n      step: 1;\n      max: AudioDurationType;\n      value: AudioDurationType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n    volume: {\n      min: 0;\n      max: 1;\n      step: 0.01;\n      value: AudioVolumeType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n  };\n  actions: {\n    play: VoidFunction;\n    pause: VoidFunction;\n    mute: VoidFunction;\n    unmute: VoidFunction;\n    reset: VoidFunction;\n    seek: (event: Event) => void;\n    changeVolume: (event: Event) => void;\n  };\n\n  meta: {\n    state: UseAudioState;\n    isInitial: boolean;\n    isReady: boolean;\n    isPlaying: boolean;\n    isPaused: boolean;\n    matches: (states: UseAudioState[]) => boolean;\n    percentage: {\n      raw: number;\n      formatted: string;\n    };\n    currentTime: {\n      raw: AudioCurrentTimeType;\n      formatted: string;\n    };\n    duration: {\n      raw: AudioDurationType;\n      formatted: string;\n    };\n    volume: {\n      value: AudioVolumeType;\n      raw: number;\n      formatted: string;\n    };\n    muted: boolean;\n  };\n};\n\nexport function useAudio(src: UseAudioSrcType): UseAudioReturnType {\n  const [state, setState] = React.useState<UseAudioState>(\n    UseAudioState.initial\n  );\n\n  const ref = React.useRef<HTMLAudioElement | null>(null);\n\n  const duration = useField<AudioDurationType>(\"duration\", 0);\n  const currentTime = useField<AudioCurrentTimeType>(\"currentTime\", 0);\n  const volume = useField<AudioVolumeType>(\"volume\", AUDIO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (ref.current) {\n      ref.current.play();\n      setState(UseAudioState.playing);\n    }\n  }\n\n  function pause() {\n    if (ref.current) {\n      ref.current.pause();\n      setState(UseAudioState.paused);\n    }\n  }\n\n  function reset() {\n    if (ref.current) {\n      ref.current.currentTime = 0;\n      ref.current.pause();\n      currentTime.set(0);\n      setState(UseAudioState.paused);\n    }\n  }\n\n  function mute() {\n    if (ref.current) {\n      ref.current.volume = 0;\n      volume.set(0);\n    }\n  }\n\n  function unmute() {\n    if (ref.current) {\n      ref.current.volume = AUDIO_DEFAULT_VOLUME;\n      volume.set(AUDIO_DEFAULT_VOLUME);\n    }\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.currentTime = target.valueAsNumber;\n      currentTime.set(target.valueAsNumber);\n    }\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLAudioElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(UseAudioState.ready);\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLAudioElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(UseAudioState.paused);\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.volume = target.valueAsNumber;\n      volume.set(target.valueAsNumber);\n    }\n  }\n\n  return {\n    props: {\n      audio: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: { play, pause, mute, unmute, reset, seek, changeVolume },\n    meta: {\n      state,\n      isInitial: state === UseAudioState.initial,\n      isReady: state === UseAudioState.ready,\n      isPlaying: state === UseAudioState.playing,\n      isPaused: state === UseAudioState.paused,\n      matches: (states: UseAudioState[]) =>\n        states.some((given) => given === state),\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","export class DurationFormatter {\n  static format(duration: number) {\n    const minutes = Math.floor(duration / 60);\n    const seconds = duration % 60;\n\n    const formattedMinutes = String(minutes).padStart(2, \"0\");\n    const formattedSeconds = String(seconds).padStart(2, \"0\");\n\n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n","import { useEffect, useState, Dispatch, SetStateAction } from \"react\";\n\nexport type UseFieldDefaultValueType<T> = T | (() => T);\nexport type UseFieldNameType = string;\n\nexport type UseFieldReturnType<T> = {\n  value: T;\n  set: Dispatch<SetStateAction<T>>;\n  clear: VoidFunction;\n  label: { props: { htmlFor: UseFieldNameType } };\n  input: { props: { id: UseFieldNameType; name: UseFieldNameType } };\n  changed: boolean;\n  unchanged: boolean;\n};\n\nexport function useField<T>(\n  name: UseFieldNameType,\n  defaultValue: UseFieldDefaultValueType<T>\n): UseFieldReturnType<T> {\n  const evaluatedDefaultValue =\n    // @ts-ignore\n    typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n\n  const [value, setValue] = useState(evaluatedDefaultValue);\n\n  useEffect(() => setValue(evaluatedDefaultValue), [evaluatedDefaultValue]);\n\n  function clear() {\n    setValue(evaluatedDefaultValue);\n  }\n\n  return {\n    value,\n    set: setValue,\n    clear,\n    label: { props: { htmlFor: name } },\n    input: { props: { id: name, name: name } },\n    changed: value !== evaluatedDefaultValue,\n    unchanged: value == evaluatedDefaultValue,\n  };\n}\n","import React from \"react\";\n\nexport type UseAutofocusConfigType = {\n  ref: React.RefObject<HTMLElement>;\n  condition: boolean;\n};\n\nexport function useAutofocus(config: UseAutofocusConfigType): void {\n  React.useEffect(() => {\n    if (!config.condition) return;\n\n    config.ref.current?.focus();\n  }, [config.condition]);\n}\n","export function getSafeWindow() {\n  if (typeof window === \"undefined\") return undefined;\n  return window;\n}\n","import { useState, useEffect } from \"react\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type WindowDimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowDimensions(): WindowDimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowDimensions>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    const safeWindow = getSafeWindow();\n\n    if (!safeWindow) return;\n\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: safeWindow?.innerWidth,\n        height: safeWindow?.innerHeight,\n      });\n    }\n\n    // Add event listener\n    safeWindow.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => safeWindow.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import React from \"react\";\n\nexport function useClickOutside(\n  ref: React.RefObject<HTMLElement>,\n  onClickOutside: VoidFunction,\n  exclude?: React.RefObject<HTMLElement>[]\n): void {\n  React.useEffect(() => {\n    if (!ref.current) return;\n\n    function handleClickOutside(event: MouseEvent) {\n      // Check if click event happened outside the `ref`\n      // so the `onClickOutside` callback `may` be fired.\n      if (!ref.current?.contains(event.target as Node)) {\n        // The second check is to check if some `exclude`d node\n        // outside the `ref` node has been clicked.\n        const isExcludedNodeClicked = exclude?.some((node) =>\n          node.current?.contains(event.target as Node)\n        );\n\n        // `onClickOutside` callback is fired if the click event\n        // happened outside both `ref` node and `exclude`d nodes.\n        if (!isExcludedNodeClicked) {\n          onClickOutside();\n        }\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [onClickOutside, ref, exclude]);\n}\n","export function Days(value: number) {\n  return {\n    value,\n    hours: value * 24,\n    minutes: value * 24 * 60,\n    seconds: value * 24 * 60 * 60,\n    ms: value * 24 * 60 * 60 * 1000,\n  };\n}\n\nexport function Hours(value: number) {\n  return {\n    value,\n    minutes: value * 60,\n    seconds: value * 60 * 60,\n    ms: value * 60 * 60 * 1000,\n  };\n}\n\nexport function Minutes(value: number) {\n  return { value, seconds: value * 60, ms: value * 60 * 1000 };\n}\n\nexport function Seconds(value: number) {\n  return { value, ms: value * 1000 };\n}\n\nexport const Time = { Days, Hours, Minutes, Seconds };\n","import { useState, useEffect } from \"react\";\n\nexport enum UseExpandableListState {\n  contracted = \"contracted\",\n  expanded = \"expanded\",\n}\n\nexport type UseExpandableListConfigType = { max: number; length: number };\n\nexport type UseExpandableListReturnType = {\n  state: UseExpandableListState;\n  displayShowMore: boolean;\n  displayShowLess: boolean;\n  actions: {\n    showMore: VoidFunction;\n    showLess: VoidFunction;\n  };\n  numberOfExcessiveElements: number;\n  filterFn: (element: unknown, index: number) => void;\n};\n\nexport function useExpandableList(\n  config: UseExpandableListConfigType\n): UseExpandableListReturnType {\n  const numberOfExcessiveElements = config.length - config.max;\n  const areThereExcessiveElements = config.length > config.max;\n\n  function getState() {\n    return areThereExcessiveElements\n      ? UseExpandableListState.contracted\n      : UseExpandableListState.expanded;\n  }\n\n  const [state, setState] = useState<UseExpandableListState>(getState);\n\n  useEffect(() => setState(getState()), [config.length, config.max]);\n\n  function showMore() {\n    if (state === UseExpandableListState.contracted) {\n      setState(UseExpandableListState.expanded);\n    }\n  }\n\n  function showLess() {\n    if (state === UseExpandableListState.expanded) {\n      setState(UseExpandableListState.contracted);\n    }\n  }\n\n  function filterFn(_element: unknown, index: number) {\n    if (state === UseExpandableListState.expanded) return true;\n    return index < config.max;\n  }\n\n  return {\n    state,\n    displayShowMore: state === UseExpandableListState.contracted,\n    displayShowLess:\n      state === UseExpandableListState.expanded && areThereExcessiveElements,\n    actions: {\n      showMore,\n      showLess,\n    },\n    numberOfExcessiveElements,\n    filterFn,\n  };\n}\n","import { useState, useMemo } from \"react\";\n\ntype UseFileNameType = string;\n\nexport type UseFileConfigType = {\n  maxSize?: number;\n};\n\nexport enum UseFileState {\n  \"idle\" = \"idle\",\n  \"selected\" = \"selected\",\n  \"error\" = \"error\",\n}\n\ntype UseFileIdle = {\n  state: UseFileState.idle;\n  matches: (states: UseFileState[]) => boolean;\n  isIdle: true;\n  isSelected: false;\n  isError: false;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\ntype UseFileSelected = {\n  state: UseFileState.selected;\n  matches: (states: UseFileState[]) => boolean;\n  data: File;\n  isIdle: false;\n  isSelected: true;\n  isError: false;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  preview: ReturnType<typeof URL.createObjectURL> | undefined;\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\ntype UseFileError = {\n  state: UseFileState.error;\n  matches: (states: UseFileState[]) => boolean;\n  data: null;\n  isIdle: false;\n  isSelected: false;\n  isError: true;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\nexport type UseFileReturnType = UseFileIdle | UseFileSelected | UseFileError;\n\nexport function useFile(\n  name: UseFileNameType,\n  config?: UseFileConfigType\n): UseFileReturnType {\n  const maxSize = config?.maxSize ?? Infinity;\n\n  const [key, setKey] = useState(0);\n  const [state, setState] = useState<UseFileState>(UseFileState.idle);\n  const [file, setFile] = useState<File | null>(null);\n\n  function selectFile(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.currentTarget.files;\n\n    if (!files || !files[0]) return;\n\n    const file = files[0];\n\n    if (file.size > maxSize) {\n      setState(UseFileState.error);\n      return undefined;\n    }\n\n    setFile(file);\n    setState(UseFileState.selected);\n\n    return file;\n  }\n\n  function clearFile() {\n    setKey((key) => key + 1);\n    setFile(null);\n    setState(UseFileState.idle);\n  }\n\n  const preview = useMemo(\n    () => (file ? URL.createObjectURL(file) : undefined),\n    [file]\n  );\n\n  function matches(states: UseFileState[]) {\n    return states.some((given) => given === state);\n  }\n\n  if (state === UseFileState.idle) {\n    return {\n      state,\n      matches,\n      isIdle: true,\n      isSelected: false,\n      isError: false,\n      data: null,\n      actions: { selectFile, clearFile },\n      label: { props: { htmlFor: name } },\n      input: {\n        props: { id: name, name, multiple: false, key },\n      },\n    };\n  }\n\n  if (state === UseFileState.selected) {\n    return {\n      state,\n      matches,\n      data: file as File,\n      isIdle: false,\n      isSelected: true,\n      isError: false,\n      actions: { selectFile, clearFile },\n      preview,\n      label: { props: { htmlFor: name } },\n      input: {\n        props: { id: name, name, multiple: false, key },\n      },\n    };\n  }\n\n  return {\n    state,\n    matches,\n    data: null,\n    isIdle: false,\n    isSelected: false,\n    isError: true,\n    actions: { selectFile, clearFile },\n    label: { props: { htmlFor: name } },\n    input: {\n      props: { id: name, name, multiple: false, key },\n    },\n  };\n}\n","import type { TimestampType } from \"@bgord/node/dist/schema\";\nimport { useState, useEffect } from \"react\";\nimport { Time } from \"../time\";\n\nexport function getCurrentTimestamp(): TimestampType {\n  return Date.now();\n}\n\nexport function useCurrentTimestamp(): TimestampType {\n  const [timestamp, setTimestamp] =\n    useState<TimestampType>(getCurrentTimestamp);\n\n  useEffect(() => {\n    const timer = setInterval(\n      () => setTimestamp(getCurrentTimestamp()),\n      Time.Seconds(1).ms\n    );\n\n    return () => clearInterval(timer);\n  }, []);\n\n  return timestamp;\n}\n","import { useState } from \"react\";\n\nexport type UseToggleValueType = boolean;\n\nexport type UseToggleConfigType = UseToggleValueType;\n\nexport type UseToggleReturnType = {\n  on: UseToggleValueType;\n  off: UseToggleValueType;\n  enable: VoidFunction;\n  disable: VoidFunction;\n  toggle: VoidFunction;\n};\n\nexport function useToggle(\n  defaultValue: UseToggleConfigType = false\n): UseToggleReturnType {\n  const [on, setIsOn] = useState(defaultValue);\n\n  const enable = () => setIsOn(true);\n  const disable = () => setIsOn(false);\n  const toggle = () => setIsOn((v) => !v);\n\n  return { on, off: !on, enable, disable, toggle };\n}\n","import { useState, useEffect } from \"react\";\nimport { usePreviousValue } from \"./use-previous-value\";\nimport { noop } from \"../noop\";\n\nexport type UseFilterQueryType = string | undefined;\nexport type UseFilterNameType = string;\n\nexport type UseFilterConfigType<T> = {\n  name: string;\n  enum: { [key: string]: UseFilterQueryType };\n  defaultQuery?: UseFilterQueryType;\n  currentQuery?: UseFilterQueryType;\n  filterFn?: (value: T) => boolean;\n  onUpdate?: (\n    current: UseFilterQueryType,\n    previous: UseFilterQueryType\n  ) => void;\n};\n\nexport type UseFilterReturnType<T> = {\n  query: UseFilterQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: UseFilterConfigType<T>[\"filterFn\"];\n  options: UseFilterConfigType<T>[\"enum\"][0][];\n  onUpdate: UseFilterConfigType<T>[\"onUpdate\"];\n  name: UseFilterConfigType<T>[\"name\"];\n  changed: boolean;\n  unchanged: boolean;\n  label: { props: { htmlFor: UseFilterNameType } };\n  input: { props: { id: UseFilterNameType; name: UseFilterNameType } };\n};\n\nexport function useFilter<T = string>(\n  config: UseFilterConfigType<T>\n): UseFilterReturnType<T> {\n  const defaultQuery = config.defaultQuery ?? undefined;\n  const currentQuery = config.currentQuery ?? undefined;\n\n  const filterFn = config.filterFn ?? defaultFilterFn;\n  const options = Object.keys(config.enum);\n  const onUpdate = config?.onUpdate ?? noop;\n\n  const [query, setQuery] = useState<UseFilterQueryType>(\n    currentQuery ?? defaultQuery\n  );\n  const previousQuery = usePreviousValue(query);\n\n  function clear() {\n    setQuery(defaultQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newQuery = event.currentTarget.value;\n\n    const isNewQueryInEnum = Boolean(config.enum[String(newQuery)]);\n\n    setQuery(isNewQueryInEnum ? newQuery : undefined);\n  }\n\n  function defaultFilterFn(value: T) {\n    if (query === undefined) return true;\n\n    return query === String(value);\n  }\n\n  useEffect(() => {\n    onUpdate(query, previousQuery);\n  }, [previousQuery, query]);\n\n  return {\n    query,\n    clear,\n    onChange,\n    filterFn,\n    options,\n    onUpdate,\n    name: config.name,\n    changed: query !== defaultQuery,\n    unchanged: query === defaultQuery,\n    label: { props: { htmlFor: config.name } },\n    input: { props: { id: config.name, name: config.name } },\n  };\n}\n","export type ImagePathType = string | undefined;\n\nexport type ImageResolutionType = {\n  width: number | null;\n  height: number | null;\n};\n\nexport const emptyImageResolution: ImageResolutionType = {\n  width: null,\n  height: null,\n};\n\nexport async function getImageResolution(\n  path: ImagePathType\n): Promise<ImageResolutionType> {\n  if (!path) return emptyImageResolution;\n\n  const img = document.createElement(\"img\");\n\n  const promise = new Promise<ImageResolutionType>((resolve, reject) => {\n    img.onload = () => resolve({ width: img.width, height: img.height });\n    img.onerror = reject;\n  });\n\n  img.src = path;\n\n  return promise;\n}\n","import React from \"react\";\n\nexport enum KeyNameEnum {\n  Enter = \"Enter\",\n  Space = \" \",\n}\n\nexport type UseKeyHandlerConfigType = Partial<Record<KeyNameEnum, Function>>;\n\nexport type UseKeyHandlerReturnType = (\n  event: React.KeyboardEvent<HTMLElement>\n) => void;\n\nexport function useKeyHandler(\n  config: UseKeyHandlerConfigType\n): UseKeyHandlerReturnType {\n  const keys = Object.keys(config);\n\n  return function handleKey(event: React.KeyboardEvent<HTMLElement>) {\n    const key = event.key as KeyNameEnum;\n    const executor = config[key];\n\n    if (keys.includes(event.key) && config[key] && executor) {\n      executor();\n    }\n  };\n}\n","import React from \"react\";\nimport { useToggle } from \"./use-toggle\";\n\ntype OnlineStatusType = boolean;\n\nexport const useIsOnline = (): OnlineStatusType => {\n  const onlineStatus = useToggle(getOnlineStatus());\n\n  React.useEffect(() => {\n    function handleOnline() {\n      onlineStatus.enable();\n    }\n\n    function handleOffline() {\n      onlineStatus.disable();\n    }\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  return onlineStatus.on;\n};\n\n// Check if browser supports `navigator.onLine`,\n// otherwise, we assume the user is online.\nfunction getOnlineStatus(): OnlineStatusType {\n  return typeof navigator !== \"undefined\" &&\n    typeof navigator.onLine === \"boolean\"\n    ? navigator.onLine\n    : true;\n}\n","import { RefObject, useEffect, useState } from \"react\";\n\nexport const defaultUseIsVisibleConfig = {\n  threshold: 0,\n  root: null,\n  rootMargin: \"0%\",\n  ref: { current: null },\n};\n\nexport function isIntersectionObserverSupported() {\n  return (\n    \"IntersectionObserver\" in window &&\n    \"IntersectionObserverEntry\" in window &&\n    \"intersectionRatio\" in window.IntersectionObserverEntry.prototype\n  );\n}\n\nexport type UseIsVisibleConfigType = IntersectionObserverInit & {\n  ref: RefObject<Element>;\n};\n\nexport type UseIsVisibleReturnType = boolean;\n\nexport function useIsVisible(\n  config: UseIsVisibleConfigType = defaultUseIsVisibleConfig\n): UseIsVisibleReturnType {\n  const [isVisible, setVisible] = useState<UseIsVisibleReturnType>(false);\n\n  useEffect(() => {\n    const element = config.ref.current;\n\n    if (!isIntersectionObserverSupported() || !element) return;\n\n    const observer = new IntersectionObserver(\n      (entry) => setVisible(Boolean(entry[0]?.isIntersecting)),\n      config\n    );\n\n    observer.observe(element);\n\n    return () => observer.unobserve(element);\n  }, []);\n\n  return isVisible;\n}\n","import { useState } from \"react\";\n\ntype UseItemValueType<T> = T | null;\n\nexport type UseItemReturnType<T> = {\n  clear: VoidFunction;\n  set: (item: NonNullable<UseItemValueType<T>>) => void;\n  toggle: (item: NonNullable<UseItemValueType<T>>) => any;\n  value: UseItemValueType<T>;\n  isDefault: boolean;\n  exists: boolean;\n  compare: (a: UseItemValueType<T>) => boolean;\n};\n\nexport type UseItemConfigType<T> = {\n  defaultItem?: UseItemValueType<T>;\n\n  comparisonFn?: (a: UseItemValueType<T>, b: UseItemValueType<T>) => boolean;\n};\n\nfunction defaultComparisonFn<T>(\n  a: UseItemValueType<T>,\n  b: UseItemValueType<T>\n) {\n  return a === b;\n}\n\nconst defaultItem = null;\n\nexport function useItem<T>(\n  config?: UseItemConfigType<T>\n): UseItemReturnType<T> {\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [item, setItem] = useState<UseItemValueType<T>>(\n    config?.defaultItem ?? defaultItem\n  );\n\n  return {\n    clear: () => setItem(defaultItem),\n\n    set: (newer) => setItem(newer),\n\n    toggle: (newer) =>\n      setItem((current) => {\n        if (current === defaultItem) return newer;\n\n        return comparisonFn(current, newer) ? defaultItem : newer;\n      }),\n\n    value: item,\n\n    isDefault: comparisonFn(item, defaultItem),\n\n    exists: !comparisonFn(item, defaultItem),\n\n    compare: (given: UseItemValueType<T>) => comparisonFn(item, given),\n  };\n}\n","import React from \"react\";\nimport tinykeys from \"tinykeys\";\n\nexport interface UseKeyboardShortcutsConfigType {\n  [keybinding: string]: (event: KeyboardEvent) => void;\n}\n\nexport function useKeyboardShortcuts(\n  config: UseKeyboardShortcutsConfigType\n): void {\n  React.useEffect(() => {\n    const unsubscribeShortcuts = tinykeys(window, config);\n\n    return () => unsubscribeShortcuts();\n  }, [config]);\n}\n","import { polishPlurals } from \"polish-plurals\";\nimport type { Falsy, Schema } from \"@bgord/node\";\n\ntype PluralizeWordType = string;\ntype PluralizeValueType = Falsy<number>;\n\nexport type PluralizeOptionsType = {\n  value: PluralizeValueType;\n  singular: PluralizeWordType;\n  plural?: PluralizeWordType;\n  genitive?: PluralizeWordType;\n  language: Schema.LanguageType;\n};\n\nenum PluralizationSupportedLanguages {\n  en = \"en\",\n  pl = \"pl\",\n}\n\nexport function pluralize(options: PluralizeOptionsType): PluralizeWordType {\n  if (options.language === PluralizationSupportedLanguages.en) {\n    const plural = options.plural ?? `${options.singular}s`;\n\n    if (options.value === 1) return options.singular;\n\n    return plural;\n  }\n\n  if (options.language === PluralizationSupportedLanguages.pl) {\n    const value = options.value ?? 1;\n\n    if (value === 1) return options.singular;\n\n    return polishPlurals(\n      options.singular,\n      String(options.plural),\n      String(options.genitive),\n      value\n    );\n  }\n\n  console.warn(\n    `[@bgord/frontend] missing pluralization function for language ${options.language}.`\n  );\n\n  return options.singular;\n}\n","import React from \"react\";\nimport type {\n  TranslationsType,\n  TranslationsKeyType,\n  Schema,\n} from \"@bgord/node\";\nimport { pluralize, PluralizeOptionsType } from \"./pluralize\";\n\ntype TranslationsContextValueType = {\n  translations: TranslationsType;\n  language: Schema.LanguageType;\n};\n\ntype TranslationPlaceholderType = string;\ntype TranslationPlaceholderValueType = string | number;\ntype TranslationVariableType = Record<\n  TranslationPlaceholderType,\n  TranslationPlaceholderValueType\n>;\n\nconst TranslationsContext = React.createContext<TranslationsContextValueType>({\n  translations: {},\n  language: \"en\",\n});\n\ntype TranslationsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: TranslationsContextValueType;\n};\n\nexport function TranslationsContextProvider(\n  props: TranslationsContextPropsType\n) {\n  return (\n    <TranslationsContext.Provider value={props.value}>\n      {props.children}\n    </TranslationsContext.Provider>\n  );\n}\n\nexport function useTranslations() {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useTranslations must be used within the TranslationsContext`\n    );\n  }\n\n  function translate(\n    key: TranslationsKeyType,\n    variables?: TranslationVariableType\n  ) {\n    const translation = value.translations[key];\n\n    if (!translation) {\n      console.warn(`[@bgord/frontend] missing translation for key: ${key}`);\n      return key;\n    }\n\n    if (!variables) return translation;\n\n    return Object.entries(variables).reduce(\n      (result, [placeholder, value]) =>\n        result.replace(`{{${placeholder}}}`, String(value)),\n      translation\n    );\n  }\n\n  return translate;\n}\n\nexport function useLanguage(): TranslationsContextValueType[\"language\"] {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(`useLanguage must be used within the TranslationsContext`);\n  }\n\n  return value.language;\n}\n\nexport function usePluralize() {\n  const language = useLanguage();\n\n  return (options: Omit<PluralizeOptionsType, \"language\">) =>\n    pluralize({ ...options, language });\n}\n","import { useState, SetStateAction, Dispatch } from \"react\";\n\nexport type UseListActionsType<T> = {\n  clear: VoidFunction;\n  add: (x: T | T[]) => void;\n  remove: (x: T) => void;\n  toggle: (x: T) => void;\n  isAdded: (x: T) => boolean;\n  update: Dispatch<SetStateAction<T[]>>;\n};\n\nexport type UseListReturnType<T> = [T[], UseListActionsType<T>];\n\nexport type UseListConfigType<T> = {\n  defaultItems?: T[];\n  comparisonFn?: (a: T, b: T) => boolean;\n};\n\nexport function useList<T>(\n  config?: UseListConfigType<T>\n): UseListReturnType<T> {\n  const defaultItems = config?.defaultItems ?? [];\n\n  const defaultComparisonFn = (a: T, b: T) => a === b;\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [items, setItems] = useState<T[]>(defaultItems);\n\n  function clear() {\n    setItems([]);\n  }\n\n  function add(payload: T | T[]) {\n    setItems((items) => {\n      if (Array.isArray(payload)) {\n        return [...items, ...payload];\n      }\n      return [...items, payload];\n    });\n  }\n\n  function remove(item: T) {\n    setItems((items) => items.filter((x) => !comparisonFn(x, item)));\n  }\n\n  function isAdded(item: T) {\n    return items.some((x) => comparisonFn(x, item));\n  }\n\n  function toggle(item: T) {\n    isAdded(item) ? remove(item) : add(item);\n  }\n\n  return [items, { clear, add, remove, toggle, isAdded, update: setItems }];\n}\n","import * as Storage from \"ts-storage\";\n\nexport type SafeLocalStorageKeyType = string;\n\nexport class SafeLocalStorage {\n  static get<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    fallbackValue: T\n  ): T {\n    return Storage.get(key, fallbackValue).value;\n  }\n\n  static set<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    value: T\n  ) {\n    Storage.set(key, value);\n  }\n\n  static clear(key: SafeLocalStorageKeyType) {\n    Storage.remove(key);\n  }\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { DurationFormatter } from \"../durations\";\n\nexport type UseVideoSrcType = string;\n\ntype VideoDurationType = number;\ntype VideoCurrentTimeType = number;\ntype VideoVolumeType = number;\n\nexport const VIDEO_DEFAULT_VOLUME: VideoVolumeType = 1;\n\nexport enum UseVideoState {\n  \"initial\" = \"initial\",\n  \"ready\" = \"ready\",\n  \"playing\" = \"playing\",\n  \"paused\" = \"paused\",\n}\n\nexport type UseVideoReturnType = {\n  props: {\n    video: {\n      src: UseVideoSrcType;\n      onTimeUpdate: (event: Event) => void;\n      onLoadedMetadata: (event: Event) => void;\n      onEnded: (event: Event) => void;\n      controls: false;\n    };\n    player: {\n      min: 0;\n      step: 1;\n      max: VideoDurationType;\n      value: VideoDurationType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n    volume: {\n      min: 0;\n      max: 1;\n      step: 0.01;\n      value: VideoVolumeType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n  };\n  actions: {\n    play: VoidFunction;\n    pause: VoidFunction;\n    mute: VoidFunction;\n    unmute: VoidFunction;\n    reset: VoidFunction;\n    seek: (event: Event) => void;\n    changeVolume: (event: Event) => void;\n    triggerFullscreen: VoidFunction;\n  };\n\n  meta: {\n    state: UseVideoState;\n    isInitial: boolean;\n    isReady: boolean;\n    isPlaying: boolean;\n    isPaused: boolean;\n    matches: (states: UseVideoState[]) => boolean;\n    percentage: {\n      raw: number;\n      formatted: string;\n    };\n    currentTime: {\n      raw: VideoCurrentTimeType;\n      formatted: string;\n    };\n    duration: {\n      raw: VideoDurationType;\n      formatted: string;\n    };\n    volume: {\n      value: VideoVolumeType;\n      raw: number;\n      formatted: string;\n    };\n    muted: boolean;\n  };\n};\n\nexport function useVideo(src: UseVideoSrcType): UseVideoReturnType {\n  const [state, setState] = React.useState<UseVideoState>(\n    UseVideoState.initial\n  );\n\n  const ref = React.useRef<HTMLVideoElement | null>(null);\n\n  const duration = useField<VideoDurationType>(\"duration\", 0);\n  const currentTime = useField<VideoCurrentTimeType>(\"currentTime\", 0);\n  const volume = useField<VideoVolumeType>(\"volume\", VIDEO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (!ref.current) return;\n    ref.current.play();\n    setState(UseVideoState.playing);\n  }\n\n  function pause() {\n    if (!ref.current) return;\n    ref.current.pause();\n    setState(UseVideoState.paused);\n  }\n\n  function reset() {\n    if (!ref.current) return;\n    ref.current.currentTime = 0;\n    ref.current.pause();\n    currentTime.set(0);\n    setState(UseVideoState.paused);\n  }\n\n  function mute() {\n    if (!ref.current) return;\n    ref.current.volume = 0;\n    volume.set(0);\n  }\n\n  function unmute() {\n    if (!ref.current) return;\n    ref.current.volume = VIDEO_DEFAULT_VOLUME;\n    volume.set(VIDEO_DEFAULT_VOLUME);\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (!ref.current) return;\n    ref.current.currentTime = target.valueAsNumber;\n    currentTime.set(target.valueAsNumber);\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(UseVideoState.ready);\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLVideoElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(UseVideoState.paused);\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (!ref.current) return;\n    ref.current.volume = target.valueAsNumber;\n    volume.set(target.valueAsNumber);\n  }\n\n  function triggerFullscreen() {\n    if (!ref.current) return;\n    ref.current.requestFullscreen();\n  }\n\n  return {\n    props: {\n      video: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: {\n      play,\n      pause,\n      mute,\n      unmute,\n      reset,\n      seek,\n      changeVolume,\n      triggerFullscreen,\n    },\n    meta: {\n      state,\n      isInitial: state === UseVideoState.initial,\n      isReady: state === UseVideoState.ready,\n      isPlaying: state === UseVideoState.playing,\n      isPaused: state === UseVideoState.paused,\n      matches: (states: UseVideoState[]) =>\n        states.some((given) => given === state),\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import type { TimestampType } from \"@bgord/node/dist/schema\";\nimport type { Falsy } from \"@bgord/node\";\n\nexport type RateLimiterOptionsType = {\n  limitMs: TimestampType;\n};\n\nexport type RateLimiterResultSuccessType = { allowed: true };\n\nexport type RateLimiterResultErrorType = {\n  allowed: false;\n  remainingMs: TimestampType;\n};\n\nexport type RateLimiterResultType =\n  | RateLimiterResultSuccessType\n  | RateLimiterResultErrorType;\n\nexport class RateLimiter {\n  private lastInvocationTimestamp: Falsy<TimestampType> = null;\n\n  private options: RateLimiterOptionsType;\n\n  constructor(options: RateLimiterOptionsType) {\n    this.options = options;\n  }\n\n  verify(currentTimestamp: TimestampType): RateLimiterResultType {\n    if (!this.lastInvocationTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    const nextAllowedTimestamp =\n      this.lastInvocationTimestamp + this.options.limitMs;\n\n    if (nextAllowedTimestamp <= currentTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    return {\n      allowed: false,\n      remainingMs: nextAllowedTimestamp - currentTimestamp,\n    };\n  }\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useScrollLock(condition = true): void {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overflows\n    const originalBodyOverflow = window.getComputedStyle(body).overflow;\n    const originalHtmlOverflow = window.getComputedStyle(html).overflow;\n\n    // Prevent scrolling on mount\n    body.style.overflow = \"hidden\";\n    html.style.overflow = \"hidden\";\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      body.style.overflow = originalBodyOverflow;\n      html.style.overflow = originalHtmlOverflow;\n    };\n  }, [condition]);\n}\n","type ExecFunctionListType = Function[];\n\nexport function exec(list: ExecFunctionListType) {\n  return function () {\n    list.forEach((item) => item());\n  };\n}\n","import React from \"react\";\n\nimport { useWindowDimensions } from \"../hooks/use-window-dimensions\";\nimport { useToggle } from \"../hooks/use-toggle\";\nimport { useField } from \"../hooks/use-field\";\nimport { exec } from \"../exec\";\n\nfunction Dimensions(props: JSX.IntrinsicElements[\"div\"]) {\n  const dimensions = useWindowDimensions();\n\n  return (\n    <div data-fs=\"12\" {...props}>\n      {dimensions.width} x {dimensions.height}\n    </div>\n  );\n}\n\nfunction Truncates() {\n  const enabled = useToggle();\n  const length = useField(\"length\", 128);\n\n  const [cache, setCache] = React.useState(new Map());\n\n  const handleTruncateClick = () => {\n    const elements = document.querySelectorAll('[data-transform=\"truncate\"]');\n\n    const updatedCache = new Map(cache);\n\n    elements.forEach((element) => {\n      const originalText = element.textContent;\n\n      if (!updatedCache.has(element)) {\n        updatedCache.set(element, originalText);\n        element.textContent = \"x\".repeat(length.value);\n      } else {\n        element.textContent = updatedCache.get(element);\n        updatedCache.delete(element);\n      }\n    });\n\n    setCache(updatedCache);\n  };\n\n  return (\n    <div data-display=\"flex\" data-cross=\"center\" data-gap=\"6\">\n      <label className=\"c-label\" {...length.label.props}>\n        Length\n      </label>\n\n      <input\n        className=\"c-input\"\n        type=\"number\"\n        value={length.value}\n        onChange={(event) => length.set(event.currentTarget.valueAsNumber)}\n        {...length.input.props}\n      />\n      <button\n        className=\"c-button\"\n        data-variant=\"bare\"\n        type=\"button\"\n        onClick={exec([() => handleTruncateClick(), enabled.toggle])}\n      >\n        {enabled.on ? \"Hide truncates\" : \"Expand truncates\"}\n      </button>\n    </div>\n  );\n}\n\nexport const DevTools = { Dimensions, Truncates };\n","import { noop } from \"./noop\";\n\nexport type CopyToClipboardTextType = string;\ntype OnCopyToClipboardFailureType = (error?: unknown) => void;\ntype OnCopyToClipboardSuccessType = VoidFunction;\n\nconst defaultOnCopyToClipboardFailure: OnCopyToClipboardFailureType = (error) =>\n  console.warn(\"Copying to clipboard not supported\");\n\nexport type CopyToClipboardOptionsType = {\n  text: string;\n  onFailure?: OnCopyToClipboardFailureType;\n  onSuccess?: OnCopyToClipboardSuccessType;\n};\n\nexport async function copyToClipboard(options: CopyToClipboardOptionsType) {\n  const onFailure = options.onFailure ?? defaultOnCopyToClipboardFailure;\n  const onSuccess = options.onSuccess ?? noop;\n\n  if (!navigator.clipboard) onFailure();\n\n  try {\n    await navigator.clipboard.writeText(options.text);\n    onSuccess();\n  } catch (error) {\n    onFailure(error);\n  }\n}\n","import type { HourType } from \"@bgord/node/dist/schema\";\n\nimport * as Time from \"./time\";\n\nexport type DateType = Date | number | null | undefined;\n\nexport class DateFormatter {\n  static datetime(date: DateType, defaultValue = \"N/A\"): string {\n    if (!date) return defaultValue;\n\n    return new Date(date).toLocaleString();\n  }\n\n  static monthDay(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const days = DateFormatter._padDatePart(date.getDate());\n    const months = DateFormatter._padDatePart(date.getMonth() + 1);\n\n    return `${months}/${days}`;\n  }\n\n  static form(date: Date | null): string {\n    if (!date) return DateFormatter.form(new Date());\n\n    const year = DateFormatter._padDatePart(date.getFullYear());\n    const month = DateFormatter._padDatePart(date.getMonth() + 1);\n    const day = DateFormatter._padDatePart(date.getDate());\n\n    return `${year}-${month}-${day}`;\n  }\n\n  static clockUTC(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getUTCHours());\n    const minutes = DateFormatter._padDatePart(date.getUTCMinutes());\n    const seconds = DateFormatter._padDatePart(date.getUTCSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static clockLocal(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static countdown(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static formDatetimeLocal(timestamp: number) {\n    const localTimestamp =\n      timestamp - Time.Minutes(new Date().getTimezoneOffset()).ms;\n\n    return new Date(localTimestamp).toISOString().slice(0, 16);\n  }\n\n  static _padDatePart(value: number) {\n    return String(value).padStart(2, \"0\");\n  }\n}\n\nexport class HourFormatter {\n  static convertUtcToLocal(utcHour: HourType) {\n    const timeZoneOffsetInMins = new Date().getTimezoneOffset();\n\n    const utcHourInMins = Time.Hours(utcHour).minutes;\n\n    const localHourInMins = utcHourInMins - timeZoneOffsetInMins;\n    const localHour = (localHourInMins / 60) % 24;\n    const formattedLocalHour = `${String(localHour).padStart(2, \"0\")}:00`;\n\n    return { value: localHour, label: formattedLocalHour };\n  }\n}\n","import type { Schema } from \"@bgord/node\";\nimport React from \"react\";\n\nexport type FeatureFlagNameType = string;\n\nexport type FeatureFlagsContextValueType = {\n  flags: Record<FeatureFlagNameType, Schema.FeatureFlagType>;\n};\n\ntype FeatureFlagsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: FeatureFlagsContextValueType[\"flags\"];\n};\n\nconst FeatureFlagsContext = React.createContext<\n  FeatureFlagsContextValueType[\"flags\"]\n>({});\n\nexport function FeatureFlagsContextProvider(\n  props: FeatureFlagsContextPropsType\n) {\n  return (\n    <FeatureFlagsContext.Provider value={props.value}>\n      {props.children}\n    </FeatureFlagsContext.Provider>\n  );\n}\n\nexport function useFeatureFlags() {\n  const value = React.useContext(FeatureFlagsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useFeatureFlags must be used within the FeatureFlagsContext`\n    );\n  }\n\n  return value;\n}\n\nexport function useFeatureFlag(name: FeatureFlagNameType): boolean {\n  const value = React.useContext(FeatureFlagsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useFeatureFlag must be used within the FeatureFlagsContext`\n    );\n  }\n\n  return value[name] === \"yes\";\n}\n","export type FilterType = Record<string, unknown> | undefined;\n\nexport class FilterUrl {\n  value: string;\n\n  constructor(url: string, filters?: FilterType) {\n    const nonEmptyFilters = this.getNonEmptyFilters(filters);\n    const query = new URLSearchParams(nonEmptyFilters);\n\n    if (query.toString() === \"\") {\n      this.value = url;\n\n      return;\n    }\n\n    this.value = `${url}?${query.toString()}`;\n  }\n\n  private getNonEmptyFilters(filters: FilterType) {\n    if (filters === undefined) return {};\n\n    return Object.fromEntries(\n      Object.entries(filters).filter(([_key, value]) => value !== undefined)\n    ) as Record<string, string>;\n  }\n}\n","import type { UseInfiniteQueryResult } from \"react-query\";\nimport type { Paged } from \"@bgord/node\";\n\nexport class Pagination {\n  static empty = { result: [], meta: { exhausted: true } };\n\n  static infinite<T>(infinite: UseInfiniteQueryResult<Paged<T>>): T[] {\n    return (\n      infinite.data?.pages\n        ?.flat()\n        .map((data) => data.result)\n        .flat() ?? []\n    );\n  }\n}\n\nexport type { Paged, PageType } from \"@bgord/node\";\n\nexport type PagedMetaType = Paged<unknown>[\"meta\"];\n","export type RhythmBaseType = number;\nexport type RhythmTimesType = number;\n\nconst DEFAULT_BASE_PX = 12;\n\nexport function Rhythm(base: RhythmBaseType = DEFAULT_BASE_PX) {\n  return {\n    times(times: RhythmTimesType) {\n      const result = base * times;\n\n      const dimensions = {\n        height: { height: px(result) },\n        minHeight: { minHeight: px(result) },\n        maxHeight: { maxHeight: px(result) },\n        width: { width: px(result) },\n        minWidth: { minWidth: px(result) },\n        maxWidth: { maxWidth: px(result) },\n        square: { height: px(result), width: px(result) },\n      };\n\n      const style = {\n        height: { style: { height: px(result) } },\n        minHeight: { style: { minHeight: px(result) } },\n        maxHeight: { style: { maxHeight: px(result) } },\n        width: { style: { width: px(result) } },\n        minWidth: { style: { minWidth: px(result) } },\n        maxWidth: { style: { maxWidth: px(result) } },\n        square: { style: { height: px(result), width: px(result) } },\n      };\n\n      return { px: px(result), raw: result, style, ...dimensions };\n    },\n  };\n}\n\nfunction px(number: number) {\n  return `${number}px`;\n}\n","export class ThousandsSeparator {\n  private static DEFAULT_SEPARATOR = ' ';\n\n  static format(\n    value: number,\n    separator = ThousandsSeparator.DEFAULT_SEPARATOR\n  ): string {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\n  }\n}\n","import React from \"react\";\nimport { useList } from \"./hooks/use-list\";\n\nexport type ToastsConfigType = {\n  timeout?: number;\n};\n\nexport type BaseToastType = {\n  id: string;\n  message: string;\n};\n\ntype ToastsContextDataType<ToastType extends BaseToastType = BaseToastType> = [\n  ToastType[],\n  {\n    add: (toast: Omit<ToastType, \"id\">) => void;\n    remove: (toast: ToastType) => void;\n    clear: VoidFunction;\n  }\n];\n\nconst ToastsContext = React.createContext<ToastsContextDataType | undefined>(\n  undefined\n);\n\nexport function ToastsContextProvider(\n  props: { children: JSX.Element | JSX.Element[] } & ToastsConfigType\n) {\n  function useToastsImplementation(): ToastsContextDataType {\n    const timeout = props?.timeout ?? 5000;\n\n    const [toasts, actions] = useList<BaseToastType>({\n      comparisonFn: (a, b) => a.id === b.id,\n    });\n\n    function add(payload: Omit<BaseToastType, \"id\">) {\n      const id = String(Date.now());\n      const toast = { ...payload, id };\n\n      actions.add(toast);\n      setTimeout(() => actions.remove(toast), timeout);\n    }\n\n    return [\n      [...toasts].reverse(),\n      { add, remove: actions.remove, clear: actions.clear },\n    ];\n  }\n\n  const [toasts, actions] = useToastsImplementation();\n\n  return (\n    <ToastsContext.Provider value={[toasts, actions]}>\n      {props.children}\n    </ToastsContext.Provider>\n  );\n}\n\nexport function useToastsContext<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const context = React.useContext<ToastsContextDataType<ToastType>>(\n    ToastsContext as unknown as React.Context<ToastsContextDataType<ToastType>>\n  );\n\n  if (context === undefined) {\n    throw new Error(`useToasts must be used within the ToastsContextProvider`);\n  }\n\n  return context;\n}\n\nexport function useToastTrigger<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const [, actions] = useToastsContext<ToastType>();\n\n  return actions.add;\n}\n","import { ServerError } from \"./server-error\";\n\nexport const API: typeof fetch = (input, init) =>\n  fetch(input, {\n    mode: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n\n      \"time-zone-offset\": new Date().getTimezoneOffset().toString(),\n    },\n    redirect: \"follow\",\n    ...init,\n  })\n    .then(ServerError.extract)\n    .catch(ServerError.handle);\n","import React from \"react\";\n\nimport * as hooks from \"../hooks\";\n\nexport type DialogPropsType = hooks.UseToggleReturnType &\n  JSX.IntrinsicElements[\"dialog\"];\n\nexport function Dialog(props: DialogPropsType) {\n  const { disable, enable, on, off, toggle, ...rest } = props;\n  const ref = React.useRef<HTMLDialogElement>(null);\n\n  React.useEffect(() => {\n    if (props.on) {\n      // @ts-ignore\n      ref.current?.showModal();\n    } else {\n      // @ts-ignore\n      ref.current?.close();\n    }\n  }, [props.on]);\n\n  hooks.useKeyboardShortcuts({ Escape: disable });\n  hooks.useAutofocus({ ref, condition: props.on });\n  hooks.useScrollLock(props.on);\n  hooks.useClickOutside(ref, disable);\n\n  return (\n    <dialog\n      ref={ref}\n      tabIndex={0}\n      data-display={props.on ? \"flex\" : \"none\"}\n      data-direction=\"column\"\n      data-mx=\"auto\"\n      data-p=\"24\"\n      data-position=\"absolute\"\n      data-z=\"2\"\n      data-bg=\"white\"\n      data-br=\"4\"\n      data-bc=\"gray-300\"\n      data-bw=\"1\"\n      data-backdrop=\"black\"\n      {...rest}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { useIsOnline } from \"../hooks\";\n\nexport function OfflineIndicator(props: { children: React.ReactChild }) {\n  const isOnline = useIsOnline();\n\n  if (isOnline) return null;\n\n  return <>{props.children}</>;\n}\n","import React from \"react\";\nimport type { PolymorphicPropsWithoutRef } from \"react-polymorphic-types\";\n\nconst OutboundLinkDefaultElement = \"a\";\n\nexport function OutboundLink<\n  T extends React.ElementType = typeof OutboundLinkDefaultElement\n>(props: PolymorphicPropsWithoutRef<{}, T>) {\n  const { as, ...rest } = props;\n\n  const Element = as || OutboundLinkDefaultElement;\n\n  return <Element target=\"_blank\" rel=\"noreferer noopener\" {...rest} />;\n}\n","import { getSafeWindow } from \"./safe-window\";\n\nexport function isClient() {\n  return !getSafeWindow();\n}\n","import { useWindowDimensions } from \"./use-window-dimensions\";\n\nexport type BreakpointType = number;\n\nexport type UseBreakpointReturnType = boolean;\n\nexport function useBreakpoint(\n  breakpoint: BreakpointType\n): UseBreakpointReturnType {\n  const dimensions = useWindowDimensions();\n  const width = dimensions?.width ?? 0;\n\n  return width <= breakpoint;\n}\n","import { useState } from \"react\";\n\nexport type UseClientSearchQueryType = string;\n\nexport type UseClientSearchReturnType = {\n  query: UseClientSearchQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: (value: string) => boolean;\n  changed: boolean;\n  unchanged: boolean;\n};\n\nexport function useClientSearch(): UseClientSearchReturnType {\n  const emptyQuery: UseClientSearchQueryType = \"\";\n\n  const [query, setValue] = useState<UseClientSearchQueryType>(emptyQuery);\n\n  function clear() {\n    setValue(emptyQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setValue(event.currentTarget.value);\n  }\n\n  function filterFn(value: string) {\n    if (query === emptyQuery) return true;\n\n    return value?.toLowerCase().includes(query.toLowerCase());\n  }\n\n  return {\n    query,\n    clear,\n    onChange,\n    filterFn,\n    changed: query !== emptyQuery,\n    unchanged: query === emptyQuery,\n  };\n}\n","import React from \"react\";\n\ntype UseDebounceConfigType<T> = { value: T; delayMs: number };\n\nexport function useDebounce<T>(config: UseDebounceConfigType<T>): T {\n  const [debouncedValue, setDebouncedValue] = React.useState<T>(config.value);\n\n  React.useEffect(() => {\n    const timer = setTimeout(\n      () => setDebouncedValue(config.value),\n      config.delayMs\n    );\n\n    return () => clearTimeout(timer);\n  }, [config.value, config.delayMs]);\n\n  return debouncedValue;\n}\n","import { useEffect } from \"react\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport {\n  useToggle,\n  UseToggleConfigType,\n  UseToggleReturnType,\n} from \"./use-toggle\";\n\nexport function useDesignMode(\n  config?: UseToggleConfigType\n): UseToggleReturnType {\n  const designMode = useToggle(config);\n  const safeWindow = getSafeWindow();\n\n  useEffect(() => {\n    if (!safeWindow) return;\n\n    safeWindow.document.designMode = designMode.on ? \"on\" : \"off\";\n  }, [designMode.on]);\n\n  return designMode;\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useDisablePullToRefresh(condition = true): void {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overscroll behaviors\n    const originalHtmlOverscrollBehavior =\n      window.getComputedStyle(html).overscrollBehavior;\n    const originalBodyOverflowBehavior =\n      window.getComputedStyle(body).overscrollBehavior;\n\n    // Disable pull to refresh\n    body.style.overscrollBehavior = \"none\";\n    html.style.overscrollBehavior = \"none\";\n\n    // Enable pull to refresh when component unmounts\n    return () => {\n      body.style.overscrollBehavior = originalBodyOverflowBehavior;\n      html.style.overscrollBehavior = originalHtmlOverscrollBehavior;\n    };\n  }, [condition]);\n}\n","import React from \"react\";\n\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n","import React from \"react\";\n\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type UseHoverReturnType = {\n  attach: { ref: React.RefObject<any> };\n  isHovering: UseToggleReturnType[\"on\"];\n};\n\nexport function useHover(): UseHoverReturnType {\n  const ref = React.useRef<any>(null);\n  const isHovering = useToggle(false);\n\n  const handleMouseEnter = isHovering.enable;\n  const handleMouseLeave = isHovering.disable;\n\n  React.useEffect(() => {\n    const node = ref.current;\n\n    if (node) {\n      node.addEventListener(\"mouseenter\", handleMouseEnter);\n      node.addEventListener(\"mouseleave\", handleMouseLeave);\n    }\n\n    return () => {\n      if (node) {\n        node.removeEventListener(\"mouseenter\", handleMouseEnter);\n        node.removeEventListener(\"mouseleave\", handleMouseLeave);\n      }\n    };\n  }, []);\n\n  return { attach: { ref }, isHovering: isHovering.on };\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { UseFileReturnType, UseFileState } from \"./use-file\";\nimport {\n  getImageResolution,\n  ImageResolutionType,\n  emptyImageResolution,\n} from \"../get-image-resolution\";\n\nexport function useImageFileResolution(\n  file: UseFileReturnType\n): ImageResolutionType {\n  const resolution = useField<ImageResolutionType>(\n    \"resolution\",\n    emptyImageResolution\n  );\n\n  React.useEffect(() => {\n    async function execute() {\n      if (file.state === UseFileState.selected) {\n        try {\n          const result = await getImageResolution(file.preview);\n\n          return resolution.set(result);\n        } catch (error) {\n          return resolution.clear();\n        }\n      }\n\n      if (\n        [UseFileState.error, UseFileState.idle].includes(file.state) &&\n        resolution.value.width !== null &&\n        resolution.value.height !== null\n      ) {\n        resolution.clear();\n      }\n    }\n\n    execute();\n  }, [file.state, file.data?.name]);\n\n  return resolution.value;\n}\n","import type { LanguageType } from \"@bgord/node/dist/schema\";\nimport Cookies from \"js-cookie\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport { useLanguage } from \"../translations\";\nimport { useFilter, UseFilterReturnType } from \"./use-filter\";\n\nexport function useLanguageSelector(\n  supportedLanguages: Record<LanguageType, LanguageType>\n): UseFilterReturnType<LanguageType> {\n  const language = useLanguage();\n\n  return useFilter({\n    enum: supportedLanguages,\n    currentQuery: language,\n    name: \"language\",\n    onUpdate: (current, previous) => {\n      const safeWindow = getSafeWindow();\n\n      if (!safeWindow) return;\n\n      if (!current || !previous || previous === current) return;\n\n      Cookies.set(\"accept-language\", current);\n      safeWindow.document.location.reload();\n    },\n  });\n}\n","import React from \"react\";\n\nexport type UseLeavingPromptConditionType = boolean;\n\nexport function useLeavingPrompt(\n  condition: UseLeavingPromptConditionType = false\n): void {\n  React.useEffect(() => {\n    if (!condition) return;\n\n    function handler(e: BeforeUnloadEvent) {\n      e.preventDefault();\n    }\n\n    window.addEventListener(\"beforeunload\", handler);\n\n    return () => window.removeEventListener(\"beforeunload\", handler);\n  }, [condition]);\n}\n","import { useField } from \"./use-field\";\nimport { PagedMetaType, PageType } from \"../pagination\";\n\ntype UsePaginationControlType = {\n  active: boolean;\n  disabled: boolean;\n  exists: boolean;\n  go: VoidFunction;\n  value: PageType | undefined;\n};\n\ntype UsePaginationReturnType = {\n  current: PageType;\n  last: PageType | undefined;\n\n  controls: {\n    firstPage: UsePaginationControlType;\n    previousPage: UsePaginationControlType;\n    nextPage: UsePaginationControlType;\n    lastPage: UsePaginationControlType;\n  };\n\n  update: (updated: PagedMetaType | null) => void;\n};\n\nexport function usePagination(): UsePaginationReturnType {\n  const meta = useField<PagedMetaType | null>(\"meta\", null);\n\n  const firstPage = 1;\n  const previousPage = meta.value?.previousPage;\n  const nextPage = meta.value?.nextPage;\n  const lastPage = meta.value?.lastPage;\n\n  const page = useField(\"page\", firstPage);\n\n  return {\n    current: page.value,\n    last: lastPage,\n\n    controls: {\n      firstPage: {\n        active: !previousPage,\n        disabled: false,\n        exists: true,\n        go: () => page.set(firstPage),\n        value: firstPage,\n      },\n\n      previousPage: {\n        active: false,\n        disabled: !previousPage,\n        exists: Boolean(previousPage),\n        go: () => page.set(previousPage ?? page.value),\n        value: previousPage,\n      },\n\n      nextPage: {\n        active: false,\n        disabled: !nextPage,\n        exists: Boolean(nextPage),\n        go: () => page.set(nextPage ?? page.value),\n        value: nextPage,\n      },\n\n      lastPage: {\n        active: page.value === lastPage,\n        disabled: !nextPage,\n        exists: true,\n        go: () => page.set(lastPage ?? page.value),\n        value: lastPage,\n      },\n    },\n\n    update: (updated) => meta.set(updated),\n  };\n}\n","import * as React from \"react\";\n\nimport {\n  useToggle,\n  UseToggleReturnType,\n  UseToggleValueType,\n} from \"./use-toggle\";\nimport {\n  SafeLocalStorage,\n  SafeLocalStorageKeyType,\n} from \"../safe-local-storage\";\n\nexport type UsePersistentToggleReturnType = UseToggleReturnType & {\n  clear: VoidFunction;\n};\n\nexport function usePersistentToggle(\n  key: SafeLocalStorageKeyType,\n  defaultValue: UseToggleValueType = false\n): UsePersistentToggleReturnType {\n  const storedValue = SafeLocalStorage.get<UseToggleValueType>(\n    key,\n    defaultValue\n  );\n\n  const toggle = useToggle(storedValue);\n\n  React.useEffect(() => SafeLocalStorage.set(key, toggle.on), [key, toggle.on]);\n\n  return { ...toggle, clear: () => SafeLocalStorage.clear(key) };\n}\n","import { useRef } from \"react\";\n\nimport {\n  RateLimiterOptionsType,\n  RateLimiterResultErrorType,\n  RateLimiter,\n} from \"../rate-limiter\";\n\nexport type UseRateLimiterActionType<T> = (...args: T[]) => void;\n\nexport type UseRateLimiterOptionsType<T> = RateLimiterOptionsType & {\n  action: UseRateLimiterActionType<T>;\n  fallback?: (remainingMs: RateLimiterResultErrorType[\"remainingMs\"]) => void;\n};\n\nexport type UseRateLimiterReturnType<T> = UseRateLimiterActionType<T>;\n\nexport function useRateLimiter<T>(\n  options: UseRateLimiterOptionsType<T>\n): UseRateLimiterReturnType<T> {\n  const rateLimiter = useRef<RateLimiter>(new RateLimiter(options));\n\n  return function executor(...args: T[]) {\n    const currentTimestamp = Date.now();\n    const result = rateLimiter.current.verify(currentTimestamp);\n\n    if (result.allowed) {\n      return options.action(...args);\n    }\n\n    return options.fallback?.(result.remainingMs);\n  };\n}\n","import React from \"react\";\n\ntype ReorderingBaseItemType = { id: string };\ntype ReorderingIndexType = number;\ntype ReorderingCorrelationIdType = string;\n\nexport type ReorderingTransferType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType\n> = {\n  correlationId: ReorderingCorrelationIdType;\n  id: T[\"id\"];\n  item: T;\n  to: ReorderingIndexType;\n};\n\nexport type UseReorderingReturnType<T> = {\n  items: T[];\n  props: {\n    item: (index: ReorderingIndexType) => {\n      onDragOver: (event: React.DragEvent<HTMLElement>) => void;\n    };\n    handle: (index: ReorderingIndexType) => {\n      onDragStart: (event: React.DragEvent<HTMLElement>) => void;\n      onDragEnd: (event: React.DragEvent<HTMLElement>) => void;\n      draggable: true;\n    };\n  };\n};\n\nexport function useReordering<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType\n>(\n  correlationId: ReorderingCorrelationIdType,\n  initialItems: T[],\n  callback: (transfer: ReorderingTransferType<T>) => void\n): UseReorderingReturnType<T> {\n  const [items, setItems] = React.useState<T[]>(initialItems);\n  React.useEffect(() => setItems(initialItems), [JSON.stringify(initialItems)]);\n\n  const draggedItem = React.useRef<T | null>(null);\n  const [toIndex, setToIndex] = React.useState<ReorderingIndexType | null>(\n    null\n  );\n\n  function onDragStartFactory(index: ReorderingIndexType) {\n    return function onDragStart(event: React.DragEvent<HTMLElement>) {\n      draggedItem.current = items[index] ?? null;\n\n      if (!event?.dataTransfer || event.currentTarget.parentNode) return;\n\n      event.dataTransfer.effectAllowed = \"move\";\n      event.dataTransfer.setData(\n        \"text/html\",\n        event.currentTarget.parentNode as unknown as string\n      );\n      event.dataTransfer.setDragImage(\n        event.currentTarget.parentNode as unknown as Element,\n        20,\n        20\n      );\n    };\n  }\n\n  function onDragOverFactory(index: ReorderingIndexType) {\n    return function onDragOver(event: React.DragEvent<HTMLElement>) {\n      event.preventDefault();\n\n      const draggedOverItem = items[index];\n      setToIndex(index);\n\n      // if the item is dragged over itself, ignore\n      if (draggedItem.current === draggedOverItem || !draggedItem.current) {\n        return;\n      }\n\n      // filter out the currently dragged item\n      let updated = items.filter((item) => item !== draggedItem.current);\n\n      // add the dragged item after the dragged over item\n      updated.splice(index, 0, draggedItem.current);\n\n      setItems(updated);\n    };\n  }\n\n  function onDragEndFactory(index: ReorderingIndexType) {\n    return function onDragEnd(_event: React.DragEvent<HTMLElement>) {\n      draggedItem.current = null;\n      setToIndex(null);\n      callback({\n        correlationId,\n        id: items[index]?.id as T[\"id\"],\n        item: items[index] as T,\n        to: toIndex as ReorderingIndexType,\n      });\n    };\n  }\n\n  return {\n    items,\n\n    props: {\n      item: (index: ReorderingIndexType) => ({\n        onDragOver: onDragOverFactory(index),\n      }),\n\n      handle: (index: ReorderingIndexType) => ({\n        onDragStart: onDragStartFactory(index),\n        onDragEnd: onDragEndFactory(index),\n        draggable: true,\n      }),\n    },\n  };\n}\n","import React from \"react\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type ScrollPositionType = number;\n\nexport type UseScrollReturnType = {\n  actions: { goToTop: VoidFunction };\n  position: {\n    value: ScrollPositionType;\n    isInitial: boolean;\n    hasChanged: boolean;\n  };\n  visible: UseToggleReturnType[\"on\"];\n  hidden: UseToggleReturnType[\"off\"];\n};\n\nexport function useScroll(): UseScrollReturnType {\n  const safeWindow = getSafeWindow();\n\n  // Scroll position always set at the top of the page\n  const defaultScrollPosition = 0;\n  const [scrollPosition, setScrollPosition] =\n    React.useState<ScrollPositionType>(defaultScrollPosition);\n\n  // Assuming scrollbar is hidden by default\n  const scrollbarVisibility = useToggle(false);\n\n  function goToTop() {\n    if (!safeWindow) return;\n    safeWindow.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  }\n\n  React.useLayoutEffect(() => {\n    function measure() {\n      if (!safeWindow) return;\n\n      setScrollPosition(safeWindow?.scrollY);\n\n      // Checking if the viewport (clientHeight) can fully contain\n      // full content height (scrollHeight)\n      if (\n        safeWindow.document.body.clientHeight <\n        safeWindow.document.body.scrollHeight\n      ) {\n        scrollbarVisibility.enable();\n      } else {\n        scrollbarVisibility.disable();\n      }\n    }\n\n    safeWindow?.addEventListener(\"scroll\", measure);\n\n    return () => safeWindow?.removeEventListener(\"scroll\", measure);\n  }, []);\n\n  return {\n    actions: { goToTop },\n    position: {\n      value: scrollPosition,\n      isInitial: scrollPosition === 0,\n      hasChanged: scrollPosition > 0,\n    },\n    visible: scrollbarVisibility.on,\n    hidden: scrollbarVisibility.off,\n  };\n}\n","export type SoundSourceType = string;\n\nexport type UseSoundReturnType = { play: VoidFunction };\n\nexport function useSound(src: SoundSourceType): UseSoundReturnType {\n  const audio = new Audio(src);\n\n  return { play: audio.play.bind(audio) };\n}\n","import {\n  useFilter,\n  UseFilterConfigType,\n  UseFilterReturnType,\n} from \"./use-filter\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type UseUrlFilterConfigType<T> = UseFilterConfigType<T>;\n\nexport function useUrlFilter<T>(\n  config: UseUrlFilterConfigType<T>\n): UseFilterReturnType<T> {\n  const safeWindow = getSafeWindow();\n\n  const currentQuery =\n    new URLSearchParams(safeWindow?.location.search).get(config.name) ??\n    undefined;\n\n  return useFilter({\n    onUpdate: (current, previous) => {\n      if (!safeWindow) return;\n\n      const url = new URL(safeWindow.location.toString());\n      const params = new URLSearchParams(url.search);\n\n      if (current === undefined) {\n        params.delete(config.name);\n      } else {\n        params.set(config.name, current);\n      }\n\n      if (current === previous) return;\n\n      if (current !== previous) {\n        url.search = params.toString();\n        history.pushState({}, \"\", url.toString());\n      }\n    },\n    ...config,\n    defaultQuery: config.defaultQuery,\n    currentQuery: currentQuery,\n  });\n}\n"],"names":["value","defaultValue","useRef","useEffect","previousValue","current","AnimaState","ServerError","UseAudioState","config","message","_known","this","isServerError","Object","hasOwnProperty","extract","response","ok","json","error","handle","payload","format","duration","Math","floor","String","minutes","padStart","seconds","name","useState","evaluatedDefaultValue","setValue","set","clear","label","props","htmlFor","input","id","changed","unchanged","React","condition","ref","_config$ref$current","focus","width","undefined","height","windowSize","setWindowSize","getSafeWindow","safeWindow","addEventListener","handleResize","removeEventListener","innerWidth","innerHeight","onClickOutside","exclude","document","handleClickOutside","event","_ref$current","contains","target","some","node","_node$current","hours","ms","Time","UseExpandableListState","UseFileState","Days","Hours","Minutes","Seconds","now","on","setIsOn","off","enable","disable","toggle","v","defaultQuery","currentQuery","filterFn","query","keys","onUpdate","noop","setQuery","usePreviousValue","previousQuery","onChange","currentTarget","Boolean","newQuery","isNewQueryInEnum","options","getImageResolution","KeyNameEnum","path","emptyImageResolution","createElement","resolve","reject","img","onload","onerror","src","promise","useToggle","onLine","navigator","onlineStatus","window","handleOnline","handleOffline","threshold","root","rootMargin","IntersectionObserverEntry","prototype","a","b","tinykeys","language","PluralizationSupportedLanguages","en","plural","singular","pl","genitive","console","warn","createContext","translations","useContext","TranslationsContext","defaultItems","comparisonFn","items","setItems","Array","isArray","item","filter","x","add","remove","isAdded","update","SafeLocalStorage","UseVideoState","get","key","fallbackValue","Storage","lastInvocationTimestamp","verify","currentTimestamp","allowed","limitMs","nextAllowedTimestamp","remainingMs","useLayoutEffect","querySelector","body","getComputedStyle","overflow","html","style","originalBodyOverflow","originalHtmlOverflow","list","forEach","DevTools","Dimensions","useWindowDimensions","dimensions","Truncates","useField","cache","setCache","className","length","type","valueAsNumber","onClick","exec","querySelectorAll","elements","element","textContent","updatedCache","has","originalText","repeat","enabled","datetime","date","toLocaleString","monthDay","timestamp","DateFormatter","_padDatePart","getDate","getMonth","days","form","getFullYear","clockUTC","getUTCHours","getUTCMinutes","getUTCSeconds","clockLocal","getHours","getMinutes","getSeconds","countdown","formDatetimeLocal","getTimezoneOffset","localTimestamp","toISOString","slice","convertUtcToLocal","utcHour","timeZoneOffsetInMins","localHour","url","filters","getNonEmptyFilters","nonEmptyFilters","toString","fromEntries","entries","infinite","data","_infinite$data","pages","_infinite$data$pages","flat","map","result","number","Pagination","empty","meta","exhausted","ThousandsSeparator","separator","DEFAULT_SEPARATOR","replace","ToastsContext","context","init","mode","headers","redirect","then","visible","isInitial","appeared","appearing","hidden","state","setState","setTimeout","previousState","hiding","cloneElement","children","effect","rest","setIsInitial","child","showModal","_ref$current2","close","hooks","Escape","tabIndex","FeatureFlagsContext","Provider","useIsOnline","as","rel","base","times","px","minHeight","maxHeight","minWidth","maxWidth","square","raw","actions","timeout","useList","reverse","Date","toast","onFailure","defaultOnCopyToClipboardFailure","onSuccess","clipboard","writeText","text","direction","officialList","setOfficialList","added","push","every","deleted","find","y","updated","count","initial","volume","round","currentTime","audio","onTimeUpdate","onLoadedMetadata","ready","onEnded","paused","controls","player","min","step","max","onInput","seek","percentage","changeVolume","play","playing","pause","mute","unmute","reset","isReady","isPlaying","isPaused","matches","states","given","formatted","DurationFormatter","muted","breakpoint","toLowerCase","includes","getCurrentTimestamp","setTimestamp","setInterval","timer","debouncedValue","setDebouncedValue","delayMs","designMode","overscrollBehavior","originalBodyOverflowBehavior","originalHtmlOverscrollBehavior","title","contracted","expanded","getState","displayShowMore","displayShowLess","areThereExcessiveElements","showMore","showLess","numberOfExcessiveElements","_element","index","maxSize","Infinity","setKey","idle","file","setFile","files","size","selected","useMemo","URL","createObjectURL","isIdle","isSelected","isError","selectFile","clearFile","multiple","preview","isHovering","handleMouseEnter","handleMouseLeave","attach","resolution","execute","_file$data","defaultUseIsVisibleConfig","isVisible","setVisible","isIntersectionObserverSupported","entry","_entry$","isIntersecting","observer","observe","unobserve","defaultComparisonFn","defaultItem","setItem","newer","isDefault","exists","compare","executor","supportedLanguages","enum","useLanguage","previous","Cookies","location","reload","handler","e","preventDefault","_meta$value","previousPage","_meta$value2","nextPage","_meta$value3","lastPage","page","last","firstPage","active","disabled","go","rateLimiter","action","fallback","correlationId","initialItems","callback","JSON","stringify","toIndex","setToIndex","draggedItem","dataTransfer","parentNode","effectAllowed","setData","setDragImage","draggedOverItem","splice","_event","_items$index2","to","onDragOver","onDragOverFactory","onDragStart","onDragStartFactory","onDragEnd","onDragEndFactory","draggable","scrollPosition","setScrollPosition","scrollY","clientHeight","scrollHeight","scrollbarVisibility","measure","goToTop","scrollTo","top","left","behavior","position","hasChanged","bind","useToastsContext","variables","translation","reduce","search","params","history","pushState","video","triggerFullscreen","requestFullscreen"],"mappings":"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"}