{"version":3,"file":"bgord-frontend.cjs","sources":["../hooks/use-previous-value.ts","../anima.tsx","../durations.ts","../hooks/use-field.ts","../hooks/use-autofocus.ts","../safe-window.ts","../hooks/use-window-dimensions.ts","../time.ts","../hooks/use-expandable-list.ts","../hooks/use-file.ts","../hooks/use-current-timestamp.ts","../noop.ts","../hooks/use-filter.ts","../get-image-resolution.ts","../hooks/use-toggle.ts","../hooks/use-is-online.ts","../hooks/use-is-visible.ts","../hooks/use-keyboard-shortcuts.ts","../hooks/use-list.ts","../hooks/use-scroll-lock.ts","../copy-to-clipboard.ts","../dates.ts","../filter-url.ts","../pagination.ts","../pluralize.ts","../server-error.ts","../toasts.tsx","../translations.tsx","../hooks/use-audio.ts","../components/dialog.tsx","../components/offline-indicator.tsx","../components/outbound-link.tsx","../is-client.ts","../hooks/use-breakpoint.ts","../hooks/use-click-outside.ts","../hooks/use-client-search.ts","../hooks/use-disable-pull-to-refresh.ts","../hooks/use-document-title.ts","../hooks/use-image-file-resolution.ts","../hooks/use-leaving-prompt.ts","../hooks/use-sound.ts","../hooks/use-url-filter.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport function usePreviousValue<T>(value: T, defaultValue?: T | undefined) {\n  const previousValue = useRef<T | undefined>(defaultValue);\n\n  useEffect(() => {\n    previousValue.current = value;\n  });\n\n  return previousValue.current;\n}\n","import React from \"react\";\n\nimport { usePreviousValue } from \"./hooks/use-previous-value\";\n\nexport enum AnimaState {\n  appearing = \"appearing\",\n  appeared = \"appeared\",\n  hidding = \"hidding\",\n  hidden = \"hidden\",\n}\n\nexport type AnimaEffectType = string;\n\nexport type AnimaConfigType = {\n  children: JSX.Element;\n\n  visible: boolean;\n  effect: AnimaEffectType;\n\n  duration?: number;\n  isInitial?: boolean;\n};\n\nexport function Anima(props: AnimaConfigType) {\n  const duration = props.duration ?? 300;\n\n  function getInitialState() {\n    if (!props.visible) return AnimaState.hidden;\n    if (props.isInitial) return AnimaState.appeared;\n    return AnimaState.appearing;\n  }\n\n  const [state, setState] = React.useState<AnimaState>(getInitialState);\n  const previousState = usePreviousValue(state);\n\n  React.useEffect(() => {\n    if (props.isInitial) return;\n\n    if (props.visible) {\n      setState(AnimaState.appearing);\n      setTimeout(() => setState(AnimaState.appeared), 100);\n    } else {\n      if (!previousState) return;\n      setState(AnimaState.hidding);\n      setTimeout(() => setState(AnimaState.hidden), duration);\n    }\n  }, [props.visible]);\n\n  if (state === AnimaState.hidden) return null;\n\n  return React.cloneElement(props.children, {\n    \"data-anima\": state,\n    \"data-anima-effect\": props.effect,\n    style: { \"--duration\": `${duration}ms`, ...props.children.props.style },\n  });\n}\n\nexport function getAnimaProps(props: Record<string, any>) {\n  return {\n    \"data-anima\": props[\"data-anima\"] as AnimaState | undefined,\n    \"data-anima-effect\": props[\"data-anima-effect\"] as\n      | AnimaEffectType\n      | undefined,\n    style: props.style as React.CSSProperties,\n  };\n}\n\nexport type AnimaListPropsType = {\n  children: JSX.Element[];\n} & JSX.IntrinsicElements[\"ul\"];\n\nexport function AnimaList(props: AnimaListPropsType) {\n  const { children, ...rest } = props;\n\n  const [isInitial, setIsInitial] = React.useState<boolean>(true);\n\n  React.useEffect(() => setIsInitial(false), []);\n\n  return (\n    <ul {...rest}>\n      {props.children.map((child) => React.cloneElement(child, { isInitial }))}\n    </ul>\n  );\n}\n\nexport type UseAnimaListDirectionType = \"head\" | \"tail\";\n\nexport type UseAnimaListConfigType = {\n  direction?: UseAnimaListDirectionType;\n  duration?: number;\n};\n\nexport type UseAnimaListItemType<T> = { item: T; props: { visible: boolean } };\n\ntype UseAnimaListReturnType<T> = {\n  items: { item: T; props: { visible: boolean } }[];\n  count: number;\n};\n\nexport function useAnimaList<T extends { id: string }>(\n  list: T[],\n  config?: UseAnimaListConfigType\n): UseAnimaListReturnType<T> {\n  const duration = config?.duration ?? 300;\n  const direction = config?.direction ?? \"head\";\n\n  const [officialList, setOfficialList] = React.useState<\n    UseAnimaListItemType<T>[]\n  >(list.map((item) => ({ item, props: { visible: true } })));\n\n  let added: T[] = [];\n\n  for (const item of list) {\n    const wasAdded = !officialList\n      .map((x) => x.item)\n      .some((x) => item.id === x.id);\n\n    if (wasAdded) added.push(item);\n  }\n\n  React.useEffect(() => {\n    if (added.length === 0) return;\n\n    if (direction === \"head\") {\n      setOfficialList((officialList) => [\n        ...added.map((item) => ({ item, props: { visible: true } })),\n        ...officialList,\n      ]);\n    } else {\n      setOfficialList((officialList) => [\n        ...officialList,\n        ...added.map((item) => ({ item, props: { visible: true } })),\n      ]);\n    }\n\n    added = [];\n  }, [added.length, direction]);\n\n  let deleted: T[] = [];\n\n  for (const { item } of officialList) {\n    const wasDeleted = list.every((x) => x.id !== item.id);\n\n    if (wasDeleted) deleted.push(item);\n  }\n\n  React.useEffect(() => {\n    if (deleted.length === 0) return;\n\n    setOfficialList((officialList) =>\n      officialList.map((x) => {\n        const wasDeleted = deleted.some((item) => item.id === x.item.id);\n\n        return wasDeleted ? { ...x, props: { visible: false } } : x;\n      })\n    );\n\n    deleted = [];\n  }, [deleted.length]);\n\n  return {\n    items: officialList.map((item) => {\n      const updated = list.find((y) => y.id === item.item.id);\n      return updated ? { ...item, item: updated } : item;\n    }),\n    count: officialList.filter((x) => x.props.visible).length,\n  };\n}\n","export class DurationFormatter {\n  static format(duration: number) {\n    const minutes = Math.floor(duration / 60);\n    const seconds = duration % 60;\n\n    const formattedMinutes = String(minutes).padStart(2, \"0\");\n    const formattedSeconds = String(seconds).padStart(2, \"0\");\n\n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n","import { useState, Dispatch, SetStateAction } from \"react\";\n\nexport type UseFieldDefaultValueType<T> = T | (() => T);\nexport type UseFieldReturnType<T> = {\n  value: T;\n  set: Dispatch<SetStateAction<T>>;\n  clear: VoidFunction;\n};\n\nexport function useField<T>(\n  defaultValue: UseFieldDefaultValueType<T>\n): UseFieldReturnType<T> {\n  const evaluatedDefaultValue =\n    // @ts-ignore\n    typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n\n  const [value, setValue] = useState(evaluatedDefaultValue);\n\n  function clear() {\n    setValue(evaluatedDefaultValue);\n  }\n\n  return { value, set: setValue, clear };\n}\n","import React from \"react\";\n\nexport type UseAutofocusConfigType = {\n  ref: React.RefObject<HTMLElement>;\n  condition: boolean;\n};\n\nexport function useAutofocus(config: UseAutofocusConfigType) {\n  React.useEffect(() => {\n    if (!config.condition) return;\n\n    config.ref.current?.focus();\n  }, [config.condition]);\n}\n","export function getSafeWindow() {\n  if (typeof window === \"undefined\") return undefined;\n  return window;\n}\n","import { useState, useEffect } from \"react\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type WindowDimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowDimensions(): WindowDimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowDimensions>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    const safeWindow = getSafeWindow();\n\n    if (!safeWindow) return;\n\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: safeWindow?.innerWidth,\n        height: safeWindow?.innerHeight,\n      });\n    }\n\n    // Add event listener\n    safeWindow.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => safeWindow.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","export class Days {\n  value: number;\n\n  constructor(value: number) {\n    this.value = value;\n  }\n\n  toHours() {\n    return this.value * 24;\n  }\n\n  toMinutes() {\n    return this.value * 24 * 60;\n  }\n\n  toSeconds() {\n    return this.value * 24 * 60 * 60;\n  }\n\n  toMs() {\n    return this.value * 24 * 60 * 60 * 1000;\n  }\n}\n\nexport class Hours {\n  value: number;\n\n  constructor(value: number) {\n    this.value = value;\n  }\n\n  toMinutes() {\n    return this.value * 60;\n  }\n\n  toSeconds() {\n    return this.value * 60 * 60;\n  }\n\n  toMs() {\n    return this.value * 60 * 60 * 1000;\n  }\n}\n\nexport class Minutes {\n  value: number;\n\n  constructor(value: number) {\n    this.value = value;\n  }\n\n  toSeconds() {\n    return this.value * 60;\n  }\n\n  toMs() {\n    return this.value * 60 * 1000;\n  }\n}\n\nexport class Seconds {\n  value: number;\n\n  constructor(value: number) {\n    this.value = value;\n  }\n\n  toMs() {\n    return this.value * 1000;\n  }\n}\n\nexport class MiliSeconds {\n  value: number;\n\n  constructor(value: number) {\n    this.value = value;\n  }\n\n  toMs() {\n    return this.value;\n  }\n}\n\nexport const Time = { Days, Hours, Minutes, Seconds };\n","import { useState, useEffect } from \"react\";\n\nexport type UseExpandableListConfigType = { max: number; length: number };\n\nexport enum UseExpandableListState {\n  contracted = \"contracted\",\n  expanded = \"expanded\",\n}\n\nexport function useExpandableList(config: UseExpandableListConfigType) {\n  const numberOfExcessiveElements = config.length - config.max;\n  const areThereExcessiveElements = config.length > config.max;\n\n  function getState() {\n    return areThereExcessiveElements\n      ? UseExpandableListState.contracted\n      : UseExpandableListState.expanded;\n  }\n\n  const [state, setState] = useState<UseExpandableListState>(getState);\n\n  useEffect(() => setState(getState()), [config.length, config.max]);\n\n  function showMore() {\n    if (state === UseExpandableListState.contracted) {\n      setState(UseExpandableListState.expanded);\n    }\n  }\n\n  function showLess() {\n    if (state === UseExpandableListState.expanded) {\n      setState(UseExpandableListState.contracted);\n    }\n  }\n\n  function filterFn(_element: any, index: number) {\n    if (state === UseExpandableListState.expanded) return true;\n    return index < config.max;\n  }\n\n  return {\n    state,\n    displayShowMore: state === UseExpandableListState.contracted,\n    displayShowLess:\n      state === UseExpandableListState.expanded && areThereExcessiveElements,\n    showMore,\n    showLess,\n    numberOfExcessiveElements,\n    filterFn,\n  };\n}\n","import { useState } from \"react\";\n\nexport type UseFileConfigType = {\n  maxSize?: number;\n};\n\nexport enum UseFileState {\n  \"idle\" = \"idle\",\n  \"selected\" = \"selected\",\n  \"error\" = \"error\",\n}\n\ntype UseFileIdle = {\n  state: UseFileState.idle;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n};\n\ntype UseFileSelected = {\n  state: UseFileState.selected;\n  data: File;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n    previewFile: () => ReturnType<typeof URL.createObjectURL> | undefined;\n  };\n};\n\ntype UseFileError = {\n  state: UseFileState.error;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n};\n\nexport type UseFileReturnType = UseFileIdle | UseFileSelected | UseFileError;\n\nexport function useFile(config?: UseFileConfigType): UseFileReturnType {\n  const maxSize = config?.maxSize ?? Infinity;\n\n  const [state, setState] = useState<UseFileState>(UseFileState.idle);\n\n  const [file, setFile] = useState<File | null>(null);\n\n  function selectFile(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.currentTarget.files;\n\n    if (!files || !files[0]) return;\n\n    const file = files[0];\n\n    if (file.size > maxSize) {\n      setState(UseFileState.error);\n      return undefined;\n    }\n\n    setFile(file);\n    setState(UseFileState.selected);\n\n    return file;\n  }\n\n  function clearFile() {\n    setFile(null);\n    setState(UseFileState.idle);\n  }\n\n  function previewFile() {\n    if (!file) return undefined;\n    return URL.createObjectURL(file);\n  }\n\n  if (state === UseFileState.idle) {\n    return { state, data: null, actions: { selectFile, clearFile } };\n  }\n\n  if (state === UseFileState.selected) {\n    return {\n      state,\n      data: file as File,\n      actions: { selectFile, clearFile, previewFile },\n    };\n  }\n\n  return { state, data: null, actions: { selectFile, clearFile } };\n}\n","import { useState, useEffect } from \"react\";\nimport { Time } from \"../time\";\n\nexport type CurrentTimestampType = number;\n\nexport function getCurrentTimestamp(): CurrentTimestampType {\n  return Date.now();\n}\n\nexport function useCurrentTimestamp(): CurrentTimestampType {\n  const [timestamp, setTimestamp] =\n    useState<CurrentTimestampType>(getCurrentTimestamp);\n\n  useEffect(() => {\n    const timer = setInterval(\n      () => setTimestamp(getCurrentTimestamp()),\n      new Time.Seconds(1).toMs()\n    );\n\n    return () => clearInterval(timer);\n  }, []);\n\n  return timestamp;\n}\n","export function noop() {}\n","import { useState, useEffect } from \"react\";\nimport { usePreviousValue } from \"./use-previous-value\";\nimport { noop } from \"../noop\";\n\nexport type UseFilterQueryType = string | undefined;\n\nexport type UseFilterConfigType<T> = {\n  enum: { [key: string]: UseFilterQueryType };\n  defaultQuery?: UseFilterQueryType;\n  filterFn?: (value: T) => boolean;\n  onUpdate?: (\n    current: UseFilterQueryType,\n    previous: UseFilterQueryType\n  ) => void;\n};\n\nexport function useFilter<T = string>(config: UseFilterConfigType<T>) {\n  const defaultQuery = config.defaultQuery ?? undefined;\n  const filterFn = config.filterFn ?? defaultFilterFn;\n  const options = Object.keys(config.enum);\n  const onUpdate = config?.onUpdate ?? noop;\n\n  const [query, setQuery] = useState<UseFilterQueryType>(defaultQuery);\n  const previousQuery = usePreviousValue(query);\n\n  function clear() {\n    setQuery(defaultQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newQuery = event.currentTarget.value;\n\n    const isNewQueryInEnum = Boolean(config.enum[String(newQuery)]);\n\n    setQuery(isNewQueryInEnum ? newQuery : undefined);\n  }\n\n  function defaultFilterFn(value: T) {\n    if (query === undefined) return true;\n\n    return query === String(value);\n  }\n\n  useEffect(() => {\n    onUpdate(query, previousQuery);\n  }, [previousQuery, query]);\n\n  return { query, clear, onChange, filterFn, options, onUpdate };\n}\n","export type ImagePathType = string | undefined;\n\nexport type ImageResolutionType = {\n  width: number | null;\n  height: number | null;\n};\n\nexport const emptyImageResolution: ImageResolutionType = {\n  width: null,\n  height: null,\n};\n\nexport async function getImageResolution(\n  path: ImagePathType\n): Promise<ImageResolutionType> {\n  if (!path) return emptyImageResolution;\n\n  const img = document.createElement(\"img\");\n\n  const promise = new Promise<ImageResolutionType>((resolve, reject) => {\n    img.onload = () => resolve({ width: img.width, height: img.height });\n    img.onerror = reject;\n  });\n\n  img.src = path;\n\n  return promise;\n}\n","import { useState } from \"react\";\n\nexport type UseToggleReturnType = {\n  on: boolean;\n  off: boolean;\n  enable: VoidFunction;\n  disable: VoidFunction;\n  toggle: VoidFunction;\n};\n\nexport function useToggle(defaultValue = false): UseToggleReturnType {\n  const [on, setIsOn] = useState(defaultValue);\n\n  const enable = () => setIsOn(true);\n  const disable = () => setIsOn(false);\n  const toggle = () => setIsOn((v) => !v);\n\n  return { on, off: !on, enable, disable, toggle };\n}\n","import React from \"react\";\nimport { useToggle } from \"./use-toggle\";\n\ntype OnlineStatusType = boolean;\n\nexport const useIsOnline = (): OnlineStatusType => {\n  const onlineStatus = useToggle(getOnlineStatus());\n\n  React.useEffect(() => {\n    function handleOnline() {\n      onlineStatus.enable();\n    }\n\n    function handleOffline() {\n      onlineStatus.disable();\n    }\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  return onlineStatus.on;\n};\n\n// Check if browser supports `navigator.onLine`,\n// otherwise, we assume the user is online.\nfunction getOnlineStatus(): OnlineStatusType {\n  return typeof navigator !== \"undefined\" &&\n    typeof navigator.onLine === \"boolean\"\n    ? navigator.onLine\n    : true;\n}\n","import { RefObject, useEffect, useState } from \"react\";\n\nexport const defaultUseIsVisibleConfig = {\n  threshold: 0,\n  root: null,\n  rootMargin: \"0%\",\n  ref: { current: null },\n};\n\nexport function isIntersectionObserverSupported() {\n  return (\n    \"IntersectionObserver\" in window &&\n    \"IntersectionObserverEntry\" in window &&\n    \"intersectionRatio\" in window.IntersectionObserverEntry.prototype\n  );\n}\n\nexport type UseIsVisibleConfigType = IntersectionObserverInit & {\n  ref: RefObject<Element>;\n};\n\nexport type UseIsVisibleReturnType = boolean;\n\nexport function useIsVisible(\n  config: UseIsVisibleConfigType = defaultUseIsVisibleConfig\n): UseIsVisibleReturnType {\n  const [isVisible, setVisible] = useState<UseIsVisibleReturnType>(false);\n\n  useEffect(() => {\n    const element = config.ref.current;\n\n    if (!isIntersectionObserverSupported() || !element) return;\n\n    const observer = new IntersectionObserver(\n      (entry) => setVisible(Boolean(entry[0]?.isIntersecting)),\n      config\n    );\n\n    observer.observe(element);\n\n    return () => observer.unobserve(element);\n  }, []);\n\n  return isVisible;\n}\n","import React from \"react\";\nimport tinykeys from \"tinykeys\";\n\nexport interface UseKeyboardShortcurtsConfigType {\n  [keybinding: string]: (event: KeyboardEvent) => void;\n}\n\nexport function useKeyboardShortcurts(config: UseKeyboardShortcurtsConfigType) {\n  React.useEffect(() => {\n    const unsubscribeShortcuts = tinykeys(window, config);\n\n    return () => unsubscribeShortcuts();\n  }, [config]);\n}\n","import { useState, SetStateAction, Dispatch } from \"react\";\n\nexport type UseListActionsType<T> = {\n  clear: VoidFunction;\n  add: (x: T | T[]) => void;\n  remove: (x: T) => void;\n  toggle: (x: T) => void;\n  isAdded: (x: T) => boolean;\n  update: Dispatch<SetStateAction<T[]>>;\n};\n\nexport type UseListReturnType<T> = [T[], UseListActionsType<T>];\n\nexport type UseListConfigType<T> = {\n  defaultItems?: T[];\n  comparisonFn?: (a: T, b: T) => boolean;\n};\n\nexport function useList<T>(\n  config?: UseListConfigType<T>\n): UseListReturnType<T> {\n  const defaultItems = config?.defaultItems ?? [];\n\n  const defaultComparisonFn = (a: T, b: T) => a === b;\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [items, setItems] = useState<T[]>(defaultItems);\n\n  function clear() {\n    setItems([]);\n  }\n\n  function add(payload: T | T[]) {\n    setItems((items) => {\n      if (Array.isArray(payload)) {\n        return [...items, ...payload];\n      }\n      return [...items, payload];\n    });\n  }\n\n  function remove(item: T) {\n    setItems((items) => items.filter((x) => !comparisonFn(x, item)));\n  }\n\n  function isAdded(item: T) {\n    return items.some((x) => comparisonFn(x, item));\n  }\n\n  function toggle(item: T) {\n    isAdded(item) ? remove(item) : add(item);\n  }\n\n  return [items, { clear, add, remove, toggle, isAdded, update: setItems }];\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useScrollLock(condition = true) {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overflows\n    const originalBodyOverflow = window.getComputedStyle(body).overflow;\n    const originalHtmlOverflow = window.getComputedStyle(html).overflow;\n\n    // Prevent scrolling on mount\n    body.style.overflow = \"hidden\";\n    html.style.overflow = \"hidden\";\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      body.style.overflow = originalBodyOverflow;\n      html.style.overflow = originalHtmlOverflow;\n    };\n  }, [condition]);\n}\n","import { noop } from \"./noop\";\n\nexport type CopyToClipboardTextType = string;\ntype OnCopyToClipboardFailureType = (error?: unknown) => void;\ntype OnCopyToClipboardSuccessType = VoidFunction;\n\nconst defaultOnCopyToClipboardFailure: OnCopyToClipboardFailureType = (error) =>\n  console.warn(\"Copying to clipboard not supported\");\n\nexport type CopyToClipboardOptionsType = {\n  text: string;\n  onFailure?: OnCopyToClipboardFailureType;\n  onSuccess?: OnCopyToClipboardSuccessType;\n};\n\nexport async function copyToClipboard(options: CopyToClipboardOptionsType) {\n  const onFailure = options.onFailure ?? defaultOnCopyToClipboardFailure;\n  const onSuccess = options.onSuccess ?? noop;\n\n  if (!navigator.clipboard) onFailure();\n\n  try {\n    await navigator.clipboard.writeText(options.text);\n    onSuccess();\n  } catch (error) {\n    onFailure(error);\n  }\n}\n","export type DateType = Date | number | null | undefined;\n\nexport class DateFormatter {\n  static datetime(date: DateType, defaultValue = \"N/A\"): string {\n    if (!date) return defaultValue;\n\n    return new Date(date).toLocaleString();\n  }\n\n  static form(date: Date | null): string {\n    if (!date) return DateFormatter.form(new Date());\n\n    const year = DateFormatter._pad(date.getFullYear());\n    const month = DateFormatter._pad(date.getMonth() + 1);\n    const day = DateFormatter._pad(date.getDate());\n\n    return `${year}-${month}-${day}`;\n  }\n\n  static clock(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._pad(date.getHours());\n    const minutes = DateFormatter._pad(date.getMinutes());\n    const seconds = DateFormatter._pad(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static countdown(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._pad(date.getHours());\n    const minutes = DateFormatter._pad(date.getMinutes());\n    const seconds = DateFormatter._pad(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static _pad(value: number) {\n    return String(value).padStart(2, \"0\");\n  }\n}\n","export type FilterType = Record<string, unknown> | undefined;\n\nexport class FilterUrl {\n  value: string;\n\n  constructor(url: string, filters?: FilterType) {\n    const query = new URLSearchParams(this.getNonEmptyFilters(filters));\n\n    if (query.toString() === \"\") {\n      this.value = url;\n\n      return;\n    }\n\n    this.value = `${url}?${query.toString()}`;\n  }\n\n  private getNonEmptyFilters(filters: FilterType) {\n    if (filters === undefined) return {};\n\n    return Object.fromEntries(\n      Object.entries(filters).filter(([_key, value]) => value !== undefined)\n    ) as Record<string, string>;\n  }\n}\n","import type { UseInfiniteQueryResult } from \"react-query\";\nimport type { Paged } from \"@bgord/node\";\n\nexport class Pagination {\n  static empty = { result: [], meta: { exhausted: true } };\n\n  static extract<T>(infinite: UseInfiniteQueryResult<Paged<T>>): T[] {\n    return (\n      infinite.data?.pages\n        ?.flat()\n        .map((data) => data.result)\n        .flat() ?? []\n    );\n  }\n}\n\nexport type { Paged } from \"@bgord/node\";\n","import type { Falsy, Schema } from \"@bgord/node\";\n\ntype PluralizeWordType = string;\ntype PluralizeValueType = Falsy<number>;\n\nexport type PluralizeOptionsType = {\n  value: PluralizeValueType;\n  singular: PluralizeWordType;\n  plural?: PluralizeWordType;\n  language: Schema.LanguageType;\n};\n\nexport function pluralize(options: PluralizeOptionsType): PluralizeWordType {\n  if (options.language !== \"en\") {\n    console.warn(\n      `[@bgord/frontend] missing pluralization fuction for language ${options.language}.`\n    );\n\n    return options.singular;\n  }\n\n  const plural = options.plural ?? `${options.singular}s`;\n\n  if (options.value === 1) return options.singular;\n  return plural;\n}\n","export type ServerErrorConfigType = {\n  message: string;\n};\n\nexport class ServerError {\n  message: ServerErrorConfigType[\"message\"];\n\n  _known = true;\n\n  constructor(config: ServerErrorConfigType) {\n    this.message = config.message;\n  }\n\n  static isServerError(value: unknown): value is ServerError {\n    if (\n      value &&\n      typeof value === \"object\" &&\n      value === Object(value) &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"_known\") &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"message\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  static async extract(response: Response) {\n    if (response.ok) return response;\n\n    const error = await response.json();\n\n    const message = ServerError.isServerError(error)\n      ? error.message\n      : \"app.error.general\";\n\n    throw new ServerError({ message });\n  }\n\n  static async handle(payload: unknown): Promise<Response> {\n    throw new ServerError({\n      message: ServerError.isServerError(payload)\n        ? payload.message\n        : \"app.error.general\",\n    });\n  }\n}\n","import React from \"react\";\nimport { useList } from \"./hooks/use-list\";\n\nexport type ToastsConfigType = {\n  timeout?: number;\n};\n\nexport type BaseToastType = {\n  id: string;\n  message: string;\n};\n\ntype ToastsContextDataType<ToastType extends BaseToastType = BaseToastType> = [\n  ToastType[],\n  {\n    add: (toast: Omit<ToastType, \"id\">) => void;\n    remove: (toast: ToastType) => void;\n    clear: VoidFunction;\n  }\n];\n\nconst ToastsContext = React.createContext<ToastsContextDataType | undefined>(\n  undefined\n);\n\nexport function ToastsContextProvider(\n  props: { children: JSX.Element | JSX.Element[] } & ToastsConfigType\n) {\n  function useToastsImplementation(): ToastsContextDataType {\n    const timeout = props?.timeout ?? 5000;\n\n    const [toasts, actions] = useList<BaseToastType>({\n      comparisonFn: (a, b) => a.id === b.id,\n    });\n\n    function add(payload: Omit<BaseToastType, \"id\">) {\n      const id = String(Date.now());\n      const toast = { ...payload, id };\n\n      actions.add(toast);\n      setTimeout(() => actions.remove(toast), timeout);\n    }\n\n    return [\n      [...toasts].reverse(),\n      { add, remove: actions.remove, clear: actions.clear },\n    ];\n  }\n\n  const [toasts, actions] = useToastsImplementation();\n\n  return (\n    <ToastsContext.Provider value={[toasts, actions]}>\n      {props.children}\n    </ToastsContext.Provider>\n  );\n}\n\nexport function useToastsContext<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const context = React.useContext<ToastsContextDataType<ToastType>>(\n    ToastsContext as unknown as React.Context<ToastsContextDataType<ToastType>>\n  );\n\n  if (context === undefined) {\n    throw new Error(`useToasts must be used within the ToastsContextProvider`);\n  }\n\n  return context;\n}\n\nexport function useToastTrigger<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const [, actions] = useToastsContext<ToastType>();\n\n  return actions.add;\n}\n","import React from \"react\";\nimport type { TranslationsType, Schema } from \"@bgord/node\";\nimport { pluralize, PluralizeOptionsType } from \"./pluralize\";\n\ntype TranslationsContextValueType = {\n  translations: TranslationsType;\n  language: Schema.LanguageType;\n};\n\nconst TranslationsContext = React.createContext<TranslationsContextValueType>({\n  translations: {},\n  language: \"en\",\n});\n\ntype TranslationsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: TranslationsContextValueType;\n};\n\nexport function TranslationsContextProvider(\n  props: TranslationsContextPropsType\n) {\n  return (\n    <TranslationsContext.Provider value={props.value}>\n      {props.children}\n    </TranslationsContext.Provider>\n  );\n}\n\nexport function useTranslations() {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useTranslations must be used within the TranslationsContext`\n    );\n  }\n\n  function translate(key: string) {\n    const result = value.translations[key];\n\n    if (!result)\n      console.warn(`[@bgord/frontend] missing translation for key ${key}.`);\n\n    return result ?? key;\n  }\n\n  return translate;\n}\n\nexport function useLanguage(): TranslationsContextValueType[\"language\"] {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(`useLanguage must be used within the TranslationsContext`);\n  }\n\n  return value.language;\n}\n\nexport function usePluralize() {\n  const language = useLanguage();\n\n  return (options: Omit<PluralizeOptionsType, \"language\">) =>\n    pluralize({ ...options, language });\n}\n","import * as React from \"react\";\n\nimport { DurationFormatter } from \"../durations\";\nimport { useField } from \"./use-field\";\n\nexport const AUDIO_DEFAULT_VOLUME = 1;\n\nexport type UseAudioSrcType = string;\n\nexport type UseAudioStateType = \"initial\" | \"ready\" | \"playing\" | \"paused\";\n\nexport function useAudio(src: UseAudioSrcType) {\n  const [state, setState] = React.useState<UseAudioStateType>(\"initial\");\n\n  const ref = React.useRef<HTMLAudioElement | null>(null);\n\n  const duration = useField<number>(0);\n  const currentTime = useField<number>(0);\n  const volume = useField<number>(AUDIO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (ref.current) {\n      ref.current.play();\n      setState(\"playing\");\n    }\n  }\n\n  function pause() {\n    if (ref.current) {\n      ref.current.pause();\n      setState(\"paused\");\n    }\n  }\n\n  function reset() {\n    if (ref.current) {\n      ref.current.currentTime = 0;\n      ref.current.pause();\n      currentTime.set(0);\n      setState(\"paused\");\n    }\n  }\n\n  function mute() {\n    if (ref.current) {\n      ref.current.volume = 0;\n      volume.set(0);\n    }\n  }\n\n  function unmute() {\n    if (ref.current) {\n      ref.current.volume = AUDIO_DEFAULT_VOLUME;\n      volume.set(AUDIO_DEFAULT_VOLUME);\n    }\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.currentTime = target.valueAsNumber;\n      currentTime.set(target.valueAsNumber);\n    }\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLAudioElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(\"ready\");\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLAudioElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(\"paused\");\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.volume = target.valueAsNumber;\n      volume.set(target.valueAsNumber);\n    }\n  }\n\n  return {\n    props: {\n      audio: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: { play, pause, mute, unmute, reset, seek, changeVolume },\n    meta: {\n      state,\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import React from \"react\";\n\nimport * as hooks from \"../hooks\";\n\nexport type DialogPropsType = hooks.UseToggleReturnType &\n  JSX.IntrinsicElements[\"dialog\"];\n\nexport function Dialog(props: DialogPropsType) {\n  const { disable, enable, on, off, toggle, ...rest } = props;\n  const ref = React.useRef<HTMLDialogElement>(null);\n\n  React.useEffect(() => {\n    if (props.on) {\n      // @ts-ignore\n      ref.current?.showModal();\n    } else {\n      // @ts-ignore\n      ref.current?.close();\n    }\n  }, [props.on]);\n\n  hooks.useKeyboardShortcurts({ Escape: disable });\n  hooks.useAutofocus({ ref, condition: props.on });\n  hooks.useScrollLock(props.on);\n\n  return (\n    <dialog\n      ref={ref}\n      tabIndex={0}\n      data-display={props.on ? \"flex\" : \"none\"}\n      data-direction=\"column\"\n      data-mx=\"auto\"\n      data-p=\"24\"\n      data-position=\"absolute\"\n      data-z=\"2\"\n      data-bg=\"white\"\n      data-br=\"4\"\n      data-bc=\"gray-300\"\n      data-bw=\"1\"\n      data-backdrop=\"black\"\n      {...rest}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { useIsOnline } from \"../hooks\";\n\nexport function OfflineIndicator(props: { children: React.ReactChild }) {\n  const isOnline = useIsOnline();\n\n  if (isOnline) return null;\n\n  return <>{props.children}</>;\n}\n","import React from \"react\";\nimport type { PolymorphicPropsWithoutRef } from \"react-polymorphic-types\";\n\nconst OutboundLinkDefaultElement = \"a\";\n\nexport function OutboundLink<\n  T extends React.ElementType = typeof OutboundLinkDefaultElement\n>(props: PolymorphicPropsWithoutRef<{}, T>) {\n  const { as, ...rest } = props;\n\n  const Element = as || OutboundLinkDefaultElement;\n\n  return <Element target=\"_blank\" rel=\"noreferer noopener\" {...rest} />;\n}\n","import { getSafeWindow } from \"./safe-window\";\n\nexport function isClient() {\n  return !getSafeWindow();\n}\n","import { useWindowDimensions } from \"./use-window-dimensions\";\n\nexport type BreakpointType = number;\n\nexport function useBreakpoint(breakpoint: BreakpointType): boolean {\n  const dimensions = useWindowDimensions();\n  const width = dimensions?.width ?? 0;\n\n  return width <= breakpoint;\n}\n","import React from \"react\";\n\nexport function useClickOutside(\n  ref: React.RefObject<HTMLElement>,\n  onClickOutside: VoidFunction,\n  exclude?: React.RefObject<HTMLElement>[]\n) {\n  React.useEffect(() => {\n    if (!ref.current) return;\n\n    function handleClickOutside(event: MouseEvent) {\n      // Check if click event happened outside the `ref`\n      // so the `onClickOutside` callback `may` be fired.\n      if (!ref.current?.contains(event.target as Node)) {\n        // The second check is to check if some `exclude`d node\n        // outside the `ref` node has been clicked.\n        const isExcludedNodeClicked = exclude?.some((node) =>\n          node.current?.contains(event.target as Node)\n        );\n\n        // `onClickOutside` callback is fired if the click event\n        // happened outside both `ref` node and `exclude`d nodes.\n        if (!isExcludedNodeClicked) {\n          onClickOutside();\n        }\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [onClickOutside, ref, exclude]);\n}\n","import { useState } from \"react\";\n\nexport type UseClientSearchQueryType = string;\n\nexport type UseClientSearchReturnType = {\n  query: UseClientSearchQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: (value: string) => boolean;\n};\n\nexport function useClientSearch(): UseClientSearchReturnType {\n  const emptyQuery: UseClientSearchQueryType = \"\";\n\n  const [query, setValue] = useState<UseClientSearchQueryType>(emptyQuery);\n\n  function clear() {\n    setValue(emptyQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setValue(event.currentTarget.value);\n  }\n\n  function filterFn(value: string) {\n    if (query === emptyQuery) return true;\n\n    return value?.toLowerCase().includes(query.toLowerCase());\n  }\n\n  return { query, clear, onChange, filterFn };\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useDisablePullToRefresh(condition = true) {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overscroll behaviors\n    const originalHtmlOverscrollBehavior =\n      window.getComputedStyle(html).overscrollBehavior;\n    const originalBodyOverflowBehavior =\n      window.getComputedStyle(body).overscrollBehavior;\n\n    // Disable pull to refresh\n    body.style.overscrollBehavior = \"none\";\n    html.style.overscrollBehavior = \"none\";\n\n    // Enable pull to refresh when component unmounts\n    return () => {\n      body.style.overscrollBehavior = originalBodyOverflowBehavior;\n      html.style.overscrollBehavior = originalHtmlOverscrollBehavior;\n    };\n  }, [condition]);\n}\n","import React from \"react\";\n\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { UseFileReturnType, UseFileState } from \"./use-file\";\nimport {\n  getImageResolution,\n  ImageResolutionType,\n  emptyImageResolution,\n} from \"../get-image-resolution\";\n\nexport function useImageFileResolution(\n  file: UseFileReturnType\n): ImageResolutionType {\n  const resolution = useField<ImageResolutionType>(emptyImageResolution);\n\n  React.useEffect(() => {\n    async function execute() {\n      if (file.state === UseFileState.selected) {\n        try {\n          const result = await getImageResolution(file.actions.previewFile());\n\n          return resolution.set(result);\n        } catch (error) {\n          return resolution.clear();\n        }\n      }\n\n      if (\n        [UseFileState.error, UseFileState.idle].includes(file.state) &&\n        resolution.value.width !== null &&\n        resolution.value.height !== null\n      ) {\n        resolution.clear();\n      }\n    }\n\n    execute();\n  }, [file.state, file.data?.name]);\n\n  return resolution.value;\n}\n","import React from \"react\";\n\nexport type UseLeavingPromptConditionType = boolean;\n\nexport function useLeavingPrompt(\n  condition: UseLeavingPromptConditionType = false\n) {\n  React.useEffect(() => {\n    if (!condition) return;\n\n    function handler(e: BeforeUnloadEvent) {\n      e.preventDefault();\n    }\n\n    window.addEventListener(\"beforeunload\", handler);\n\n    return () => window.removeEventListener(\"beforeunload\", handler);\n  }, [condition]);\n}\n","export type SoundSourceType = string;\n\nexport type UseSoundReturnType = { play: VoidFunction };\n\nexport function useSound(src: SoundSourceType): UseSoundReturnType {\n  const audio = new Audio(src);\n\n  return { play: audio.play.bind(audio) };\n}\n","import { useFilter, UseFilterConfigType } from \"./use-filter\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type UseUrlFilterConfigType<T> = UseFilterConfigType<T> & {\n  label: string;\n};\n\nexport function useUrlFilter<T>(config: UseUrlFilterConfigType<T>) {\n  const safeWindow = getSafeWindow();\n\n  const currentQuery =\n    new URLSearchParams(safeWindow?.location.search).get(config.label) ??\n    undefined;\n\n  return useFilter({\n    onUpdate: (current, previous) => {\n      if (!safeWindow) return;\n\n      const url = new URL(safeWindow.location.toString());\n      const params = new URLSearchParams(url.search);\n\n      if (current === undefined) {\n        params.delete(config.label);\n      } else {\n        params.set(config.label, current);\n      }\n\n      if (current === previous) return;\n\n      if (current !== previous) {\n        url.search = params.toString();\n        history.pushState({}, \"\", url.toString());\n      }\n    },\n    ...config,\n    defaultQuery: config.defaultQuery,\n  });\n}\n"],"names":["usePreviousValue","value","defaultValue","previousValue","useRef","useEffect","current","AnimaState","DurationFormatter","format","duration","minutes","Math","floor","seconds","String","padStart","useField","evaluatedDefaultValue","useState","setValue","set","clear","useAutofocus","config","React","condition","ref","focus","getSafeWindow","window","useWindowDimensions","width","undefined","height","windowSize","setWindowSize","safeWindow","addEventListener","handleResize","removeEventListener","innerWidth","innerHeight","Days","UseExpandableListState","UseFileState","this","toHours","toMinutes","toSeconds","toMs","Hours","Minutes","Seconds","MiliSeconds","Time","getCurrentTimestamp","Date","now","noop","useFilter","defaultQuery","filterFn","query","options","Object","keys","onUpdate","setQuery","previousQuery","onChange","event","newQuery","currentTarget","isNewQueryInEnum","Boolean","getImageResolution","path","emptyImageResolution","img","document","createElement","promise","Promise","resolve","reject","onload","onerror","src","useToggle","on","setIsOn","off","enable","disable","toggle","v","useIsOnline","onlineStatus","navigator","onLine","handleOnline","handleOffline","defaultUseIsVisibleConfig","threshold","root","rootMargin","isIntersectionObserverSupported","IntersectionObserverEntry","prototype","useKeyboardShortcurts","unsubscribeShortcuts","tinykeys","useList","defaultItems","comparisonFn","a","b","items","setItems","add","payload","Array","isArray","remove","item","filter","x","isAdded","some","update","useScrollLock","useLayoutEffect","html","querySelector","body","originalBodyOverflow","getComputedStyle","overflow","originalHtmlOverflow","style","defaultOnCopyToClipboardFailure","error","console","warn","DateFormatter","datetime","date","toLocaleString","form","_pad","getFullYear","getMonth","getDate","clock","timestamp","getHours","getMinutes","getSeconds","countdown","FilterUrl","url","filters","URLSearchParams","getNonEmptyFilters","toString","fromEntries","entries","Pagination","extract","infinite","data","_infinite$data","pages","_infinite$data$pages","flat","map","result","pluralize","language","singular","plural","empty","meta","exhausted","ServerError","message","_known","isServerError","hasOwnProperty","response","ok","json","handle","ToastsContext","createContext","useToastsContext","context","useContext","Error","TranslationsContext","translations","useLanguage","props","visible","isInitial","appeared","appearing","hidden","state","setState","previousState","setTimeout","hidding","cloneElement","children","effect","rest","setIsInitial","child","showModal","close","hooks","Escape","tabIndex","as","target","rel","timeout","actions","id","reverse","toast","Provider","onFailure","onSuccess","clipboard","writeText","text","list","direction","officialList","setOfficialList","added","push","length","deleted","every","updated","find","y","count","currentTime","volume","muted","percentage","round","seek","valueAsNumber","changeVolume","audio","onTimeUpdate","onLoadedMetadata","onEnded","controls","player","min","step","max","onInput","play","pause","mute","unmute","reset","raw","formatted","breakpoint","dimensions","onClickOutside","exclude","handleClickOutside","_ref$current","contains","node","_node$current","toLowerCase","includes","setTimestamp","timer","setInterval","clearInterval","originalHtmlOverscrollBehavior","overscrollBehavior","originalBodyOverflowBehavior","title","numberOfExcessiveElements","areThereExcessiveElements","getState","contracted","expanded","displayShowMore","displayShowLess","showMore","showLess","_element","index","maxSize","Infinity","idle","file","setFile","selectFile","files","size","selected","clearFile","previewFile","URL","createObjectURL","resolution","execute","_file$data","name","isVisible","setVisible","element","observer","IntersectionObserver","entry","_entry$","isIntersecting","observe","unobserve","handler","e","preventDefault","Audio","bind","key","location","search","get","label","previous","params","history","pushState"],"mappings":"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"}