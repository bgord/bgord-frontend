{"version":3,"file":"bgord-frontend.cjs","sources":["../hooks/use-previous-value.ts","../anima.tsx","../durations.ts","../hooks/use-field.ts","../hooks/use-autofocus.ts","../safe-window.ts","../hooks/use-window-dimensions.ts","../time.ts","../hooks/use-expandable-list.ts","../hooks/use-file.ts","../hooks/use-current-timestamp.ts","../hooks/use-filter.ts","../get-image-resolution.ts","../hooks/use-toggle.ts","../hooks/use-is-online.ts","../hooks/use-is-visible.ts","../hooks/use-keyboard-shortcuts.ts","../hooks/use-list.ts","../hooks/use-scroll-lock.ts","../copy-to-clipboard.ts","../dates.ts","../filter-url.ts","../pagination.ts","../pluralize.ts","../server-error.ts","../toasts.tsx","../translations.tsx","../hooks/use-audio.ts","../components/dialog.tsx","../components/offline-indicator.tsx","../components/outbound-link.tsx","../is-client.ts","../hooks/use-breakpoint.ts","../hooks/use-click-outside.ts","../hooks/use-client-search.ts","../hooks/use-disable-pull-to-refresh.ts","../hooks/use-document-title.ts","../hooks/use-image-file-resolution.ts","../hooks/use-leaving-prompt.ts","../hooks/use-sound.ts","../hooks/use-url-filter.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport function usePreviousValue<T>(value: T, defaultValue?: T | undefined) {\n  const previousValue = useRef<T | undefined>(defaultValue);\n\n  useEffect(() => {\n    previousValue.current = value;\n  });\n\n  return previousValue.current;\n}\n","import React from \"react\";\n\nimport { usePreviousValue } from \"./hooks/use-previous-value\";\n\nexport enum AnimaState {\n  appearing = \"appearing\",\n  appeared = \"appeared\",\n  hidding = \"hidding\",\n  hidden = \"hidden\",\n}\n\nexport type AnimaEffectType = string;\n\nexport type AnimaConfigType = {\n  children: JSX.Element;\n\n  visible: boolean;\n  effect: AnimaEffectType;\n\n  duration?: number;\n  isInitial?: boolean;\n};\n\nexport function Anima(props: AnimaConfigType) {\n  const duration = props.duration ?? 300;\n\n  function getInitialState() {\n    if (!props.visible) return AnimaState.hidden;\n    if (props.isInitial) return AnimaState.appeared;\n    return AnimaState.appearing;\n  }\n\n  const [state, setState] = React.useState<AnimaState>(getInitialState);\n  const previousState = usePreviousValue(state);\n\n  React.useEffect(() => {\n    if (props.isInitial) return;\n\n    if (props.visible) {\n      setState(AnimaState.appearing);\n      setTimeout(() => setState(AnimaState.appeared), 100);\n    } else {\n      if (!previousState) return;\n      setState(AnimaState.hidding);\n      setTimeout(() => setState(AnimaState.hidden), duration);\n    }\n  }, [props.visible]);\n\n  if (state === AnimaState.hidden) return null;\n\n  return React.cloneElement(props.children, {\n    \"data-anima\": state,\n    \"data-anima-effect\": props.effect,\n    style: { \"--duration\": `${duration}ms`, ...props.children.props.style },\n  });\n}\n\nexport function getAnimaProps(props: Record<string, any>) {\n  return {\n    \"data-anima\": props[\"data-anima\"] as AnimaState | undefined,\n    \"data-anima-effect\": props[\"data-anima-effect\"] as\n      | AnimaEffectType\n      | undefined,\n    style: props.style as React.CSSProperties,\n  };\n}\n\nexport type AnimaListPropsType = {\n  children: JSX.Element[];\n} & JSX.IntrinsicElements[\"ul\"];\n\nexport function AnimaList(props: AnimaListPropsType) {\n  const { children, ...rest } = props;\n\n  const [isInitial, setIsInitial] = React.useState<boolean>(true);\n\n  React.useEffect(() => setIsInitial(false), []);\n\n  return (\n    <ul {...rest}>\n      {props.children.map((child) => React.cloneElement(child, { isInitial }))}\n    </ul>\n  );\n}\n\nexport type UseAnimaListDirectionType = \"head\" | \"tail\";\n\nexport type UseAnimaListConfigType = {\n  direction?: UseAnimaListDirectionType;\n  duration?: number;\n};\n\nexport type UseAnimaListItemType<T> = { item: T; props: { visible: boolean } };\n\ntype UseAnimaListReturnType<T> = {\n  items: { item: T; props: { visible: boolean } }[];\n  count: number;\n};\n\nexport function useAnimaList<T extends { id: string }>(\n  list: T[],\n  config?: UseAnimaListConfigType\n): UseAnimaListReturnType<T> {\n  const duration = config?.duration ?? 300;\n  const direction = config?.direction ?? \"head\";\n\n  const [officialList, setOfficialList] = React.useState<\n    UseAnimaListItemType<T>[]\n  >(list.map((item) => ({ item, props: { visible: true } })));\n\n  let added: T[] = [];\n\n  for (const item of list) {\n    const wasAdded = !officialList\n      .map((x) => x.item)\n      .some((x) => item.id === x.id);\n\n    if (wasAdded) added.push(item);\n  }\n\n  React.useEffect(() => {\n    if (added.length === 0) return;\n\n    if (direction === \"head\") {\n      setOfficialList((officialList) => [\n        ...added.map((item) => ({ item, props: { visible: true } })),\n        ...officialList,\n      ]);\n    } else {\n      setOfficialList((officialList) => [\n        ...officialList,\n        ...added.map((item) => ({ item, props: { visible: true } })),\n      ]);\n    }\n\n    added = [];\n  }, [added.length, direction]);\n\n  let deleted: T[] = [];\n\n  for (const { item } of officialList) {\n    const wasDeleted = list.every((x) => x.id !== item.id);\n\n    if (wasDeleted) deleted.push(item);\n  }\n\n  React.useEffect(() => {\n    if (deleted.length === 0) return;\n\n    setOfficialList((officialList) =>\n      officialList.map((x) => {\n        const wasDeleted = deleted.some((item) => item.id === x.item.id);\n\n        return wasDeleted ? { ...x, props: { visible: false } } : x;\n      })\n    );\n\n    deleted = [];\n  }, [deleted.length]);\n\n  return {\n    items: officialList.map((item) => {\n      const updated = list.find((y) => y.id === item.item.id);\n      return updated ? { ...item, item: updated } : item;\n    }),\n    count: officialList.filter((x) => x.props.visible).length,\n  };\n}\n","export class DurationFormatter {\n  static format(duration: number) {\n    const minutes = Math.floor(duration / 60);\n    const seconds = duration % 60;\n\n    const formattedMinutes = String(minutes).padStart(2, \"0\");\n    const formattedSeconds = String(seconds).padStart(2, \"0\");\n\n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n","import { useState, Dispatch, SetStateAction } from \"react\";\n\nexport type UseFieldDefaultValueType<T> = T | (() => T);\nexport type UseFieldReturnType<T> = {\n  value: T;\n  set: Dispatch<SetStateAction<T>>;\n  clear: VoidFunction;\n};\n\nexport function useField<T>(\n  defaultValue: UseFieldDefaultValueType<T>\n): UseFieldReturnType<T> {\n  const evaluatedDefaultValue =\n    // @ts-ignore\n    typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n\n  const [value, setValue] = useState(evaluatedDefaultValue);\n\n  function clear() {\n    setValue(evaluatedDefaultValue);\n  }\n\n  return { value, set: setValue, clear };\n}\n","import React from \"react\";\n\nexport type UseAutofocusConfigType = {\n  ref: React.RefObject<HTMLElement>;\n  condition: boolean;\n};\n\nexport function useAutofocus(config: UseAutofocusConfigType) {\n  React.useEffect(() => {\n    if (!config.condition) return;\n\n    config.ref.current?.focus();\n  }, [config.condition]);\n}\n","export function getSafeWindow() {\n  if (typeof window === \"undefined\") return undefined;\n  return window;\n}\n","import { useState, useEffect } from \"react\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type WindowDimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowDimensions(): WindowDimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowDimensions>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    const safeWindow = getSafeWindow();\n\n    if (!safeWindow) return;\n\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: safeWindow?.innerWidth,\n        height: safeWindow?.innerHeight,\n      });\n    }\n\n    // Add event listener\n    safeWindow.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => safeWindow.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","export class Days {\n  value: number;\n\n  static hours = 24;\n\n  static minutes = 24 * 60;\n\n  static seconds = 24 * 60 * 60;\n\n  static ms = 24 * 60 * 60 * 1000;\n\n  constructor(value: number) {\n    this.value = value;\n  }\n\n  toHours() {\n    return this.value * Days.hours;\n  }\n\n  toMinutes() {\n    return this.value * Days.minutes;\n  }\n\n  toSeconds() {\n    return this.value * Days.seconds;\n  }\n\n  toMs() {\n    return this.value * Days.ms;\n  }\n}\n\nexport class Hours {\n  value: number;\n\n  static minutes = 60;\n\n  static seconds = 60 * 60;\n\n  static ms = 60 * 60 * 1000;\n\n  constructor(value: number) {\n    this.value = value;\n  }\n\n  toMinutes() {\n    return this.value * Hours.minutes;\n  }\n\n  toSeconds() {\n    return this.value * Hours.seconds;\n  }\n\n  toMs() {\n    return this.value * Hours.ms;\n  }\n}\n\nexport class Minutes {\n  value: number;\n\n  static seconds = 60;\n\n  static ms = 60 * 1000;\n\n  constructor(value: number) {\n    this.value = value;\n  }\n\n  toSeconds() {\n    return this.value * Minutes.seconds;\n  }\n\n  toMs() {\n    return this.value * Minutes.ms;\n  }\n}\n\nexport class Seconds {\n  value: number;\n\n  static ms = 1000;\n\n  constructor(value: number) {\n    this.value = value;\n  }\n\n  toMs() {\n    return this.value * Seconds.ms;\n  }\n}\n\nexport class MiliSeconds {\n  value: number;\n\n  constructor(value: number) {\n    this.value = value;\n  }\n\n  toMs() {\n    return this.value;\n  }\n}\n\nexport const Time = { Days, Hours, Minutes, Seconds };\n","import { useState, useEffect } from \"react\";\n\nexport type UseExpandableListConfigType = { max: number; length: number };\n\nexport enum UseExpandableListState {\n  contracted = \"contracted\",\n  expanded = \"expanded\",\n}\n\nexport function useExpandableList(config: UseExpandableListConfigType) {\n  const numberOfExcessiveElements = config.length - config.max;\n  const areThereExcessiveElements = config.length > config.max;\n\n  function getState() {\n    return areThereExcessiveElements\n      ? UseExpandableListState.contracted\n      : UseExpandableListState.expanded;\n  }\n\n  const [state, setState] = useState<UseExpandableListState>(getState);\n\n  useEffect(() => setState(getState()), [config.length, config.max]);\n\n  function showMore() {\n    if (state === UseExpandableListState.contracted) {\n      setState(UseExpandableListState.expanded);\n    }\n  }\n\n  function showLess() {\n    if (state === UseExpandableListState.expanded) {\n      setState(UseExpandableListState.contracted);\n    }\n  }\n\n  function filterFn(_element: any, index: number) {\n    if (state === UseExpandableListState.expanded) return true;\n    return index < config.max;\n  }\n\n  return {\n    state,\n    displayShowMore: state === UseExpandableListState.contracted,\n    displayShowLess:\n      state === UseExpandableListState.expanded && areThereExcessiveElements,\n    showMore,\n    showLess,\n    numberOfExcessiveElements,\n    filterFn,\n  };\n}\n","import { useState } from \"react\";\n\nexport type UseFileConfigType = {\n  maxSize?: number;\n};\n\nexport enum UseFileState {\n  \"idle\" = \"idle\",\n  \"selected\" = \"selected\",\n  \"error\" = \"error\",\n}\n\ntype UseFileIdle = {\n  state: UseFileState.idle;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n};\n\ntype UseFileSelected = {\n  state: UseFileState.selected;\n  data: File;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n    previewFile: () => ReturnType<typeof URL.createObjectURL> | undefined;\n  };\n};\n\ntype UseFileError = {\n  state: UseFileState.error;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n};\n\nexport type UseFileReturnType = UseFileIdle | UseFileSelected | UseFileError;\n\nexport function useFile(config?: UseFileConfigType): UseFileReturnType {\n  const maxSize = config?.maxSize ?? Infinity;\n\n  const [state, setState] = useState<UseFileState>(UseFileState.idle);\n\n  const [file, setFile] = useState<File | null>(null);\n\n  function selectFile(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.currentTarget.files;\n\n    if (!files || !files[0]) return;\n\n    const file = files[0];\n\n    if (file.size > maxSize) {\n      setState(UseFileState.error);\n      return undefined;\n    }\n\n    setFile(file);\n    setState(UseFileState.selected);\n\n    return file;\n  }\n\n  function clearFile() {\n    setFile(null);\n    setState(UseFileState.idle);\n  }\n\n  function previewFile() {\n    if (!file) return undefined;\n    return URL.createObjectURL(file);\n  }\n\n  if (state === UseFileState.idle) {\n    return { state, data: null, actions: { selectFile, clearFile } };\n  }\n\n  if (state === UseFileState.selected) {\n    return {\n      state,\n      data: file as File,\n      actions: { selectFile, clearFile, previewFile },\n    };\n  }\n\n  return { state, data: null, actions: { selectFile, clearFile } };\n}\n","import { useState, useEffect } from \"react\";\nimport { Time } from \"../time\";\n\nexport type CurrentTimestampType = number;\n\nexport function getCurrentTimestamp(): CurrentTimestampType {\n  return Date.now();\n}\n\nexport function useCurrentTimestamp(): CurrentTimestampType {\n  const [timestamp, setTimestamp] =\n    useState<CurrentTimestampType>(getCurrentTimestamp);\n\n  useEffect(() => {\n    const timer = setInterval(\n      () => setTimestamp(getCurrentTimestamp()),\n      new Time.Seconds(1).toMs()\n    );\n\n    return () => clearInterval(timer);\n  }, []);\n\n  return timestamp;\n}\n","import { useState, useEffect } from \"react\";\nimport { usePreviousValue } from \"./use-previous-value\";\nimport { noop } from \"../noop\";\n\nexport type UseFilterQueryType = string | undefined;\n\nexport type UseFilterConfigType<T> = {\n  enum: { [key: string]: UseFilterQueryType };\n  defaultQuery?: UseFilterQueryType;\n  currentQuery?: UseFilterQueryType;\n  filterFn?: (value: T) => boolean;\n  onUpdate?: (\n    current: UseFilterQueryType,\n    previous: UseFilterQueryType\n  ) => void;\n};\n\nexport function useFilter<T = string>(config: UseFilterConfigType<T>) {\n  const defaultQuery = config.defaultQuery ?? undefined;\n  const currentQuery = config.currentQuery ?? undefined;\n\n  const filterFn = config.filterFn ?? defaultFilterFn;\n  const options = Object.keys(config.enum);\n  const onUpdate = config?.onUpdate ?? noop;\n\n  const [query, setQuery] = useState<UseFilterQueryType>(\n    currentQuery ?? defaultQuery\n  );\n  const previousQuery = usePreviousValue(query);\n\n  function clear() {\n    setQuery(defaultQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newQuery = event.currentTarget.value;\n\n    const isNewQueryInEnum = Boolean(config.enum[String(newQuery)]);\n\n    setQuery(isNewQueryInEnum ? newQuery : undefined);\n  }\n\n  function defaultFilterFn(value: T) {\n    if (query === undefined) return true;\n\n    return query === String(value);\n  }\n\n  useEffect(() => {\n    onUpdate(query, previousQuery);\n  }, [previousQuery, query]);\n\n  return { query, clear, onChange, filterFn, options, onUpdate };\n}\n","export type ImagePathType = string | undefined;\n\nexport type ImageResolutionType = {\n  width: number | null;\n  height: number | null;\n};\n\nexport const emptyImageResolution: ImageResolutionType = {\n  width: null,\n  height: null,\n};\n\nexport async function getImageResolution(\n  path: ImagePathType\n): Promise<ImageResolutionType> {\n  if (!path) return emptyImageResolution;\n\n  const img = document.createElement(\"img\");\n\n  const promise = new Promise<ImageResolutionType>((resolve, reject) => {\n    img.onload = () => resolve({ width: img.width, height: img.height });\n    img.onerror = reject;\n  });\n\n  img.src = path;\n\n  return promise;\n}\n","import { useState } from \"react\";\n\nexport type UseToggleReturnType = {\n  on: boolean;\n  off: boolean;\n  enable: VoidFunction;\n  disable: VoidFunction;\n  toggle: VoidFunction;\n};\n\nexport function useToggle(defaultValue = false): UseToggleReturnType {\n  const [on, setIsOn] = useState(defaultValue);\n\n  const enable = () => setIsOn(true);\n  const disable = () => setIsOn(false);\n  const toggle = () => setIsOn((v) => !v);\n\n  return { on, off: !on, enable, disable, toggle };\n}\n","import React from \"react\";\nimport { useToggle } from \"./use-toggle\";\n\ntype OnlineStatusType = boolean;\n\nexport const useIsOnline = (): OnlineStatusType => {\n  const onlineStatus = useToggle(getOnlineStatus());\n\n  React.useEffect(() => {\n    function handleOnline() {\n      onlineStatus.enable();\n    }\n\n    function handleOffline() {\n      onlineStatus.disable();\n    }\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  return onlineStatus.on;\n};\n\n// Check if browser supports `navigator.onLine`,\n// otherwise, we assume the user is online.\nfunction getOnlineStatus(): OnlineStatusType {\n  return typeof navigator !== \"undefined\" &&\n    typeof navigator.onLine === \"boolean\"\n    ? navigator.onLine\n    : true;\n}\n","import { RefObject, useEffect, useState } from \"react\";\n\nexport const defaultUseIsVisibleConfig = {\n  threshold: 0,\n  root: null,\n  rootMargin: \"0%\",\n  ref: { current: null },\n};\n\nexport function isIntersectionObserverSupported() {\n  return (\n    \"IntersectionObserver\" in window &&\n    \"IntersectionObserverEntry\" in window &&\n    \"intersectionRatio\" in window.IntersectionObserverEntry.prototype\n  );\n}\n\nexport type UseIsVisibleConfigType = IntersectionObserverInit & {\n  ref: RefObject<Element>;\n};\n\nexport type UseIsVisibleReturnType = boolean;\n\nexport function useIsVisible(\n  config: UseIsVisibleConfigType = defaultUseIsVisibleConfig\n): UseIsVisibleReturnType {\n  const [isVisible, setVisible] = useState<UseIsVisibleReturnType>(false);\n\n  useEffect(() => {\n    const element = config.ref.current;\n\n    if (!isIntersectionObserverSupported() || !element) return;\n\n    const observer = new IntersectionObserver(\n      (entry) => setVisible(Boolean(entry[0]?.isIntersecting)),\n      config\n    );\n\n    observer.observe(element);\n\n    return () => observer.unobserve(element);\n  }, []);\n\n  return isVisible;\n}\n","import React from \"react\";\nimport tinykeys from \"tinykeys\";\n\nexport interface UseKeyboardShortcurtsConfigType {\n  [keybinding: string]: (event: KeyboardEvent) => void;\n}\n\nexport function useKeyboardShortcurts(config: UseKeyboardShortcurtsConfigType) {\n  React.useEffect(() => {\n    const unsubscribeShortcuts = tinykeys(window, config);\n\n    return () => unsubscribeShortcuts();\n  }, [config]);\n}\n","import { useState, SetStateAction, Dispatch } from \"react\";\n\nexport type UseListActionsType<T> = {\n  clear: VoidFunction;\n  add: (x: T | T[]) => void;\n  remove: (x: T) => void;\n  toggle: (x: T) => void;\n  isAdded: (x: T) => boolean;\n  update: Dispatch<SetStateAction<T[]>>;\n};\n\nexport type UseListReturnType<T> = [T[], UseListActionsType<T>];\n\nexport type UseListConfigType<T> = {\n  defaultItems?: T[];\n  comparisonFn?: (a: T, b: T) => boolean;\n};\n\nexport function useList<T>(\n  config?: UseListConfigType<T>\n): UseListReturnType<T> {\n  const defaultItems = config?.defaultItems ?? [];\n\n  const defaultComparisonFn = (a: T, b: T) => a === b;\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [items, setItems] = useState<T[]>(defaultItems);\n\n  function clear() {\n    setItems([]);\n  }\n\n  function add(payload: T | T[]) {\n    setItems((items) => {\n      if (Array.isArray(payload)) {\n        return [...items, ...payload];\n      }\n      return [...items, payload];\n    });\n  }\n\n  function remove(item: T) {\n    setItems((items) => items.filter((x) => !comparisonFn(x, item)));\n  }\n\n  function isAdded(item: T) {\n    return items.some((x) => comparisonFn(x, item));\n  }\n\n  function toggle(item: T) {\n    isAdded(item) ? remove(item) : add(item);\n  }\n\n  return [items, { clear, add, remove, toggle, isAdded, update: setItems }];\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useScrollLock(condition = true) {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overflows\n    const originalBodyOverflow = window.getComputedStyle(body).overflow;\n    const originalHtmlOverflow = window.getComputedStyle(html).overflow;\n\n    // Prevent scrolling on mount\n    body.style.overflow = \"hidden\";\n    html.style.overflow = \"hidden\";\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      body.style.overflow = originalBodyOverflow;\n      html.style.overflow = originalHtmlOverflow;\n    };\n  }, [condition]);\n}\n","import { noop } from \"./noop\";\n\nexport type CopyToClipboardTextType = string;\ntype OnCopyToClipboardFailureType = (error?: unknown) => void;\ntype OnCopyToClipboardSuccessType = VoidFunction;\n\nconst defaultOnCopyToClipboardFailure: OnCopyToClipboardFailureType = (error) =>\n  console.warn(\"Copying to clipboard not supported\");\n\nexport type CopyToClipboardOptionsType = {\n  text: string;\n  onFailure?: OnCopyToClipboardFailureType;\n  onSuccess?: OnCopyToClipboardSuccessType;\n};\n\nexport async function copyToClipboard(options: CopyToClipboardOptionsType) {\n  const onFailure = options.onFailure ?? defaultOnCopyToClipboardFailure;\n  const onSuccess = options.onSuccess ?? noop;\n\n  if (!navigator.clipboard) onFailure();\n\n  try {\n    await navigator.clipboard.writeText(options.text);\n    onSuccess();\n  } catch (error) {\n    onFailure(error);\n  }\n}\n","export type DateType = Date | number | null | undefined;\n\nexport class DateFormatter {\n  static datetime(date: DateType, defaultValue = \"N/A\"): string {\n    if (!date) return defaultValue;\n\n    return new Date(date).toLocaleString();\n  }\n\n  static form(date: Date | null): string {\n    if (!date) return DateFormatter.form(new Date());\n\n    const year = DateFormatter._pad(date.getFullYear());\n    const month = DateFormatter._pad(date.getMonth() + 1);\n    const day = DateFormatter._pad(date.getDate());\n\n    return `${year}-${month}-${day}`;\n  }\n\n  static clockUTC(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._pad(date.getUTCHours());\n    const minutes = DateFormatter._pad(date.getUTCMinutes());\n    const seconds = DateFormatter._pad(date.getUTCSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static clockLocal(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._pad(date.getHours());\n    const minutes = DateFormatter._pad(date.getMinutes());\n    const seconds = DateFormatter._pad(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static countdown(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._pad(date.getHours());\n    const minutes = DateFormatter._pad(date.getMinutes());\n    const seconds = DateFormatter._pad(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static _pad(value: number) {\n    return String(value).padStart(2, \"0\");\n  }\n}\n","export type FilterType = Record<string, unknown> | undefined;\n\nexport class FilterUrl {\n  value: string;\n\n  constructor(url: string, filters?: FilterType) {\n    const query = new URLSearchParams(this.getNonEmptyFilters(filters));\n\n    if (query.toString() === \"\") {\n      this.value = url;\n\n      return;\n    }\n\n    this.value = `${url}?${query.toString()}`;\n  }\n\n  private getNonEmptyFilters(filters: FilterType) {\n    if (filters === undefined) return {};\n\n    return Object.fromEntries(\n      Object.entries(filters).filter(([_key, value]) => value !== undefined)\n    ) as Record<string, string>;\n  }\n}\n","import type { UseInfiniteQueryResult } from \"react-query\";\nimport type { Paged } from \"@bgord/node\";\n\nexport class Pagination {\n  static empty = { result: [], meta: { exhausted: true } };\n\n  static extract<T>(infinite: UseInfiniteQueryResult<Paged<T>>): T[] {\n    return (\n      infinite.data?.pages\n        ?.flat()\n        .map((data) => data.result)\n        .flat() ?? []\n    );\n  }\n}\n\nexport type { Paged } from \"@bgord/node\";\n","import type { Falsy, Schema } from \"@bgord/node\";\n\ntype PluralizeWordType = string;\ntype PluralizeValueType = Falsy<number>;\n\nexport type PluralizeOptionsType = {\n  value: PluralizeValueType;\n  singular: PluralizeWordType;\n  plural?: PluralizeWordType;\n  language: Schema.LanguageType;\n};\n\nexport function pluralize(options: PluralizeOptionsType): PluralizeWordType {\n  if (options.language !== \"en\") {\n    console.warn(\n      `[@bgord/frontend] missing pluralization fuction for language ${options.language}.`\n    );\n\n    return options.singular;\n  }\n\n  const plural = options.plural ?? `${options.singular}s`;\n\n  if (options.value === 1) return options.singular;\n  return plural;\n}\n","export type ServerErrorConfigType = {\n  message: string;\n};\n\nexport class ServerError {\n  message: ServerErrorConfigType[\"message\"];\n\n  _known = true;\n\n  constructor(config: ServerErrorConfigType) {\n    this.message = config.message;\n  }\n\n  static isServerError(value: unknown): value is ServerError {\n    if (\n      value &&\n      typeof value === \"object\" &&\n      value === Object(value) &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"_known\") &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"message\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  static async extract(response: Response) {\n    if (response.ok) return response;\n\n    const error = await response.json();\n\n    const message = ServerError.isServerError(error)\n      ? error.message\n      : \"app.error.general\";\n\n    throw new ServerError({ message });\n  }\n\n  static async handle(payload: unknown): Promise<Response> {\n    throw new ServerError({\n      message: ServerError.isServerError(payload)\n        ? payload.message\n        : \"app.error.general\",\n    });\n  }\n}\n","import React from \"react\";\nimport { useList } from \"./hooks/use-list\";\n\nexport type ToastsConfigType = {\n  timeout?: number;\n};\n\nexport type BaseToastType = {\n  id: string;\n  message: string;\n};\n\ntype ToastsContextDataType<ToastType extends BaseToastType = BaseToastType> = [\n  ToastType[],\n  {\n    add: (toast: Omit<ToastType, \"id\">) => void;\n    remove: (toast: ToastType) => void;\n    clear: VoidFunction;\n  }\n];\n\nconst ToastsContext = React.createContext<ToastsContextDataType | undefined>(\n  undefined\n);\n\nexport function ToastsContextProvider(\n  props: { children: JSX.Element | JSX.Element[] } & ToastsConfigType\n) {\n  function useToastsImplementation(): ToastsContextDataType {\n    const timeout = props?.timeout ?? 5000;\n\n    const [toasts, actions] = useList<BaseToastType>({\n      comparisonFn: (a, b) => a.id === b.id,\n    });\n\n    function add(payload: Omit<BaseToastType, \"id\">) {\n      const id = String(Date.now());\n      const toast = { ...payload, id };\n\n      actions.add(toast);\n      setTimeout(() => actions.remove(toast), timeout);\n    }\n\n    return [\n      [...toasts].reverse(),\n      { add, remove: actions.remove, clear: actions.clear },\n    ];\n  }\n\n  const [toasts, actions] = useToastsImplementation();\n\n  return (\n    <ToastsContext.Provider value={[toasts, actions]}>\n      {props.children}\n    </ToastsContext.Provider>\n  );\n}\n\nexport function useToastsContext<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const context = React.useContext<ToastsContextDataType<ToastType>>(\n    ToastsContext as unknown as React.Context<ToastsContextDataType<ToastType>>\n  );\n\n  if (context === undefined) {\n    throw new Error(`useToasts must be used within the ToastsContextProvider`);\n  }\n\n  return context;\n}\n\nexport function useToastTrigger<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const [, actions] = useToastsContext<ToastType>();\n\n  return actions.add;\n}\n","import React from \"react\";\nimport type {\n  TranslationsType,\n  TranslationsKeyType,\n  Schema,\n} from \"@bgord/node\";\nimport { pluralize, PluralizeOptionsType } from \"./pluralize\";\n\ntype TranslationsContextValueType = {\n  translations: TranslationsType;\n  language: Schema.LanguageType;\n};\n\ntype TranslationPlaceholderType = string;\ntype TranslationPlaceholderValueType = string | number;\ntype TranslationVariableType = Record<\n  TranslationPlaceholderType,\n  TranslationPlaceholderValueType\n>;\n\nconst TranslationsContext = React.createContext<TranslationsContextValueType>({\n  translations: {},\n  language: \"en\",\n});\n\ntype TranslationsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: TranslationsContextValueType;\n};\n\nexport function TranslationsContextProvider(\n  props: TranslationsContextPropsType\n) {\n  return (\n    <TranslationsContext.Provider value={props.value}>\n      {props.children}\n    </TranslationsContext.Provider>\n  );\n}\n\nexport function useTranslations() {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useTranslations must be used within the TranslationsContext`\n    );\n  }\n\n  function translate(\n    key: TranslationsKeyType,\n    variables?: TranslationVariableType\n  ) {\n    const translation = value.translations[key];\n\n    if (!translation) {\n      console.warn(`[@bgord/frontend] missing translation for key: ${key}`);\n      return key;\n    }\n\n    if (!variables) return translation;\n\n    return Object.entries(variables).reduce(\n      (result, [placeholder, value]) =>\n        result.replace(`{{${placeholder}}}`, String(value)),\n      translation\n    );\n  }\n\n  return translate;\n}\n\nexport function useLanguage(): TranslationsContextValueType[\"language\"] {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(`useLanguage must be used within the TranslationsContext`);\n  }\n\n  return value.language;\n}\n\nexport function usePluralize() {\n  const language = useLanguage();\n\n  return (options: Omit<PluralizeOptionsType, \"language\">) =>\n    pluralize({ ...options, language });\n}\n","import * as React from \"react\";\n\nimport { DurationFormatter } from \"../durations\";\nimport { useField } from \"./use-field\";\n\nexport const AUDIO_DEFAULT_VOLUME = 1;\n\nexport type UseAudioSrcType = string;\n\nexport type UseAudioStateType = \"initial\" | \"ready\" | \"playing\" | \"paused\";\n\nexport function useAudio(src: UseAudioSrcType) {\n  const [state, setState] = React.useState<UseAudioStateType>(\"initial\");\n\n  const ref = React.useRef<HTMLAudioElement | null>(null);\n\n  const duration = useField<number>(0);\n  const currentTime = useField<number>(0);\n  const volume = useField<number>(AUDIO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (ref.current) {\n      ref.current.play();\n      setState(\"playing\");\n    }\n  }\n\n  function pause() {\n    if (ref.current) {\n      ref.current.pause();\n      setState(\"paused\");\n    }\n  }\n\n  function reset() {\n    if (ref.current) {\n      ref.current.currentTime = 0;\n      ref.current.pause();\n      currentTime.set(0);\n      setState(\"paused\");\n    }\n  }\n\n  function mute() {\n    if (ref.current) {\n      ref.current.volume = 0;\n      volume.set(0);\n    }\n  }\n\n  function unmute() {\n    if (ref.current) {\n      ref.current.volume = AUDIO_DEFAULT_VOLUME;\n      volume.set(AUDIO_DEFAULT_VOLUME);\n    }\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.currentTime = target.valueAsNumber;\n      currentTime.set(target.valueAsNumber);\n    }\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLAudioElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(\"ready\");\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLAudioElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(\"paused\");\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.volume = target.valueAsNumber;\n      volume.set(target.valueAsNumber);\n    }\n  }\n\n  return {\n    props: {\n      audio: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: { play, pause, mute, unmute, reset, seek, changeVolume },\n    meta: {\n      state,\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import React from \"react\";\n\nimport * as hooks from \"../hooks\";\n\nexport type DialogPropsType = hooks.UseToggleReturnType &\n  JSX.IntrinsicElements[\"dialog\"];\n\nexport function Dialog(props: DialogPropsType) {\n  const { disable, enable, on, off, toggle, ...rest } = props;\n  const ref = React.useRef<HTMLDialogElement>(null);\n\n  React.useEffect(() => {\n    if (props.on) {\n      // @ts-ignore\n      ref.current?.showModal();\n    } else {\n      // @ts-ignore\n      ref.current?.close();\n    }\n  }, [props.on]);\n\n  hooks.useKeyboardShortcurts({ Escape: disable });\n  hooks.useAutofocus({ ref, condition: props.on });\n  hooks.useScrollLock(props.on);\n\n  return (\n    <dialog\n      ref={ref}\n      tabIndex={0}\n      data-display={props.on ? \"flex\" : \"none\"}\n      data-direction=\"column\"\n      data-mx=\"auto\"\n      data-p=\"24\"\n      data-position=\"absolute\"\n      data-z=\"2\"\n      data-bg=\"white\"\n      data-br=\"4\"\n      data-bc=\"gray-300\"\n      data-bw=\"1\"\n      data-backdrop=\"black\"\n      {...rest}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { useIsOnline } from \"../hooks\";\n\nexport function OfflineIndicator(props: { children: React.ReactChild }) {\n  const isOnline = useIsOnline();\n\n  if (isOnline) return null;\n\n  return <>{props.children}</>;\n}\n","import React from \"react\";\nimport type { PolymorphicPropsWithoutRef } from \"react-polymorphic-types\";\n\nconst OutboundLinkDefaultElement = \"a\";\n\nexport function OutboundLink<\n  T extends React.ElementType = typeof OutboundLinkDefaultElement\n>(props: PolymorphicPropsWithoutRef<{}, T>) {\n  const { as, ...rest } = props;\n\n  const Element = as || OutboundLinkDefaultElement;\n\n  return <Element target=\"_blank\" rel=\"noreferer noopener\" {...rest} />;\n}\n","import { getSafeWindow } from \"./safe-window\";\n\nexport function isClient() {\n  return !getSafeWindow();\n}\n","import { useWindowDimensions } from \"./use-window-dimensions\";\n\nexport type BreakpointType = number;\n\nexport function useBreakpoint(breakpoint: BreakpointType): boolean {\n  const dimensions = useWindowDimensions();\n  const width = dimensions?.width ?? 0;\n\n  return width <= breakpoint;\n}\n","import React from \"react\";\n\nexport function useClickOutside(\n  ref: React.RefObject<HTMLElement>,\n  onClickOutside: VoidFunction,\n  exclude?: React.RefObject<HTMLElement>[]\n) {\n  React.useEffect(() => {\n    if (!ref.current) return;\n\n    function handleClickOutside(event: MouseEvent) {\n      // Check if click event happened outside the `ref`\n      // so the `onClickOutside` callback `may` be fired.\n      if (!ref.current?.contains(event.target as Node)) {\n        // The second check is to check if some `exclude`d node\n        // outside the `ref` node has been clicked.\n        const isExcludedNodeClicked = exclude?.some((node) =>\n          node.current?.contains(event.target as Node)\n        );\n\n        // `onClickOutside` callback is fired if the click event\n        // happened outside both `ref` node and `exclude`d nodes.\n        if (!isExcludedNodeClicked) {\n          onClickOutside();\n        }\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [onClickOutside, ref, exclude]);\n}\n","import { useState } from \"react\";\n\nexport type UseClientSearchQueryType = string;\n\nexport type UseClientSearchReturnType = {\n  query: UseClientSearchQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: (value: string) => boolean;\n};\n\nexport function useClientSearch(): UseClientSearchReturnType {\n  const emptyQuery: UseClientSearchQueryType = \"\";\n\n  const [query, setValue] = useState<UseClientSearchQueryType>(emptyQuery);\n\n  function clear() {\n    setValue(emptyQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setValue(event.currentTarget.value);\n  }\n\n  function filterFn(value: string) {\n    if (query === emptyQuery) return true;\n\n    return value?.toLowerCase().includes(query.toLowerCase());\n  }\n\n  return { query, clear, onChange, filterFn };\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useDisablePullToRefresh(condition = true) {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overscroll behaviors\n    const originalHtmlOverscrollBehavior =\n      window.getComputedStyle(html).overscrollBehavior;\n    const originalBodyOverflowBehavior =\n      window.getComputedStyle(body).overscrollBehavior;\n\n    // Disable pull to refresh\n    body.style.overscrollBehavior = \"none\";\n    html.style.overscrollBehavior = \"none\";\n\n    // Enable pull to refresh when component unmounts\n    return () => {\n      body.style.overscrollBehavior = originalBodyOverflowBehavior;\n      html.style.overscrollBehavior = originalHtmlOverscrollBehavior;\n    };\n  }, [condition]);\n}\n","import React from \"react\";\n\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { UseFileReturnType, UseFileState } from \"./use-file\";\nimport {\n  getImageResolution,\n  ImageResolutionType,\n  emptyImageResolution,\n} from \"../get-image-resolution\";\n\nexport function useImageFileResolution(\n  file: UseFileReturnType\n): ImageResolutionType {\n  const resolution = useField<ImageResolutionType>(emptyImageResolution);\n\n  React.useEffect(() => {\n    async function execute() {\n      if (file.state === UseFileState.selected) {\n        try {\n          const result = await getImageResolution(file.actions.previewFile());\n\n          return resolution.set(result);\n        } catch (error) {\n          return resolution.clear();\n        }\n      }\n\n      if (\n        [UseFileState.error, UseFileState.idle].includes(file.state) &&\n        resolution.value.width !== null &&\n        resolution.value.height !== null\n      ) {\n        resolution.clear();\n      }\n    }\n\n    execute();\n  }, [file.state, file.data?.name]);\n\n  return resolution.value;\n}\n","import React from \"react\";\n\nexport type UseLeavingPromptConditionType = boolean;\n\nexport function useLeavingPrompt(\n  condition: UseLeavingPromptConditionType = false\n) {\n  React.useEffect(() => {\n    if (!condition) return;\n\n    function handler(e: BeforeUnloadEvent) {\n      e.preventDefault();\n    }\n\n    window.addEventListener(\"beforeunload\", handler);\n\n    return () => window.removeEventListener(\"beforeunload\", handler);\n  }, [condition]);\n}\n","export type SoundSourceType = string;\n\nexport type UseSoundReturnType = { play: VoidFunction };\n\nexport function useSound(src: SoundSourceType): UseSoundReturnType {\n  const audio = new Audio(src);\n\n  return { play: audio.play.bind(audio) };\n}\n","import { useFilter, UseFilterConfigType } from \"./use-filter\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type UseUrlFilterConfigType<T> = UseFilterConfigType<T> & {\n  label: string;\n};\n\nexport function useUrlFilter<T>(config: UseUrlFilterConfigType<T>) {\n  const safeWindow = getSafeWindow();\n\n  const currentQuery =\n    new URLSearchParams(safeWindow?.location.search).get(config.label) ??\n    undefined;\n\n  return useFilter({\n    onUpdate: (current, previous) => {\n      if (!safeWindow) return;\n\n      const url = new URL(safeWindow.location.toString());\n      const params = new URLSearchParams(url.search);\n\n      if (current === undefined) {\n        params.delete(config.label);\n      } else {\n        params.set(config.label, current);\n      }\n\n      if (current === previous) return;\n\n      if (current !== previous) {\n        url.search = params.toString();\n        history.pushState({}, \"\", url.toString());\n      }\n    },\n    ...config,\n    defaultQuery: config.defaultQuery,\n    currentQuery: currentQuery,\n  });\n}\n"],"names":["value","defaultValue","useRef","useEffect","previousValue","current","AnimaState","DurationFormatter","format","duration","Math","floor","String","minutes","padStart","seconds","useState","evaluatedDefaultValue","setValue","set","clear","config","React","condition","ref","_config$ref$current","focus","width","undefined","height","windowSize","setWindowSize","getSafeWindow","safeWindow","addEventListener","handleResize","removeEventListener","innerWidth","innerHeight","Days","this","toHours","hours","toMinutes","toSeconds","toMs","ms","Hours","Minutes","Seconds","MiliSeconds","UseExpandableListState","UseFileState","now","defaultQuery","currentQuery","filterFn","query","Object","keys","onUpdate","noop","setQuery","usePreviousValue","previousQuery","onChange","event","currentTarget","Boolean","newQuery","isNewQueryInEnum","options","getImageResolution","path","emptyImageResolution","document","createElement","resolve","reject","img","onload","onerror","src","promise","on","setIsOn","off","enable","disable","toggle","v","useIsOnline","useToggle","onLine","navigator","onlineStatus","window","handleOnline","handleOffline","threshold","root","rootMargin","IntersectionObserverEntry","prototype","tinykeys","defaultItems","comparisonFn","a","b","items","setItems","payload","Array","isArray","item","filter","x","some","add","remove","isAdded","update","useLayoutEffect","querySelector","body","getComputedStyle","overflow","html","style","originalBodyOverflow","originalHtmlOverflow","error","warn","datetime","date","toLocaleString","form","DateFormatter","_pad","getFullYear","getMonth","getDate","clockUTC","timestamp","getUTCHours","getUTCMinutes","getUTCSeconds","clockLocal","getHours","getMinutes","getSeconds","countdown","url","filters","getNonEmptyFilters","toString","fromEntries","entries","extract","infinite","data","_infinite$data","pages","_infinite$data$pages","flat","map","result","language","console","singular","plural","Pagination","empty","meta","exhausted","ServerError","message","_known","isServerError","hasOwnProperty","response","ok","json","handle","createContext","useContext","ToastsContext","context","translations","TranslationsContext","props","visible","isInitial","appeared","appearing","hidden","state","setState","setTimeout","previousState","hidding","cloneElement","children","effect","rest","setIsInitial","child","_ref$current","showModal","_ref$current2","close","hooks","Escape","tabIndex","as","target","rel","actions","timeout","useList","id","reverse","Date","toast","Provider","onFailure","defaultOnCopyToClipboardFailure","onSuccess","clipboard","writeText","text","list","direction","officialList","setOfficialList","added","push","length","every","deleted","find","y","updated","count","useField","volume","round","currentTime","valueAsNumber","audio","onTimeUpdate","onLoadedMetadata","onEnded","controls","player","min","step","max","onInput","seek","percentage","changeVolume","play","pause","mute","unmute","reset","raw","formatted","muted","breakpoint","useWindowDimensions","dimensions","onClickOutside","exclude","handleClickOutside","contains","node","_node$current","toLowerCase","includes","getCurrentTimestamp","setTimestamp","setInterval","timer","overscrollBehavior","originalBodyOverflowBehavior","originalHtmlOverscrollBehavior","title","contracted","expanded","getState","displayShowMore","displayShowLess","areThereExcessiveElements","showMore","showLess","numberOfExcessiveElements","_element","index","maxSize","Infinity","idle","file","setFile","files","size","selected","selectFile","clearFile","previewFile","createObjectURL","resolution","execute","_file$data","name","defaultUseIsVisibleConfig","isVisible","setVisible","isIntersectionObserverSupported","element","entry","_entry$","isIntersecting","observer","observe","unobserve","handler","e","preventDefault","useLanguage","bind","useToastsContext","key","variables","translation","reduce","replace","location","search","get","label","previous","params","history","pushState"],"mappings":"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"}