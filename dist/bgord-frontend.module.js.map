{"version":3,"file":"bgord-frontend.module.js","sources":["../hooks/use-previous-value.ts","../anima.tsx","../components/outbound-link.tsx","../dates.ts","../hooks/use-expandable-list.ts","../hooks/use-file.ts","../filter-url.ts","../safe-window.ts","../hooks/use-window-dimensions.ts","../hooks/use-breakpoint.ts","../hooks/use-client-search.ts","../hooks/use-field.ts","../noop.ts","../hooks/use-filter.ts","../hooks/use-list.ts","../hooks/use-scroll-lock.ts","../hooks/use-toggle.ts","../hooks/use-url-filter.ts","../server-error.ts","../toasts.tsx","../translations.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport function usePreviousValue<T>(value: T, defaultValue?: T | undefined) {\n  const previousValue = useRef<T | undefined>(defaultValue);\n\n  useEffect(() => {\n    previousValue.current = value;\n  });\n\n  return previousValue.current;\n}\n","import React from \"react\";\n\nimport { usePreviousValue } from \"./hooks/use-previous-value\";\n\nexport enum AnimaState {\n  appearing = \"appearing\",\n  appeared = \"appeared\",\n  hidding = \"hidding\",\n  hidden = \"hidden\",\n}\n\nexport type AnimaEffectType = string;\n\nexport type AnimaConfigType = {\n  children: JSX.Element;\n\n  visible: boolean;\n  effect: AnimaEffectType;\n\n  duration?: number;\n  isInitial?: boolean;\n};\n\nexport function Anima(props: AnimaConfigType) {\n  const duration = props.duration ?? 300;\n\n  function getInitialState() {\n    if (!props.visible) return AnimaState.hidden;\n    if (props.isInitial) return AnimaState.appeared;\n    return AnimaState.appearing;\n  }\n\n  const [state, setState] = React.useState<AnimaState>(getInitialState);\n  const previousState = usePreviousValue(state);\n\n  React.useEffect(() => {\n    if (props.isInitial) return;\n\n    if (props.visible) {\n      setState(AnimaState.appearing);\n      setTimeout(() => setState(AnimaState.appeared), 100);\n    } else {\n      if (!previousState) return;\n      setState(AnimaState.hidding);\n      setTimeout(() => setState(AnimaState.hidden), duration);\n    }\n  }, [props.visible]);\n\n  if (state === AnimaState.hidden) return null;\n\n  return React.cloneElement(props.children, {\n    \"data-anima\": state,\n    \"data-anima-effect\": props.effect,\n    style: { \"--duration\": `${duration}ms`, ...props.children.props.style },\n  });\n}\n\nexport function getAnimaProps(props: Record<string, any>) {\n  return {\n    \"data-anima\": props[\"data-anima\"] as AnimaState | undefined,\n    \"data-anima-effect\": props[\"data-anima-effect\"] as\n      | AnimaEffectType\n      | undefined,\n    style: props.style as React.CSSProperties,\n  };\n}\n\nexport type AnimaListPropsType = {\n  children: JSX.Element[];\n} & JSX.IntrinsicElements[\"ul\"];\n\nexport function AnimaList(props: AnimaListPropsType) {\n  const { children, ...rest } = props;\n\n  const [isInitial, setIsInitial] = React.useState<boolean>(true);\n\n  React.useEffect(() => setIsInitial(false), []);\n\n  return (\n    <ul {...rest}>\n      {props.children.map((child) => React.cloneElement(child, { isInitial }))}\n    </ul>\n  );\n}\n\nexport type UseAnimaListDirectionType = \"head\" | \"tail\";\n\nexport type UseAnimaListConfigType = {\n  direction?: UseAnimaListDirectionType;\n  duration?: number;\n};\n\ntype UseAnimaListItemType<T> = { item: T; props: { visible: boolean } };\n\ntype UseAnimaListReturnType<T> = {\n  items: { item: T; props: { visible: boolean } }[];\n  count: number;\n};\n\nexport function useAnimaList<T extends { id: string }>(\n  list: T[],\n  config?: UseAnimaListConfigType\n): UseAnimaListReturnType<T> {\n  const duration = config?.duration ?? 300;\n  const direction = config?.direction ?? \"head\";\n\n  const [officialList, setOfficialList] = React.useState<\n    UseAnimaListItemType<T>[]\n  >(list.map((item) => ({ item, props: { visible: true } })));\n\n  let added: T[] = [];\n\n  for (const item of list) {\n    const wasAdded = !officialList\n      .map((x) => x.item)\n      .some((x) => item.id === x.id);\n\n    if (wasAdded) added.push(item);\n  }\n\n  React.useEffect(() => {\n    if (added.length === 0) return;\n\n    if (direction === \"head\") {\n      setOfficialList((officialList) => [\n        ...added.map((item) => ({ item, props: { visible: true } })),\n        ...officialList,\n      ]);\n    } else {\n      setOfficialList((officialList) => [\n        ...officialList,\n        ...added.map((item) => ({ item, props: { visible: true } })),\n      ]);\n    }\n\n    added = [];\n  }, [added.length, direction]);\n\n  let deleted: T[] = [];\n\n  for (const { item } of officialList) {\n    const wasDeleted = list.every((x) => x.id !== item.id);\n\n    if (wasDeleted) deleted.push(item);\n  }\n\n  React.useEffect(() => {\n    if (deleted.length === 0) return;\n\n    setOfficialList((officialList) =>\n      officialList.map((x) => {\n        const wasDeleted = deleted.some((item) => item.id === x.item.id);\n\n        return wasDeleted ? { ...x, props: { visible: false } } : x;\n      })\n    );\n\n    deleted = [];\n  }, [deleted.length]);\n\n  return {\n    items: officialList.map((item) => {\n      const updated = list.find((y) => y.id === item.item.id);\n      return updated ? { ...item, item: updated } : item;\n    }),\n    count: officialList.filter((x) => x.props.visible).length,\n  };\n}\n","import React from \"react\";\nimport type { PolymorphicPropsWithoutRef } from \"react-polymorphic-types\";\n\nconst OutboundLinkDefaultElement = \"a\";\n\nexport function OutboundLink<\n  T extends React.ElementType = typeof OutboundLinkDefaultElement\n>(props: PolymorphicPropsWithoutRef<{}, T>) {\n  const { as, ...rest } = props;\n\n  const Element = as || OutboundLinkDefaultElement;\n\n  return <Element target=\"_blank\" rel=\"noreferer noopener\" {...rest} />;\n}\n","export type DateType = Date | number | null | undefined;\n\nexport class DateFormatter {\n  static datetime(date: DateType, defaultValue = \"N/A\"): string {\n    if (!date) return defaultValue;\n\n    return new Date(date).toLocaleString();\n  }\n}\n","import { useState, useEffect } from \"react\";\n\nexport type UseExpandableListConfigType = { max: number; length: number };\n\nexport enum UseExpandableListState {\n  contracted = \"contracted\",\n  expanded = \"expanded\",\n}\n\nexport function useExpandableList(config: UseExpandableListConfigType) {\n  const numberOfExcessiveElements = config.length - config.max;\n  const areThereExcessiveElements = config.length > config.max;\n\n  function getState() {\n    return areThereExcessiveElements\n      ? UseExpandableListState.contracted\n      : UseExpandableListState.expanded;\n  }\n\n  const [state, setState] = useState<UseExpandableListState>(getState);\n\n  useEffect(() => setState(getState()), [config.length, config.max]);\n\n  function showMore() {\n    if (state === UseExpandableListState.contracted) {\n      setState(UseExpandableListState.expanded);\n    }\n  }\n\n  function showLess() {\n    if (state === UseExpandableListState.expanded) {\n      setState(UseExpandableListState.contracted);\n    }\n  }\n\n  function filterFn(_element: any, index: number) {\n    if (state === UseExpandableListState.expanded) return true;\n    return index < config.max;\n  }\n\n  return {\n    state,\n    displayShowMore: state === UseExpandableListState.contracted,\n    displayShowLess:\n      state === UseExpandableListState.expanded && areThereExcessiveElements,\n    showMore,\n    showLess,\n    numberOfExcessiveElements,\n    filterFn,\n  };\n}\n","import { useState } from \"react\";\n\nexport type UseFileConfigType = {\n  maxSize?: number;\n};\n\nexport enum UseFileState {\n  \"idle\" = \"idle\",\n  \"selected\" = \"selected\",\n  \"error\" = \"error\",\n}\n\ntype UseFileIdle = {\n  state: UseFileState.idle;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): void;\n    clearFile: VoidFunction;\n  };\n};\n\ntype UseFileSelected = {\n  state: UseFileState.selected;\n  data: File;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): void;\n    clearFile: VoidFunction;\n  };\n};\n\ntype UseFileError = {\n  state: UseFileState.error;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): void;\n    clearFile: VoidFunction;\n  };\n};\n\nexport function useFile(\n  config?: UseFileConfigType\n): UseFileIdle | UseFileSelected | UseFileError {\n  const maxSize = config?.maxSize ?? Infinity;\n\n  const [state, setState] = useState<UseFileState>(UseFileState.idle);\n\n  const [file, setFile] = useState<File | null>(null);\n\n  function selectFile(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.currentTarget.files;\n\n    if (!files || !files[0]) return;\n\n    const file = files[0];\n\n    if (file.size > maxSize) return setState(UseFileState.error);\n\n    setFile(file);\n    setState(UseFileState.selected);\n  }\n\n  function clearFile() {\n    setFile(null);\n    setState(UseFileState.idle);\n  }\n\n  const actions = { selectFile, clearFile };\n\n  if (state === UseFileState.idle) {\n    return { state, data: null, actions };\n  }\n\n  if (state === UseFileState.selected) {\n    return { state, data: file as File, actions };\n  }\n\n  return { state, data: null, actions };\n}\n","export type FilterType = Record<string, unknown> | undefined;\n\nexport class FilterUrl {\n  value: string;\n\n  constructor(url: string, filters?: FilterType) {\n    const query = new URLSearchParams(this.getNonEmptyFilters(filters));\n\n    if (query.toString() === \"\") {\n      this.value = url;\n\n      return;\n    }\n\n    this.value = `${url}?${query.toString()}`;\n  }\n\n  private getNonEmptyFilters(filters: FilterType) {\n    if (filters === undefined) return {};\n\n    return Object.fromEntries(\n      Object.entries(filters).filter(([_key, value]) => value !== undefined)\n    ) as Record<string, string>;\n  }\n}\n","export function getSafeWindow() {\n  if (typeof window === \"undefined\") return undefined;\n  return window;\n}\n","import { useState, useEffect } from \"react\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type WindowDimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowDimensions(): WindowDimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowDimensions>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    const safeWindow = getSafeWindow();\n\n    if (!safeWindow) return;\n\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: safeWindow?.innerWidth,\n        height: safeWindow?.innerHeight,\n      });\n    }\n\n    // Add event listener\n    safeWindow.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => safeWindow.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import { useWindowDimensions } from \"./use-window-dimensions\";\n\nexport type BreakpointType = number;\n\nexport function useBreakpoint(breakpoint: BreakpointType): boolean {\n  const dimensions = useWindowDimensions();\n  const width = dimensions?.width ?? 0;\n\n  return width <= breakpoint;\n}\n","import { useState } from \"react\";\n\nexport type UseClientSearchQueryType = string;\n\nexport type UseClientSearchReturnType = {\n  query: UseClientSearchQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: (value: string) => boolean;\n};\n\nexport function useClientSearch(): UseClientSearchReturnType {\n  const emptyQuery: UseClientSearchQueryType = \"\";\n\n  const [query, setValue] = useState<UseClientSearchQueryType>(emptyQuery);\n\n  function clear() {\n    setValue(emptyQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setValue(event.currentTarget.value);\n  }\n\n  function filterFn(value: string) {\n    if (query === emptyQuery) return true;\n\n    return value?.toLowerCase().includes(query.toLowerCase());\n  }\n\n  return { query, clear, onChange, filterFn };\n}\n","import { useState, useEffect, Dispatch, SetStateAction } from \"react\";\n\nexport type UseFieldDefaultValueType<T> = T | (() => T);\nexport type UseFieldReturnType<T> = {\n  value: T;\n  set: Dispatch<SetStateAction<T>>;\n  clear: VoidFunction;\n};\n\nexport function useField<T>(\n  defaultValue: UseFieldDefaultValueType<T>\n): UseFieldReturnType<T> {\n  const [value, setValue] = useState<T>(defaultValue);\n\n  const evaluatedDefaultValue =\n    // @ts-ignore\n    typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n\n  useEffect(() => {\n    setValue(evaluatedDefaultValue);\n  }, [evaluatedDefaultValue]);\n\n  function clear() {\n    setValue(defaultValue);\n  }\n\n  return { value, set: setValue, clear };\n}\n","export function noop() {}\n","import { useState, useEffect } from \"react\";\nimport { usePreviousValue } from \"./use-previous-value\";\nimport { noop } from \"../noop\";\n\nexport type UseFilterQueryType = string | undefined;\n\nexport type UseFilterConfigType<T> = {\n  enum: { [key: string]: UseFilterQueryType };\n  defaultQuery?: UseFilterQueryType;\n  filterFn?: (value: T) => boolean;\n  onUpdate?: (\n    current: UseFilterQueryType,\n    previous: UseFilterQueryType\n  ) => void;\n};\n\nexport function useFilter<T = string>(config: UseFilterConfigType<T>) {\n  const defaultQuery = config.defaultQuery ?? undefined;\n  const filterFn = config.filterFn ?? defaultFilterFn;\n  const options = Object.keys(config.enum);\n  const onUpdate = config?.onUpdate ?? noop;\n\n  const [query, setQuery] = useState<UseFilterQueryType>(defaultQuery);\n  const previousQuery = usePreviousValue(query);\n\n  function clear() {\n    setQuery(defaultQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newQuery = event.currentTarget.value;\n\n    const isNewQueryInEnum = Boolean(config.enum[String(newQuery)]);\n\n    setQuery(isNewQueryInEnum ? newQuery : undefined);\n  }\n\n  function defaultFilterFn(value: T) {\n    if (query === undefined) return true;\n\n    return query === String(value);\n  }\n\n  useEffect(() => {\n    onUpdate(query, previousQuery);\n  }, [previousQuery, query]);\n\n  return { query, clear, onChange, filterFn, options, onUpdate };\n}\n","import { useState, SetStateAction, Dispatch } from \"react\";\n\nexport type UseListActionsType<T> = {\n  clear: VoidFunction;\n  add: (x: T | T[]) => void;\n  remove: (x: T) => void;\n  toggle: (x: T) => void;\n  isAdded: (x: T) => boolean;\n  update: Dispatch<SetStateAction<T[]>>;\n};\n\nexport type UseListReturnType<T> = [T[], UseListActionsType<T>];\n\nexport type UseListConfigType<T> = {\n  defaultItems?: T[];\n  comparisonFn?: (a: T, b: T) => boolean;\n};\n\nexport function useList<T>(\n  config?: UseListConfigType<T>\n): UseListReturnType<T> {\n  const defaultItems = config?.defaultItems ?? [];\n\n  const defaultComparisonFn = (a: T, b: T) => a === b;\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [items, setItems] = useState<T[]>(defaultItems);\n\n  function clear() {\n    setItems([]);\n  }\n\n  function add(payload: T | T[]) {\n    setItems((items) => {\n      if (Array.isArray(payload)) {\n        return [...items, ...payload];\n      }\n      return [...items, payload];\n    });\n  }\n\n  function remove(item: T) {\n    setItems((items) => items.filter((x) => !comparisonFn(x, item)));\n  }\n\n  function isAdded(item: T) {\n    return items.some((x) => comparisonFn(x, item));\n  }\n\n  function toggle(item: T) {\n    isAdded(item) ? remove(item) : add(item);\n  }\n\n  return [items, { clear, add, remove, toggle, isAdded, update: setItems }];\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useScrollLock(condition = true) {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overflows\n    const originalBodyOverflow = window.getComputedStyle(body).overflow;\n    const originalHtmlOverflow = window.getComputedStyle(html).overflow;\n\n    // Prevent scrolling on mount\n    body.style.overflow = \"hidden\";\n    html.style.overflow = \"hidden\";\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      body.style.overflow = originalBodyOverflow;\n      html.style.overflow = originalHtmlOverflow;\n    };\n  }, [condition]);\n}\n","import { useState } from \"react\";\n\nexport type UseToggleReturnType = {\n  on: boolean;\n  off: boolean;\n  enable: VoidFunction;\n  disable: VoidFunction;\n  toggle: VoidFunction;\n};\n\nexport function useToggle(defaultValue = false): UseToggleReturnType {\n  const [on, setIsOn] = useState(defaultValue);\n\n  const enable = () => setIsOn(true);\n  const disable = () => setIsOn(false);\n  const toggle = () => setIsOn((v) => !v);\n\n  return { on, off: !on, enable, disable, toggle };\n}\n","import { useFilter, UseFilterConfigType } from \"./use-filter\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type UseUrlFilterConfigType<T> = UseFilterConfigType<T> & {\n  label: string;\n};\n\nexport function useUrlFilter<T>(config: UseUrlFilterConfigType<T>) {\n  const safeWindow = getSafeWindow();\n\n  const currentQuery =\n    new URLSearchParams(safeWindow?.location.search).get(config.label) ??\n    undefined;\n\n  return useFilter({\n    onUpdate: (current, previous) => {\n      if (!safeWindow) return;\n\n      const url = new URL(safeWindow.location.toString());\n      const params = new URLSearchParams(url.search);\n\n      if (current === undefined) {\n        params.delete(config.label);\n      } else {\n        params.set(config.label, current);\n      }\n\n      if (current === previous) return;\n\n      if (current !== previous) {\n        url.search = params.toString();\n        history.pushState({}, \"\", url.toString());\n      }\n    },\n    ...config,\n    defaultQuery: currentQuery ?? config.defaultQuery,\n  });\n}\n","export type ServerErrorConfigType = {\n  message: string;\n};\n\nexport class ServerError {\n  message: ServerErrorConfigType[\"message\"];\n\n  _known = true;\n\n  constructor(config: ServerErrorConfigType) {\n    this.message = config.message;\n  }\n\n  static isServerError(value: unknown): value is ServerError {\n    if (\n      value &&\n      typeof value === \"object\" &&\n      value === Object(value) &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"_known\") &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"message\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  static async extract(response: Response) {\n    if (response.ok) return response;\n\n    const error = await response.json();\n\n    const message = ServerError.isServerError(error)\n      ? error.message\n      : \"app.error.general\";\n\n    throw new ServerError({ message });\n  }\n\n  static async handle(payload: unknown): Promise<Response> {\n    throw new ServerError({\n      message: ServerError.isServerError(payload)\n        ? payload.message\n        : \"app.error.general\",\n    });\n  }\n}\n","import React from \"react\";\nimport { useList } from \"./hooks/use-list\";\n\nexport type ToastsConfigType = {\n  timeout?: number;\n};\n\nexport type BaseToastType = {\n  id: string;\n  message: string;\n};\n\ntype ToastsContextDataType<ToastType extends BaseToastType = BaseToastType> = [\n  ToastType[],\n  {\n    add: (toast: Omit<ToastType, \"id\">) => void;\n    remove: (toast: ToastType) => void;\n    clear: VoidFunction;\n  }\n];\n\nconst ToastsContext = React.createContext<ToastsContextDataType | undefined>(\n  undefined\n);\n\nexport function ToastsContextProvider(\n  props: { children: JSX.Element | JSX.Element[] } & ToastsConfigType\n) {\n  function useToastsImplementation(): ToastsContextDataType {\n    const timeout = props?.timeout ?? 5000;\n\n    const [toasts, actions] = useList<BaseToastType>({\n      comparisonFn: (a, b) => a.id === b.id,\n    });\n\n    function add(payload: Omit<BaseToastType, \"id\">) {\n      const id = String(Date.now());\n      const toast = { ...payload, id };\n\n      actions.add(toast);\n      setTimeout(() => actions.remove(toast), timeout);\n    }\n\n    return [\n      [...toasts].reverse(),\n      { add, remove: actions.remove, clear: actions.clear },\n    ];\n  }\n\n  const [toasts, actions] = useToastsImplementation();\n\n  return (\n    <ToastsContext.Provider value={[toasts, actions]}>\n      {props.children}\n    </ToastsContext.Provider>\n  );\n}\n\nexport function useToastsContext<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const context = React.useContext<ToastsContextDataType<ToastType>>(\n    ToastsContext as unknown as React.Context<ToastsContextDataType<ToastType>>\n  );\n\n  if (context === undefined) {\n    throw new Error(`useToasts must be used within the ToastsContextProvider`);\n  }\n\n  return context;\n}\n\nexport function useToastTrigger<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const [, actions] = useToastsContext<ToastType>();\n\n  return actions.add;\n}\n","import React from \"react\";\nimport type { TranslationsType } from \"@bgord/node\";\n\nconst TranslationsContext = React.createContext<TranslationsType>({});\n\ntype TranslationsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  translations: TranslationsType;\n};\n\nexport function TranslationsContextProvider(\n  props: TranslationsContextPropsType\n) {\n  return (\n    <TranslationsContext.Provider value={props.translations}>\n      {props.children}\n    </TranslationsContext.Provider>\n  );\n}\n\nexport function useTranslations() {\n  const translations = React.useContext(TranslationsContext);\n\n  if (translations === undefined) {\n    throw new Error(\n      `useTranslations must be used within the TranslationsContext`\n    );\n  }\n\n  function translate(key: string) {\n    const result = translations[key];\n\n    if (!result)\n      console.warn(`[@bgord/frontend] missing translation for key ${key}.`);\n\n    return result ?? key;\n  }\n\n  return translate;\n}\n"],"names":["usePreviousValue","value","defaultValue","previousValue","useRef","useEffect","current","AnimaState","Anima","props","duration","React","useState","visible","isInitial","appeared","appearing","hidden","state","setState","previousState","setTimeout","hidding","cloneElement","children","effect","style","getAnimaProps","AnimaList","rest","setIsInitial","map","child","useAnimaList","list","config","direction","item","officialList","setOfficialList","added","x","some","id","push","length","deleted","every","items","updated","find","y","count","filter","OutboundLink","as","target","rel","DateFormatter","UseExpandableListState","UseFileState","datetime","date","Date","toLocaleString","FilterUrl","url","filters","query","URLSearchParams","this","getNonEmptyFilters","toString","undefined","Object","fromEntries","entries","getSafeWindow","window","useWindowDimensions","width","height","windowSize","setWindowSize","safeWindow","addEventListener","handleResize","removeEventListener","innerWidth","innerHeight","useBreakpoint","breakpoint","dimensions","useClientSearch","setValue","clear","onChange","event","currentTarget","filterFn","toLowerCase","includes","useExpandableList","numberOfExcessiveElements","max","areThereExcessiveElements","getState","contracted","expanded","displayShowMore","displayShowLess","showMore","showLess","_element","index","useField","evaluatedDefaultValue","set","useFile","maxSize","Infinity","idle","setFile","actions","selectFile","files","file","size","error","selected","clearFile","data","noop","useFilter","defaultQuery","String","options","keys","onUpdate","setQuery","previousQuery","newQuery","isNewQueryInEnum","Boolean","useList","defaultItems","comparisonFn","a","b","setItems","add","payload","Array","isArray","remove","isAdded","toggle","update","useScrollLock","condition","useLayoutEffect","html","document","querySelector","body","originalBodyOverflow","getComputedStyle","overflow","originalHtmlOverflow","useToggle","on","setIsOn","off","enable","disable","v","useUrlFilter","currentQuery","location","search","get","label","previous","URL","params","history","pushState","ServerError","message","_known","isServerError","hasOwnProperty","extract","response","ok","json","handle","ToastsContext","createContext","ToastsContextProvider","timeout","reverse","toast","now","Provider","useToastsContext","context","useContext","Error","useToastTrigger","TranslationsContext","TranslationsContextProvider","translations","useTranslations","key","result","console","warn"],"mappings":"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"}