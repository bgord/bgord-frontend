{"version":3,"file":"bgord-frontend.module.js","sources":["../hooks/use-previous-value.ts","../anima.tsx","../server-error.ts","../api.ts","../durations.ts","../hooks/use-field.ts","../hooks/use-audio.ts","../hooks/use-autofocus.ts","../safe-window.ts","../hooks/use-window-dimensions.ts","../hooks/use-breakpoint.ts","../hooks/use-click-outside.ts","../hooks/use-client-search.ts","../time.ts","../hooks/use-current-timestamp.ts","../hooks/use-debounce.ts","../hooks/use-toggle.ts","../hooks/use-design-mode.ts","../hooks/use-disable-pull-to-refresh.ts","../hooks/use-document-title.ts","../hooks/use-expandable-list.ts","../hooks/use-file.ts","../hooks/use-filter.ts","../hooks/use-hover.ts","../get-image-resolution.ts","../hooks/use-image-file-resolution.ts","../hooks/use-is-online.ts","../hooks/use-is-visible.ts","../hooks/use-item.ts","../hooks/use-keyboard-handler.ts","../hooks/use-keyboard-shortcuts.ts","../pluralize.ts","../translations.tsx","../hooks/use-language-selector.ts","../hooks/use-leaving-prompt.ts","../hooks/use-list.ts","../hooks/use-pagination.ts","../safe-local-storage.ts","../hooks/use-persistent-toggle.ts","../rate-limiter.ts","../hooks/use-rate-limiter.ts","../hooks/use-scroll.ts","../hooks/use-scroll-lock.ts","../hooks/use-sound.ts","../hooks/use-url-filter.ts","../hooks/use-video.ts","../components/dialog.tsx","../components/offline-indicator.tsx","../components/outbound-link.tsx","../exec.ts","../components/dev-tools.tsx","../copy-to-clipboard.ts","../dates.ts","../feature-flags.tsx","../filter-url.ts","../is-client.ts","../pagination.ts","../reordering.ts","../rhythm.ts","../thousands-separator.ts","../toasts.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport function usePreviousValue<T>(\n  value: T,\n  defaultValue?: T | undefined\n): T | undefined {\n  const previousValue = useRef<T | undefined>(defaultValue);\n\n  useEffect(() => {\n    previousValue.current = value;\n  });\n\n  return previousValue.current;\n}\n","import React from \"react\";\n\nimport { usePreviousValue } from \"./hooks/use-previous-value\";\n\nexport enum AnimaState {\n  appearing = \"appearing\",\n  appeared = \"appeared\",\n  hiding = \"hiding\",\n  hidden = \"hidden\",\n}\n\nexport type AnimaEffectType = string;\n\nexport type AnimaConfigType = {\n  children: JSX.Element;\n\n  visible: boolean;\n  effect: AnimaEffectType;\n\n  duration?: number;\n  isInitial?: boolean;\n};\n\nexport function Anima(props: AnimaConfigType) {\n  const duration = props.duration ?? 300;\n\n  function getInitialState() {\n    if (!props.visible) return AnimaState.hidden;\n    if (props.isInitial) return AnimaState.appeared;\n    return AnimaState.appearing;\n  }\n\n  const [state, setState] = React.useState<AnimaState>(getInitialState);\n  const previousState = usePreviousValue(state);\n\n  React.useEffect(() => {\n    if (props.isInitial) return;\n\n    if (props.visible) {\n      setState(AnimaState.appearing);\n      setTimeout(() => setState(AnimaState.appeared), 100);\n    } else {\n      if (!previousState) return;\n      setState(AnimaState.hiding);\n      setTimeout(() => setState(AnimaState.hidden), duration);\n    }\n  }, [props.visible]);\n\n  if (state === AnimaState.hidden) return null;\n\n  return React.cloneElement(props.children, {\n    \"data-anima\": state,\n    \"data-anima-effect\": props.effect,\n    style: { \"--duration\": `${duration}ms`, ...props.children.props.style },\n  });\n}\n\nexport function getAnimaProps(props: Record<string, any>) {\n  return {\n    \"data-anima\": props[\"data-anima\"] as AnimaState | undefined,\n    \"data-anima-effect\": props[\"data-anima-effect\"] as\n      | AnimaEffectType\n      | undefined,\n    style: props.style as React.CSSProperties,\n  };\n}\n\nexport type AnimaListPropsType = {\n  children: JSX.Element[];\n} & JSX.IntrinsicElements[\"ul\"];\n\nexport function AnimaList(props: AnimaListPropsType) {\n  const { children, ...rest } = props;\n\n  const [isInitial, setIsInitial] = React.useState<boolean>(true);\n\n  React.useEffect(() => setIsInitial(false), []);\n\n  return (\n    <ul {...rest}>\n      {props.children.map((child) => React.cloneElement(child, { isInitial }))}\n    </ul>\n  );\n}\n\nexport type UseAnimaListDirectionType = \"head\" | \"tail\";\n\nexport type UseAnimaListConfigType = {\n  direction?: UseAnimaListDirectionType;\n  duration?: number;\n};\n\nexport type UseAnimaListItemType<T> = { item: T; props: { visible: boolean } };\n\ntype UseAnimaListReturnType<T> = {\n  items: { item: T; props: { visible: boolean } }[];\n  count: number;\n};\n\nexport function useAnimaList<T extends { id: string }>(\n  list: T[],\n  config?: UseAnimaListConfigType\n): UseAnimaListReturnType<T> {\n  const duration = config?.duration ?? 300;\n  const direction = config?.direction ?? \"head\";\n\n  const [officialList, setOfficialList] = React.useState<\n    UseAnimaListItemType<T>[]\n  >(list.map((item) => ({ item, props: { visible: true } })));\n\n  let added: T[] = [];\n\n  for (const item of list) {\n    const wasAdded = !officialList\n      .map((x) => x.item)\n      .some((x) => item.id === x.id);\n\n    if (wasAdded) added.push(item);\n  }\n\n  React.useEffect(() => {\n    if (added.length === 0) return;\n\n    if (direction === \"head\") {\n      setOfficialList((officialList) => [\n        ...added.map((item) => ({ item, props: { visible: true } })),\n        ...officialList,\n      ]);\n    } else {\n      setOfficialList((officialList) => [\n        ...officialList,\n        ...added.map((item) => ({ item, props: { visible: true } })),\n      ]);\n    }\n\n    added = [];\n  }, [added.length, direction]);\n\n  let deleted: T[] = [];\n\n  for (const { item } of officialList) {\n    const wasDeleted = list.every((x) => x.id !== item.id);\n\n    if (wasDeleted) deleted.push(item);\n  }\n\n  React.useEffect(() => {\n    if (deleted.length === 0) return;\n\n    setOfficialList((officialList) =>\n      officialList.map((x) => {\n        const wasDeleted = deleted.some((item) => item.id === x.item.id);\n\n        return wasDeleted ? { ...x, props: { visible: false } } : x;\n      })\n    );\n\n    deleted = [];\n  }, [deleted.length]);\n\n  return {\n    items: officialList.map((item) => {\n      const updated = list.find((y) => y.id === item.item.id);\n      return updated ? { ...item, item: updated } : item;\n    }),\n    count: officialList.filter((x) => x.props.visible).length,\n  };\n}\n","export type ServerErrorConfigType = {\n  message: string;\n};\n\nexport class ServerError {\n  message: ServerErrorConfigType[\"message\"];\n\n  _known = true;\n\n  constructor(config: ServerErrorConfigType) {\n    this.message = config.message;\n  }\n\n  static isServerError(value: unknown): value is ServerError {\n    if (\n      value &&\n      typeof value === \"object\" &&\n      value === Object(value) &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"_known\") &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"message\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  static async extract(response: Response) {\n    if (response.ok) return response;\n\n    const error = await response.json();\n\n    const message = ServerError.isServerError(error)\n      ? error.message\n      : \"app.error.general\";\n\n    throw new ServerError({ message });\n  }\n\n  static async handle(payload: unknown): Promise<Response> {\n    throw new ServerError({\n      message: ServerError.isServerError(payload)\n        ? payload.message\n        : \"app.error.general\",\n    });\n  }\n}\n","import { ServerError } from \"./server-error\";\n\nexport const API: typeof fetch = (input, init) =>\n  fetch(input, {\n    mode: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n\n      \"time-zone-offset\": new Date().getTimezoneOffset().toString(),\n    },\n    redirect: \"follow\",\n    ...init,\n  })\n    .then(ServerError.extract)\n    .catch(ServerError.handle);\n","export class DurationFormatter {\n  static format(duration: number) {\n    const minutes = Math.floor(duration / 60);\n    const seconds = duration % 60;\n\n    const formattedMinutes = String(minutes).padStart(2, \"0\");\n    const formattedSeconds = String(seconds).padStart(2, \"0\");\n\n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n","import { useEffect, useState, Dispatch, SetStateAction } from \"react\";\n\nexport type UseFieldDefaultValueType<T> = T | (() => T);\nexport type UseFieldNameType = string;\n\nexport type UseFieldReturnType<T> = {\n  value: T;\n  set: Dispatch<SetStateAction<T>>;\n  clear: VoidFunction;\n  label: { props: { htmlFor: UseFieldNameType } };\n  input: { props: { id: UseFieldNameType; name: UseFieldNameType } };\n  changed: boolean;\n  unchanged: boolean;\n};\n\nexport function useField<T>(\n  name: UseFieldNameType,\n  defaultValue: UseFieldDefaultValueType<T>\n): UseFieldReturnType<T> {\n  const evaluatedDefaultValue =\n    // @ts-ignore\n    typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n\n  const [value, setValue] = useState(evaluatedDefaultValue);\n\n  useEffect(() => setValue(evaluatedDefaultValue), [evaluatedDefaultValue]);\n\n  function clear() {\n    setValue(evaluatedDefaultValue);\n  }\n\n  return {\n    value,\n    set: setValue,\n    clear,\n    label: { props: { htmlFor: name } },\n    input: { props: { id: name, name: name } },\n    changed: value !== evaluatedDefaultValue,\n    unchanged: value == evaluatedDefaultValue,\n  };\n}\n","import * as React from \"react\";\n\nimport { DurationFormatter } from \"../durations\";\nimport { useField } from \"./use-field\";\n\nexport type UseAudioSrcType = string;\n\ntype AudioDurationType = number;\ntype AudioCurrentTimeType = number;\ntype AudioVolumeType = number;\n\nexport const AUDIO_DEFAULT_VOLUME: AudioVolumeType = 1;\n\nexport enum UseAudioState {\n  \"initial\" = \"initial\",\n  \"ready\" = \"ready\",\n  \"playing\" = \"playing\",\n  \"paused\" = \"paused\",\n}\n\nexport type UseAudioReturnType = {\n  props: {\n    audio: {\n      src: UseAudioSrcType;\n      onTimeUpdate: (event: Event) => void;\n      onLoadedMetadata: (event: Event) => void;\n      onEnded: (event: Event) => void;\n      controls: false;\n    };\n    player: {\n      min: 0;\n      step: 1;\n      max: AudioDurationType;\n      value: AudioDurationType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n    volume: {\n      min: 0;\n      max: 1;\n      step: 0.01;\n      value: AudioVolumeType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n  };\n  actions: {\n    play: VoidFunction;\n    pause: VoidFunction;\n    mute: VoidFunction;\n    unmute: VoidFunction;\n    reset: VoidFunction;\n    seek: (event: Event) => void;\n    changeVolume: (event: Event) => void;\n  };\n\n  meta: {\n    state: UseAudioState;\n    isInitial: boolean;\n    isReady: boolean;\n    isPlaying: boolean;\n    isPaused: boolean;\n    matches: (states: UseAudioState[]) => boolean;\n    percentage: {\n      raw: number;\n      formatted: string;\n    };\n    currentTime: {\n      raw: AudioCurrentTimeType;\n      formatted: string;\n    };\n    duration: {\n      raw: AudioDurationType;\n      formatted: string;\n    };\n    volume: {\n      value: AudioVolumeType;\n      raw: number;\n      formatted: string;\n    };\n    muted: boolean;\n  };\n};\n\nexport function useAudio(src: UseAudioSrcType): UseAudioReturnType {\n  const [state, setState] = React.useState<UseAudioState>(\n    UseAudioState.initial\n  );\n\n  const ref = React.useRef<HTMLAudioElement | null>(null);\n\n  const duration = useField<AudioDurationType>(\"duration\", 0);\n  const currentTime = useField<AudioCurrentTimeType>(\"currentTime\", 0);\n  const volume = useField<AudioVolumeType>(\"volume\", AUDIO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (ref.current) {\n      ref.current.play();\n      setState(UseAudioState.playing);\n    }\n  }\n\n  function pause() {\n    if (ref.current) {\n      ref.current.pause();\n      setState(UseAudioState.paused);\n    }\n  }\n\n  function reset() {\n    if (ref.current) {\n      ref.current.currentTime = 0;\n      ref.current.pause();\n      currentTime.set(0);\n      setState(UseAudioState.paused);\n    }\n  }\n\n  function mute() {\n    if (ref.current) {\n      ref.current.volume = 0;\n      volume.set(0);\n    }\n  }\n\n  function unmute() {\n    if (ref.current) {\n      ref.current.volume = AUDIO_DEFAULT_VOLUME;\n      volume.set(AUDIO_DEFAULT_VOLUME);\n    }\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.currentTime = target.valueAsNumber;\n      currentTime.set(target.valueAsNumber);\n    }\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLAudioElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(UseAudioState.ready);\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLAudioElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(UseAudioState.paused);\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.volume = target.valueAsNumber;\n      volume.set(target.valueAsNumber);\n    }\n  }\n\n  return {\n    props: {\n      audio: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: { play, pause, mute, unmute, reset, seek, changeVolume },\n    meta: {\n      state,\n      isInitial: state === UseAudioState.initial,\n      isReady: state === UseAudioState.ready,\n      isPlaying: state === UseAudioState.playing,\n      isPaused: state === UseAudioState.paused,\n      matches: (states: UseAudioState[]) =>\n        states.some((given) => given === state),\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import React from \"react\";\n\nexport type UseAutofocusConfigType = {\n  ref: React.RefObject<HTMLElement>;\n  condition: boolean;\n};\n\nexport function useAutofocus(config: UseAutofocusConfigType): void {\n  React.useEffect(() => {\n    if (!config.condition) return;\n\n    config.ref.current?.focus();\n  }, [config.condition]);\n}\n","export function getSafeWindow() {\n  if (typeof window === \"undefined\") return undefined;\n  return window;\n}\n","import { useState, useEffect } from \"react\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type WindowDimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowDimensions(): WindowDimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowDimensions>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    const safeWindow = getSafeWindow();\n\n    if (!safeWindow) return;\n\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: safeWindow?.innerWidth,\n        height: safeWindow?.innerHeight,\n      });\n    }\n\n    // Add event listener\n    safeWindow.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => safeWindow.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import { useWindowDimensions } from \"./use-window-dimensions\";\n\nexport type BreakpointType = number;\n\nexport type UseBreakpointReturnType = boolean;\n\nexport function useBreakpoint(\n  breakpoint: BreakpointType\n): UseBreakpointReturnType {\n  const dimensions = useWindowDimensions();\n  const width = dimensions?.width ?? 0;\n\n  return width <= breakpoint;\n}\n","import React from \"react\";\n\nexport function useClickOutside(\n  ref: React.RefObject<HTMLElement>,\n  onClickOutside: VoidFunction,\n  exclude?: React.RefObject<HTMLElement>[]\n): void {\n  React.useEffect(() => {\n    if (!ref.current) return;\n\n    function handleClickOutside(event: MouseEvent) {\n      // Check if click event happened outside the `ref`\n      // so the `onClickOutside` callback `may` be fired.\n      if (!ref.current?.contains(event.target as Node)) {\n        // The second check is to check if some `exclude`d node\n        // outside the `ref` node has been clicked.\n        const isExcludedNodeClicked = exclude?.some((node) =>\n          node.current?.contains(event.target as Node)\n        );\n\n        // `onClickOutside` callback is fired if the click event\n        // happened outside both `ref` node and `exclude`d nodes.\n        if (!isExcludedNodeClicked) {\n          onClickOutside();\n        }\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [onClickOutside, ref, exclude]);\n}\n","import { useState } from \"react\";\n\nexport type UseClientSearchQueryType = string;\n\nexport type UseClientSearchReturnType = {\n  query: UseClientSearchQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: (value: string) => boolean;\n  changed: boolean;\n  unchanged: boolean;\n};\n\nexport function useClientSearch(): UseClientSearchReturnType {\n  const emptyQuery: UseClientSearchQueryType = \"\";\n\n  const [query, setValue] = useState<UseClientSearchQueryType>(emptyQuery);\n\n  function clear() {\n    setValue(emptyQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setValue(event.currentTarget.value);\n  }\n\n  function filterFn(value: string) {\n    if (query === emptyQuery) return true;\n\n    return value?.toLowerCase().includes(query.toLowerCase());\n  }\n\n  return {\n    query,\n    clear,\n    onChange,\n    filterFn,\n    changed: query !== emptyQuery,\n    unchanged: query === emptyQuery,\n  };\n}\n","export function Days(value: number) {\n  return {\n    value,\n    hours: value * 24,\n    minutes: value * 24 * 60,\n    seconds: value * 24 * 60 * 60,\n    ms: value * 24 * 60 * 60 * 1000,\n  };\n}\n\nexport function Hours(value: number) {\n  return {\n    value,\n    minutes: value * 60,\n    seconds: value * 60 * 60,\n    ms: value * 60 * 60 * 1000,\n  };\n}\n\nexport function Minutes(value: number) {\n  return { value, seconds: value * 60, ms: value * 60 * 1000 };\n}\n\nexport function Seconds(value: number) {\n  return { value, ms: value * 1000 };\n}\n\nexport const Time = { Days, Hours, Minutes, Seconds };\n","import type { TimestampType } from \"@bgord/node/dist/schema\";\nimport { useState, useEffect } from \"react\";\nimport { Time } from \"../time\";\n\nexport function getCurrentTimestamp(): TimestampType {\n  return Date.now();\n}\n\nexport function useCurrentTimestamp(): TimestampType {\n  const [timestamp, setTimestamp] =\n    useState<TimestampType>(getCurrentTimestamp);\n\n  useEffect(() => {\n    const timer = setInterval(\n      () => setTimestamp(getCurrentTimestamp()),\n      Time.Seconds(1).ms\n    );\n\n    return () => clearInterval(timer);\n  }, []);\n\n  return timestamp;\n}\n","import React from \"react\";\n\ntype UseDebounceConfigType<T> = { value: T; delayMs: number };\n\nexport function useDebounce<T>(config: UseDebounceConfigType<T>): T {\n  const [debouncedValue, setDebouncedValue] = React.useState<T>(config.value);\n\n  React.useEffect(() => {\n    const timer = setTimeout(\n      () => setDebouncedValue(config.value),\n      config.delayMs\n    );\n\n    return () => clearTimeout(timer);\n  }, [config.value, config.delayMs]);\n\n  return debouncedValue;\n}\n","import { useState } from \"react\";\n\nexport type UseToggleValueType = boolean;\n\nexport type UseToggleConfigType = UseToggleValueType;\n\nexport type UseToggleReturnType = {\n  on: UseToggleValueType;\n  off: UseToggleValueType;\n  enable: VoidFunction;\n  disable: VoidFunction;\n  toggle: VoidFunction;\n};\n\nexport function useToggle(\n  defaultValue: UseToggleConfigType = false\n): UseToggleReturnType {\n  const [on, setIsOn] = useState(defaultValue);\n\n  const enable = () => setIsOn(true);\n  const disable = () => setIsOn(false);\n  const toggle = () => setIsOn((v) => !v);\n\n  return { on, off: !on, enable, disable, toggle };\n}\n","import { useEffect } from \"react\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport {\n  useToggle,\n  UseToggleConfigType,\n  UseToggleReturnType,\n} from \"./use-toggle\";\n\nexport function useDesignMode(\n  config?: UseToggleConfigType\n): UseToggleReturnType {\n  const designMode = useToggle(config);\n  const safeWindow = getSafeWindow();\n\n  useEffect(() => {\n    if (!safeWindow) return;\n\n    safeWindow.document.designMode = designMode.on ? \"on\" : \"off\";\n  }, [designMode.on]);\n\n  return designMode;\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useDisablePullToRefresh(condition = true): void {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overscroll behaviors\n    const originalHtmlOverscrollBehavior =\n      window.getComputedStyle(html).overscrollBehavior;\n    const originalBodyOverflowBehavior =\n      window.getComputedStyle(body).overscrollBehavior;\n\n    // Disable pull to refresh\n    body.style.overscrollBehavior = \"none\";\n    html.style.overscrollBehavior = \"none\";\n\n    // Enable pull to refresh when component unmounts\n    return () => {\n      body.style.overscrollBehavior = originalBodyOverflowBehavior;\n      html.style.overscrollBehavior = originalHtmlOverscrollBehavior;\n    };\n  }, [condition]);\n}\n","import React from \"react\";\n\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n","import { useState, useEffect } from \"react\";\n\nexport enum UseExpandableListState {\n  contracted = \"contracted\",\n  expanded = \"expanded\",\n}\n\nexport type UseExpandableListConfigType = { max: number; length: number };\n\nexport type UseExpandableListReturnType = {\n  state: UseExpandableListState;\n  displayShowMore: boolean;\n  displayShowLess: boolean;\n  actions: {\n    showMore: VoidFunction;\n    showLess: VoidFunction;\n  };\n  numberOfExcessiveElements: number;\n  filterFn: (element: unknown, index: number) => void;\n};\n\nexport function useExpandableList(\n  config: UseExpandableListConfigType\n): UseExpandableListReturnType {\n  const numberOfExcessiveElements = config.length - config.max;\n  const areThereExcessiveElements = config.length > config.max;\n\n  function getState() {\n    return areThereExcessiveElements\n      ? UseExpandableListState.contracted\n      : UseExpandableListState.expanded;\n  }\n\n  const [state, setState] = useState<UseExpandableListState>(getState);\n\n  useEffect(() => setState(getState()), [config.length, config.max]);\n\n  function showMore() {\n    if (state === UseExpandableListState.contracted) {\n      setState(UseExpandableListState.expanded);\n    }\n  }\n\n  function showLess() {\n    if (state === UseExpandableListState.expanded) {\n      setState(UseExpandableListState.contracted);\n    }\n  }\n\n  function filterFn(_element: unknown, index: number) {\n    if (state === UseExpandableListState.expanded) return true;\n    return index < config.max;\n  }\n\n  return {\n    state,\n    displayShowMore: state === UseExpandableListState.contracted,\n    displayShowLess:\n      state === UseExpandableListState.expanded && areThereExcessiveElements,\n    actions: {\n      showMore,\n      showLess,\n    },\n    numberOfExcessiveElements,\n    filterFn,\n  };\n}\n","import { useState, useMemo } from \"react\";\n\ntype UseFileNameType = string;\n\nexport type UseFileConfigType = {\n  maxSize?: number;\n};\n\nexport enum UseFileState {\n  \"idle\" = \"idle\",\n  \"selected\" = \"selected\",\n  \"error\" = \"error\",\n}\n\ntype UseFileIdle = {\n  state: UseFileState.idle;\n  matches: (states: UseFileState[]) => boolean;\n  isIdle: true;\n  isSelected: false;\n  isError: false;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\ntype UseFileSelected = {\n  state: UseFileState.selected;\n  matches: (states: UseFileState[]) => boolean;\n  data: File;\n  isIdle: false;\n  isSelected: true;\n  isError: false;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  preview: ReturnType<typeof URL.createObjectURL> | undefined;\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\ntype UseFileError = {\n  state: UseFileState.error;\n  matches: (states: UseFileState[]) => boolean;\n  data: null;\n  isIdle: false;\n  isSelected: false;\n  isError: true;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\nexport type UseFileReturnType = UseFileIdle | UseFileSelected | UseFileError;\n\nexport function useFile(\n  name: UseFileNameType,\n  config?: UseFileConfigType\n): UseFileReturnType {\n  const maxSize = config?.maxSize ?? Infinity;\n\n  const [key, setKey] = useState(0);\n  const [state, setState] = useState<UseFileState>(UseFileState.idle);\n  const [file, setFile] = useState<File | null>(null);\n\n  function selectFile(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.currentTarget.files;\n\n    if (!files || !files[0]) return;\n\n    const file = files[0];\n\n    if (file.size > maxSize) {\n      setState(UseFileState.error);\n      return undefined;\n    }\n\n    setFile(file);\n    setState(UseFileState.selected);\n\n    return file;\n  }\n\n  function clearFile() {\n    setKey((key) => key + 1);\n    setFile(null);\n    setState(UseFileState.idle);\n  }\n\n  const preview = useMemo(\n    () => (file ? URL.createObjectURL(file) : undefined),\n    [file]\n  );\n\n  function matches(states: UseFileState[]) {\n    return states.some((given) => given === state);\n  }\n\n  if (state === UseFileState.idle) {\n    return {\n      state,\n      matches,\n      isIdle: true,\n      isSelected: false,\n      isError: false,\n      data: null,\n      actions: { selectFile, clearFile },\n      label: { props: { htmlFor: name } },\n      input: {\n        props: { id: name, name, multiple: false, key },\n      },\n    };\n  }\n\n  if (state === UseFileState.selected) {\n    return {\n      state,\n      matches,\n      data: file as File,\n      isIdle: false,\n      isSelected: true,\n      isError: false,\n      actions: { selectFile, clearFile },\n      preview,\n      label: { props: { htmlFor: name } },\n      input: {\n        props: { id: name, name, multiple: false, key },\n      },\n    };\n  }\n\n  return {\n    state,\n    matches,\n    data: null,\n    isIdle: false,\n    isSelected: false,\n    isError: true,\n    actions: { selectFile, clearFile },\n    label: { props: { htmlFor: name } },\n    input: {\n      props: { id: name, name, multiple: false, key },\n    },\n  };\n}\n","import { useState, useEffect } from \"react\";\nimport { usePreviousValue } from \"./use-previous-value\";\nimport { noop } from \"../noop\";\n\nexport type UseFilterQueryType = string | undefined;\nexport type UseFilterNameType = string;\n\nexport type UseFilterConfigType<T> = {\n  name: string;\n  enum: { [key: string]: UseFilterQueryType };\n  defaultQuery?: UseFilterQueryType;\n  currentQuery?: UseFilterQueryType;\n  filterFn?: (value: T) => boolean;\n  onUpdate?: (\n    current: UseFilterQueryType,\n    previous: UseFilterQueryType\n  ) => void;\n};\n\nexport type UseFilterReturnType<T> = {\n  query: UseFilterQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: UseFilterConfigType<T>[\"filterFn\"];\n  options: UseFilterConfigType<T>[\"enum\"][0][];\n  onUpdate: UseFilterConfigType<T>[\"onUpdate\"];\n  name: UseFilterConfigType<T>[\"name\"];\n  changed: boolean;\n  unchanged: boolean;\n  label: { props: { htmlFor: UseFilterNameType } };\n  input: { props: { id: UseFilterNameType; name: UseFilterNameType } };\n};\n\nexport function useFilter<T = string>(\n  config: UseFilterConfigType<T>\n): UseFilterReturnType<T> {\n  const defaultQuery = config.defaultQuery ?? undefined;\n  const currentQuery = config.currentQuery ?? undefined;\n\n  const filterFn = config.filterFn ?? defaultFilterFn;\n  const options = Object.keys(config.enum);\n  const onUpdate = config?.onUpdate ?? noop;\n\n  const [query, setQuery] = useState<UseFilterQueryType>(\n    currentQuery ?? defaultQuery\n  );\n  const previousQuery = usePreviousValue(query);\n\n  function clear() {\n    setQuery(defaultQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newQuery = event.currentTarget.value;\n\n    const isNewQueryInEnum = Boolean(config.enum[String(newQuery)]);\n\n    setQuery(isNewQueryInEnum ? newQuery : undefined);\n  }\n\n  function defaultFilterFn(value: T) {\n    if (query === undefined) return true;\n\n    return query === String(value);\n  }\n\n  useEffect(() => {\n    onUpdate(query, previousQuery);\n  }, [previousQuery, query]);\n\n  return {\n    query,\n    clear,\n    onChange,\n    filterFn,\n    options,\n    onUpdate,\n    name: config.name,\n    changed: query !== defaultQuery,\n    unchanged: query === defaultQuery,\n    label: { props: { htmlFor: config.name } },\n    input: { props: { id: config.name, name: config.name } },\n  };\n}\n","import React from \"react\";\n\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type UseHoverConfigType = {\n  enabled: boolean;\n};\n\nexport type UseHoverReturnType = {\n  attach: { ref: React.RefObject<any> };\n  isHovering: UseToggleReturnType[\"on\"];\n};\n\nexport function useHover(config?: UseHoverConfigType): UseHoverReturnType {\n  const enabled = config?.enabled ?? true;\n\n  const ref = React.useRef<any>(null);\n  const isHovering = useToggle(false);\n\n  const handleMouseEnter = isHovering.enable;\n  const handleMouseLeave = isHovering.disable;\n\n  React.useEffect(() => {\n    const node = ref.current;\n\n    if (node && enabled) {\n      node.addEventListener(\"mouseenter\", handleMouseEnter);\n      node.addEventListener(\"mouseleave\", handleMouseLeave);\n    }\n\n    return () => {\n      if (node && enabled) {\n        node.removeEventListener(\"mouseenter\", handleMouseEnter);\n        node.removeEventListener(\"mouseleave\", handleMouseLeave);\n      }\n    };\n  }, []);\n\n  return { attach: { ref }, isHovering: isHovering.on && enabled };\n}\n","export type ImagePathType = string | undefined;\n\nexport type ImageResolutionType = {\n  width: number | null;\n  height: number | null;\n};\n\nexport const emptyImageResolution: ImageResolutionType = {\n  width: null,\n  height: null,\n};\n\nexport async function getImageResolution(\n  path: ImagePathType\n): Promise<ImageResolutionType> {\n  if (!path) return emptyImageResolution;\n\n  const img = document.createElement(\"img\");\n\n  const promise = new Promise<ImageResolutionType>((resolve, reject) => {\n    img.onload = () => resolve({ width: img.width, height: img.height });\n    img.onerror = reject;\n  });\n\n  img.src = path;\n\n  return promise;\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { UseFileReturnType, UseFileState } from \"./use-file\";\nimport {\n  getImageResolution,\n  ImageResolutionType,\n  emptyImageResolution,\n} from \"../get-image-resolution\";\n\nexport function useImageFileResolution(\n  file: UseFileReturnType\n): ImageResolutionType {\n  const resolution = useField<ImageResolutionType>(\n    \"resolution\",\n    emptyImageResolution\n  );\n\n  React.useEffect(() => {\n    async function execute() {\n      if (file.state === UseFileState.selected) {\n        try {\n          const result = await getImageResolution(file.preview);\n\n          return resolution.set(result);\n        } catch (error) {\n          return resolution.clear();\n        }\n      }\n\n      if (\n        [UseFileState.error, UseFileState.idle].includes(file.state) &&\n        resolution.value.width !== null &&\n        resolution.value.height !== null\n      ) {\n        resolution.clear();\n      }\n    }\n\n    execute();\n  }, [file.state, file.data?.name]);\n\n  return resolution.value;\n}\n","import React from \"react\";\nimport { useToggle } from \"./use-toggle\";\n\ntype OnlineStatusType = boolean;\n\nexport const useIsOnline = (): OnlineStatusType => {\n  const onlineStatus = useToggle(getOnlineStatus());\n\n  React.useEffect(() => {\n    function handleOnline() {\n      onlineStatus.enable();\n    }\n\n    function handleOffline() {\n      onlineStatus.disable();\n    }\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  return onlineStatus.on;\n};\n\n// Check if browser supports `navigator.onLine`,\n// otherwise, we assume the user is online.\nfunction getOnlineStatus(): OnlineStatusType {\n  return typeof navigator !== \"undefined\" &&\n    typeof navigator.onLine === \"boolean\"\n    ? navigator.onLine\n    : true;\n}\n","import { RefObject, useEffect, useState } from \"react\";\n\nexport const defaultUseIsVisibleConfig = {\n  threshold: 0,\n  root: null,\n  rootMargin: \"0%\",\n  ref: { current: null },\n};\n\nexport function isIntersectionObserverSupported() {\n  return (\n    \"IntersectionObserver\" in window &&\n    \"IntersectionObserverEntry\" in window &&\n    \"intersectionRatio\" in window.IntersectionObserverEntry.prototype\n  );\n}\n\nexport type UseIsVisibleConfigType = IntersectionObserverInit & {\n  ref: RefObject<Element>;\n};\n\nexport type UseIsVisibleReturnType = boolean;\n\nexport function useIsVisible(\n  config: UseIsVisibleConfigType = defaultUseIsVisibleConfig\n): UseIsVisibleReturnType {\n  const [isVisible, setVisible] = useState<UseIsVisibleReturnType>(false);\n\n  useEffect(() => {\n    const element = config.ref.current;\n\n    if (!isIntersectionObserverSupported() || !element) return;\n\n    const observer = new IntersectionObserver(\n      (entry) => setVisible(Boolean(entry[0]?.isIntersecting)),\n      config\n    );\n\n    observer.observe(element);\n\n    return () => observer.unobserve(element);\n  }, []);\n\n  return isVisible;\n}\n","import { useState } from \"react\";\n\ntype UseItemValueType<T> = T | null;\n\nexport type UseItemReturnType<T> = {\n  clear: VoidFunction;\n  set: (item: NonNullable<UseItemValueType<T>>) => void;\n  toggle: (item: NonNullable<UseItemValueType<T>>) => any;\n  value: UseItemValueType<T>;\n  isDefault: boolean;\n  exists: boolean;\n  compare: (a: UseItemValueType<T>) => boolean;\n};\n\nexport type UseItemConfigType<T> = {\n  defaultItem?: UseItemValueType<T>;\n\n  comparisonFn?: (a: UseItemValueType<T>, b: UseItemValueType<T>) => boolean;\n};\n\nfunction defaultComparisonFn<T>(\n  a: UseItemValueType<T>,\n  b: UseItemValueType<T>\n) {\n  return a === b;\n}\n\nconst defaultItem = null;\n\nexport function useItem<T>(\n  config?: UseItemConfigType<T>\n): UseItemReturnType<T> {\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [item, setItem] = useState<UseItemValueType<T>>(\n    config?.defaultItem ?? defaultItem\n  );\n\n  return {\n    clear: () => setItem(defaultItem),\n\n    set: (newer) => setItem(newer),\n\n    toggle: (newer) =>\n      setItem((current) => {\n        if (current === defaultItem) return newer;\n\n        return comparisonFn(current, newer) ? defaultItem : newer;\n      }),\n\n    value: item,\n\n    isDefault: comparisonFn(item, defaultItem),\n\n    exists: !comparisonFn(item, defaultItem),\n\n    compare: (given: UseItemValueType<T>) => comparisonFn(item, given),\n  };\n}\n","import React from \"react\";\n\nexport enum KeyNameEnum {\n  Enter = \"Enter\",\n  Space = \" \",\n}\n\nexport type UseKeyHandlerConfigType = Partial<Record<KeyNameEnum, Function>>;\n\nexport type UseKeyHandlerReturnType = (\n  event: React.KeyboardEvent<HTMLElement>\n) => void;\n\nexport function useKeyHandler(\n  config: UseKeyHandlerConfigType\n): UseKeyHandlerReturnType {\n  const keys = Object.keys(config);\n\n  return function handleKey(event: React.KeyboardEvent<HTMLElement>) {\n    const key = event.key as KeyNameEnum;\n    const executor = config[key];\n\n    if (keys.includes(event.key) && config[key] && executor) {\n      executor();\n    }\n  };\n}\n","import React from \"react\";\nimport tinykeys from \"tinykeys\";\n\nexport interface UseKeyboardShortcutsConfigType {\n  [keybinding: string]: (event: KeyboardEvent) => void;\n}\n\nexport function useKeyboardShortcuts(\n  config: UseKeyboardShortcutsConfigType\n): void {\n  React.useEffect(() => {\n    const unsubscribeShortcuts = tinykeys(window, config);\n\n    return () => unsubscribeShortcuts();\n  }, [config]);\n}\n","import { polishPlurals } from \"polish-plurals\";\nimport type { Falsy, Schema } from \"@bgord/node\";\n\ntype PluralizeWordType = string;\ntype PluralizeValueType = Falsy<number>;\n\nexport type PluralizeOptionsType = {\n  value: PluralizeValueType;\n  singular: PluralizeWordType;\n  plural?: PluralizeWordType;\n  genitive?: PluralizeWordType;\n  language: Schema.LanguageType;\n};\n\nenum PluralizationSupportedLanguages {\n  en = \"en\",\n  pl = \"pl\",\n}\n\nexport function pluralize(options: PluralizeOptionsType): PluralizeWordType {\n  if (options.language === PluralizationSupportedLanguages.en) {\n    const plural = options.plural ?? `${options.singular}s`;\n\n    if (options.value === 1) return options.singular;\n\n    return plural;\n  }\n\n  if (options.language === PluralizationSupportedLanguages.pl) {\n    const value = options.value ?? 1;\n\n    if (value === 1) return options.singular;\n\n    return polishPlurals(\n      options.singular,\n      String(options.plural),\n      String(options.genitive),\n      value\n    );\n  }\n\n  console.warn(\n    `[@bgord/frontend] missing pluralization function for language ${options.language}.`\n  );\n\n  return options.singular;\n}\n","import React from \"react\";\nimport type {\n  TranslationsType,\n  TranslationsKeyType,\n  Schema,\n} from \"@bgord/node\";\nimport { pluralize, PluralizeOptionsType } from \"./pluralize\";\n\ntype TranslationsContextValueType = {\n  translations: TranslationsType;\n  language: Schema.LanguageType;\n};\n\ntype TranslationPlaceholderType = string;\ntype TranslationPlaceholderValueType = string | number;\ntype TranslationVariableType = Record<\n  TranslationPlaceholderType,\n  TranslationPlaceholderValueType\n>;\n\nconst TranslationsContext = React.createContext<TranslationsContextValueType>({\n  translations: {},\n  language: \"en\",\n});\n\ntype TranslationsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: TranslationsContextValueType;\n};\n\nexport function TranslationsContextProvider(\n  props: TranslationsContextPropsType\n) {\n  return (\n    <TranslationsContext.Provider value={props.value}>\n      {props.children}\n    </TranslationsContext.Provider>\n  );\n}\n\nexport function useTranslations() {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useTranslations must be used within the TranslationsContext`\n    );\n  }\n\n  function translate(\n    key: TranslationsKeyType,\n    variables?: TranslationVariableType\n  ) {\n    const translation = value.translations[key];\n\n    if (!translation) {\n      console.warn(`[@bgord/frontend] missing translation for key: ${key}`);\n      return key;\n    }\n\n    if (!variables) return translation;\n\n    return Object.entries(variables).reduce(\n      (result, [placeholder, value]) =>\n        result.replace(`{{${placeholder}}}`, String(value)),\n      translation\n    );\n  }\n\n  return translate;\n}\n\nexport function useLanguage(): TranslationsContextValueType[\"language\"] {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(`useLanguage must be used within the TranslationsContext`);\n  }\n\n  return value.language;\n}\n\nexport function usePluralize() {\n  const language = useLanguage();\n\n  return (options: Omit<PluralizeOptionsType, \"language\">) =>\n    pluralize({ ...options, language });\n}\n","import type { LanguageType } from \"@bgord/node/dist/schema\";\nimport Cookies from \"js-cookie\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport { useLanguage } from \"../translations\";\nimport { useFilter, UseFilterReturnType } from \"./use-filter\";\n\nexport function useLanguageSelector(\n  supportedLanguages: Record<LanguageType, LanguageType>\n): UseFilterReturnType<LanguageType> {\n  const language = useLanguage();\n\n  return useFilter({\n    enum: supportedLanguages,\n    currentQuery: language,\n    name: \"language\",\n    onUpdate: (current, previous) => {\n      const safeWindow = getSafeWindow();\n\n      if (!safeWindow) return;\n\n      if (!current || !previous || previous === current) return;\n\n      Cookies.set(\"accept-language\", current);\n      safeWindow.document.location.reload();\n    },\n  });\n}\n","import React from \"react\";\n\nexport type UseLeavingPromptConditionType = boolean;\n\nexport function useLeavingPrompt(\n  condition: UseLeavingPromptConditionType = false\n): void {\n  React.useEffect(() => {\n    if (!condition) return;\n\n    function handler(e: BeforeUnloadEvent) {\n      e.preventDefault();\n    }\n\n    window.addEventListener(\"beforeunload\", handler);\n\n    return () => window.removeEventListener(\"beforeunload\", handler);\n  }, [condition]);\n}\n","import { useState, SetStateAction, Dispatch } from \"react\";\n\nexport type UseListActionsType<T> = {\n  clear: VoidFunction;\n  add: (x: T | T[]) => void;\n  remove: (x: T) => void;\n  toggle: (x: T) => void;\n  isAdded: (x: T) => boolean;\n  update: Dispatch<SetStateAction<T[]>>;\n};\n\nexport type UseListReturnType<T> = [T[], UseListActionsType<T>];\n\nexport type UseListConfigType<T> = {\n  defaultItems?: T[];\n  comparisonFn?: (a: T, b: T) => boolean;\n};\n\nexport function useList<T>(\n  config?: UseListConfigType<T>\n): UseListReturnType<T> {\n  const defaultItems = config?.defaultItems ?? [];\n\n  const defaultComparisonFn = (a: T, b: T) => a === b;\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [items, setItems] = useState<T[]>(defaultItems);\n\n  function clear() {\n    setItems([]);\n  }\n\n  function add(payload: T | T[]) {\n    setItems((items) => {\n      if (Array.isArray(payload)) {\n        return [...items, ...payload];\n      }\n      return [...items, payload];\n    });\n  }\n\n  function remove(item: T) {\n    setItems((items) => items.filter((x) => !comparisonFn(x, item)));\n  }\n\n  function isAdded(item: T) {\n    return items.some((x) => comparisonFn(x, item));\n  }\n\n  function toggle(item: T) {\n    isAdded(item) ? remove(item) : add(item);\n  }\n\n  return [items, { clear, add, remove, toggle, isAdded, update: setItems }];\n}\n","import { useField } from \"./use-field\";\nimport { PagedMetaType, PageType } from \"../pagination\";\n\ntype UsePaginationControlType = {\n  active: boolean;\n  disabled: boolean;\n  exists: boolean;\n  go: VoidFunction;\n  value: PageType | undefined;\n};\n\ntype UsePaginationReturnType = {\n  current: PageType;\n  last: PageType | undefined;\n\n  controls: {\n    firstPage: UsePaginationControlType;\n    previousPage: UsePaginationControlType;\n    nextPage: UsePaginationControlType;\n    lastPage: UsePaginationControlType;\n  };\n\n  update: (updated: PagedMetaType | null) => void;\n};\n\nexport function usePagination(): UsePaginationReturnType {\n  const meta = useField<PagedMetaType | null>(\"meta\", null);\n\n  const firstPage = 1;\n  const previousPage = meta.value?.previousPage;\n  const nextPage = meta.value?.nextPage;\n  const lastPage = meta.value?.lastPage;\n\n  const page = useField(\"page\", firstPage);\n\n  return {\n    current: page.value,\n    last: lastPage,\n\n    controls: {\n      firstPage: {\n        active: !previousPage,\n        disabled: false,\n        exists: true,\n        go: () => page.set(firstPage),\n        value: firstPage,\n      },\n\n      previousPage: {\n        active: false,\n        disabled: !previousPage,\n        exists: Boolean(previousPage),\n        go: () => page.set(previousPage ?? page.value),\n        value: previousPage,\n      },\n\n      nextPage: {\n        active: false,\n        disabled: !nextPage,\n        exists: Boolean(nextPage),\n        go: () => page.set(nextPage ?? page.value),\n        value: nextPage,\n      },\n\n      lastPage: {\n        active: page.value === lastPage,\n        disabled: !nextPage,\n        exists: true,\n        go: () => page.set(lastPage ?? page.value),\n        value: lastPage,\n      },\n    },\n\n    update: (updated) => meta.set(updated),\n  };\n}\n","import * as Storage from \"ts-storage\";\n\nexport type SafeLocalStorageKeyType = string;\n\nexport class SafeLocalStorage {\n  static get<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    fallbackValue: T\n  ): T {\n    return Storage.get(key, fallbackValue).value;\n  }\n\n  static set<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    value: T\n  ) {\n    Storage.set(key, value);\n  }\n\n  static clear(key: SafeLocalStorageKeyType) {\n    Storage.remove(key);\n  }\n}\n","import * as React from \"react\";\n\nimport {\n  useToggle,\n  UseToggleReturnType,\n  UseToggleValueType,\n} from \"./use-toggle\";\nimport {\n  SafeLocalStorage,\n  SafeLocalStorageKeyType,\n} from \"../safe-local-storage\";\n\nexport type UsePersistentToggleReturnType = UseToggleReturnType & {\n  clear: VoidFunction;\n};\n\nexport function usePersistentToggle(\n  key: SafeLocalStorageKeyType,\n  defaultValue: UseToggleValueType = false\n): UsePersistentToggleReturnType {\n  const storedValue = SafeLocalStorage.get<UseToggleValueType>(\n    key,\n    defaultValue\n  );\n\n  const toggle = useToggle(storedValue);\n\n  React.useEffect(() => SafeLocalStorage.set(key, toggle.on), [key, toggle.on]);\n\n  return { ...toggle, clear: () => SafeLocalStorage.clear(key) };\n}\n","import type { TimestampType } from \"@bgord/node/dist/schema\";\nimport type { Falsy } from \"@bgord/node\";\n\nexport type RateLimiterOptionsType = {\n  limitMs: TimestampType;\n};\n\nexport type RateLimiterResultSuccessType = { allowed: true };\n\nexport type RateLimiterResultErrorType = {\n  allowed: false;\n  remainingMs: TimestampType;\n};\n\nexport type RateLimiterResultType =\n  | RateLimiterResultSuccessType\n  | RateLimiterResultErrorType;\n\nexport class RateLimiter {\n  private lastInvocationTimestamp: Falsy<TimestampType> = null;\n\n  private options: RateLimiterOptionsType;\n\n  constructor(options: RateLimiterOptionsType) {\n    this.options = options;\n  }\n\n  verify(currentTimestamp: TimestampType): RateLimiterResultType {\n    if (!this.lastInvocationTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    const nextAllowedTimestamp =\n      this.lastInvocationTimestamp + this.options.limitMs;\n\n    if (nextAllowedTimestamp <= currentTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    return {\n      allowed: false,\n      remainingMs: nextAllowedTimestamp - currentTimestamp,\n    };\n  }\n}\n","import { useRef } from \"react\";\n\nimport {\n  RateLimiterOptionsType,\n  RateLimiterResultErrorType,\n  RateLimiter,\n} from \"../rate-limiter\";\n\nexport type UseRateLimiterActionType<T> = (...args: T[]) => void;\n\nexport type UseRateLimiterOptionsType<T> = RateLimiterOptionsType & {\n  action: UseRateLimiterActionType<T>;\n  fallback?: (remainingMs: RateLimiterResultErrorType[\"remainingMs\"]) => void;\n};\n\nexport type UseRateLimiterReturnType<T> = UseRateLimiterActionType<T>;\n\nexport function useRateLimiter<T>(\n  options: UseRateLimiterOptionsType<T>\n): UseRateLimiterReturnType<T> {\n  const rateLimiter = useRef<RateLimiter>(new RateLimiter(options));\n\n  return function executor(...args: T[]) {\n    const currentTimestamp = Date.now();\n    const result = rateLimiter.current.verify(currentTimestamp);\n\n    if (result.allowed) {\n      return options.action(...args);\n    }\n\n    return options.fallback?.(result.remainingMs);\n  };\n}\n","import React from \"react\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type ScrollPositionType = number;\n\nexport type UseScrollReturnType = {\n  actions: { goToTop: VoidFunction };\n  position: {\n    value: ScrollPositionType;\n    isInitial: boolean;\n    hasChanged: boolean;\n  };\n  visible: UseToggleReturnType[\"on\"];\n  hidden: UseToggleReturnType[\"off\"];\n};\n\nexport function useScroll(): UseScrollReturnType {\n  const safeWindow = getSafeWindow();\n\n  // Scroll position always set at the top of the page\n  const defaultScrollPosition = 0;\n  const [scrollPosition, setScrollPosition] =\n    React.useState<ScrollPositionType>(defaultScrollPosition);\n\n  // Assuming scrollbar is hidden by default\n  const scrollbarVisibility = useToggle(false);\n\n  function goToTop() {\n    if (!safeWindow) return;\n    safeWindow.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  }\n\n  React.useLayoutEffect(() => {\n    function measure() {\n      if (!safeWindow) return;\n\n      setScrollPosition(safeWindow?.scrollY);\n\n      // Checking if the viewport (clientHeight) can fully contain\n      // full content height (scrollHeight)\n      if (\n        safeWindow.document.body.clientHeight <\n        safeWindow.document.body.scrollHeight\n      ) {\n        scrollbarVisibility.enable();\n      } else {\n        scrollbarVisibility.disable();\n      }\n    }\n\n    safeWindow?.addEventListener(\"scroll\", measure);\n\n    return () => safeWindow?.removeEventListener(\"scroll\", measure);\n  }, []);\n\n  return {\n    actions: { goToTop },\n    position: {\n      value: scrollPosition,\n      isInitial: scrollPosition === 0,\n      hasChanged: scrollPosition > 0,\n    },\n    visible: scrollbarVisibility.on,\n    hidden: scrollbarVisibility.off,\n  };\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useScrollLock(condition = true): void {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overflows\n    const originalBodyOverflow = window.getComputedStyle(body).overflow;\n    const originalHtmlOverflow = window.getComputedStyle(html).overflow;\n\n    // Prevent scrolling on mount\n    body.style.overflow = \"hidden\";\n    html.style.overflow = \"hidden\";\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      body.style.overflow = originalBodyOverflow;\n      html.style.overflow = originalHtmlOverflow;\n    };\n  }, [condition]);\n}\n","export type SoundSourceType = string;\n\nexport type UseSoundReturnType = { play: VoidFunction };\n\nexport function useSound(src: SoundSourceType): UseSoundReturnType {\n  const audio = new Audio(src);\n\n  return { play: audio.play.bind(audio) };\n}\n","import {\n  useFilter,\n  UseFilterConfigType,\n  UseFilterReturnType,\n} from \"./use-filter\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type UseUrlFilterConfigType<T> = UseFilterConfigType<T>;\n\nexport function useUrlFilter<T>(\n  config: UseUrlFilterConfigType<T>\n): UseFilterReturnType<T> {\n  const safeWindow = getSafeWindow();\n\n  const currentQuery =\n    new URLSearchParams(safeWindow?.location.search).get(config.name) ??\n    undefined;\n\n  return useFilter({\n    onUpdate: (current, previous) => {\n      if (!safeWindow) return;\n\n      const url = new URL(safeWindow.location.toString());\n      const params = new URLSearchParams(url.search);\n\n      if (current === undefined) {\n        params.delete(config.name);\n      } else {\n        params.set(config.name, current);\n      }\n\n      if (current === previous) return;\n\n      if (current !== previous) {\n        url.search = params.toString();\n        history.pushState({}, \"\", url.toString());\n      }\n    },\n    ...config,\n    defaultQuery: config.defaultQuery,\n    currentQuery: currentQuery,\n  });\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { DurationFormatter } from \"../durations\";\n\nexport type UseVideoSrcType = string;\n\ntype VideoDurationType = number;\ntype VideoCurrentTimeType = number;\ntype VideoVolumeType = number;\n\nexport const VIDEO_DEFAULT_VOLUME: VideoVolumeType = 1;\n\nexport enum UseVideoState {\n  \"initial\" = \"initial\",\n  \"ready\" = \"ready\",\n  \"playing\" = \"playing\",\n  \"paused\" = \"paused\",\n}\n\nexport type UseVideoReturnType = {\n  props: {\n    video: {\n      src: UseVideoSrcType;\n      onTimeUpdate: (event: Event) => void;\n      onLoadedMetadata: (event: Event) => void;\n      onEnded: (event: Event) => void;\n      controls: false;\n    };\n    player: {\n      min: 0;\n      step: 1;\n      max: VideoDurationType;\n      value: VideoDurationType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n    volume: {\n      min: 0;\n      max: 1;\n      step: 0.01;\n      value: VideoVolumeType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n  };\n  actions: {\n    play: VoidFunction;\n    pause: VoidFunction;\n    mute: VoidFunction;\n    unmute: VoidFunction;\n    reset: VoidFunction;\n    seek: (event: Event) => void;\n    changeVolume: (event: Event) => void;\n    triggerFullscreen: VoidFunction;\n  };\n\n  meta: {\n    state: UseVideoState;\n    isInitial: boolean;\n    isReady: boolean;\n    isPlaying: boolean;\n    isPaused: boolean;\n    matches: (states: UseVideoState[]) => boolean;\n    percentage: {\n      raw: number;\n      formatted: string;\n    };\n    currentTime: {\n      raw: VideoCurrentTimeType;\n      formatted: string;\n    };\n    duration: {\n      raw: VideoDurationType;\n      formatted: string;\n    };\n    volume: {\n      value: VideoVolumeType;\n      raw: number;\n      formatted: string;\n    };\n    muted: boolean;\n  };\n};\n\nexport function useVideo(src: UseVideoSrcType): UseVideoReturnType {\n  const [state, setState] = React.useState<UseVideoState>(\n    UseVideoState.initial\n  );\n\n  const ref = React.useRef<HTMLVideoElement | null>(null);\n\n  const duration = useField<VideoDurationType>(\"duration\", 0);\n  const currentTime = useField<VideoCurrentTimeType>(\"currentTime\", 0);\n  const volume = useField<VideoVolumeType>(\"volume\", VIDEO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (!ref.current) return;\n    ref.current.play();\n    setState(UseVideoState.playing);\n  }\n\n  function pause() {\n    if (!ref.current) return;\n    ref.current.pause();\n    setState(UseVideoState.paused);\n  }\n\n  function reset() {\n    if (!ref.current) return;\n    ref.current.currentTime = 0;\n    ref.current.pause();\n    currentTime.set(0);\n    setState(UseVideoState.paused);\n  }\n\n  function mute() {\n    if (!ref.current) return;\n    ref.current.volume = 0;\n    volume.set(0);\n  }\n\n  function unmute() {\n    if (!ref.current) return;\n    ref.current.volume = VIDEO_DEFAULT_VOLUME;\n    volume.set(VIDEO_DEFAULT_VOLUME);\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (!ref.current) return;\n    ref.current.currentTime = target.valueAsNumber;\n    currentTime.set(target.valueAsNumber);\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(UseVideoState.ready);\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLVideoElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(UseVideoState.paused);\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (!ref.current) return;\n    ref.current.volume = target.valueAsNumber;\n    volume.set(target.valueAsNumber);\n  }\n\n  function triggerFullscreen() {\n    if (!ref.current) return;\n    ref.current.requestFullscreen();\n  }\n\n  return {\n    props: {\n      video: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: {\n      play,\n      pause,\n      mute,\n      unmute,\n      reset,\n      seek,\n      changeVolume,\n      triggerFullscreen,\n    },\n    meta: {\n      state,\n      isInitial: state === UseVideoState.initial,\n      isReady: state === UseVideoState.ready,\n      isPlaying: state === UseVideoState.playing,\n      isPaused: state === UseVideoState.paused,\n      matches: (states: UseVideoState[]) =>\n        states.some((given) => given === state),\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import React from \"react\";\n\nimport * as hooks from \"../hooks\";\n\nexport type DialogPropsType = hooks.UseToggleReturnType &\n  JSX.IntrinsicElements[\"dialog\"];\n\nexport function Dialog(props: DialogPropsType) {\n  const { disable, enable, on, off, toggle, ...rest } = props;\n  const ref = React.useRef<HTMLDialogElement>(null);\n\n  React.useEffect(() => {\n    if (props.on) {\n      // @ts-ignore\n      ref.current?.showModal();\n    } else {\n      // @ts-ignore\n      ref.current?.close();\n    }\n  }, [props.on]);\n\n  hooks.useKeyboardShortcuts({ Escape: disable });\n  hooks.useAutofocus({ ref, condition: props.on });\n  hooks.useScrollLock(props.on);\n  hooks.useClickOutside(ref, disable);\n\n  return (\n    <dialog\n      ref={ref}\n      tabIndex={0}\n      data-display={props.on ? \"flex\" : \"none\"}\n      data-direction=\"column\"\n      data-mx=\"auto\"\n      data-p=\"24\"\n      data-position=\"absolute\"\n      data-z=\"2\"\n      data-bg=\"white\"\n      data-br=\"4\"\n      data-bc=\"gray-300\"\n      data-bw=\"1\"\n      data-backdrop=\"black\"\n      {...rest}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { useIsOnline } from \"../hooks\";\n\nexport function OfflineIndicator(props: { children: React.ReactChild }) {\n  const isOnline = useIsOnline();\n\n  if (isOnline) return null;\n\n  return <>{props.children}</>;\n}\n","import React from \"react\";\nimport type { PolymorphicPropsWithoutRef } from \"react-polymorphic-types\";\n\nconst OutboundLinkDefaultElement = \"a\";\n\nexport function OutboundLink<\n  T extends React.ElementType = typeof OutboundLinkDefaultElement\n>(props: PolymorphicPropsWithoutRef<{}, T>) {\n  const { as, ...rest } = props;\n\n  const Element = as || OutboundLinkDefaultElement;\n\n  return <Element target=\"_blank\" rel=\"noreferer noopener\" {...rest} />;\n}\n","type ExecFunctionListType = Function[];\n\nexport function exec(list: ExecFunctionListType) {\n  return function () {\n    list.forEach((item) => item());\n  };\n}\n","import React from \"react\";\n\nimport { useWindowDimensions } from \"../hooks/use-window-dimensions\";\nimport { useToggle } from \"../hooks/use-toggle\";\nimport { useField } from \"../hooks/use-field\";\nimport { exec } from \"../exec\";\n\nfunction Dimensions(props: JSX.IntrinsicElements[\"div\"]) {\n  const dimensions = useWindowDimensions();\n\n  return (\n    <div data-fs=\"12\" {...props}>\n      {dimensions.width} x {dimensions.height}\n    </div>\n  );\n}\n\nfunction Truncates() {\n  const enabled = useToggle();\n  const length = useField(\"length\", 128);\n\n  const [cache, setCache] = React.useState(new Map());\n\n  const handleTruncateClick = () => {\n    const elements = document.querySelectorAll('[data-transform=\"truncate\"]');\n\n    const updatedCache = new Map(cache);\n\n    elements.forEach((element) => {\n      const originalText = element.textContent;\n\n      if (!updatedCache.has(element)) {\n        updatedCache.set(element, originalText);\n        element.textContent = \"x\".repeat(length.value);\n      } else {\n        element.textContent = updatedCache.get(element);\n        updatedCache.delete(element);\n      }\n    });\n\n    setCache(updatedCache);\n  };\n\n  return (\n    <div data-display=\"flex\" data-cross=\"center\" data-gap=\"6\">\n      <label className=\"c-label\" {...length.label.props}>\n        Length\n      </label>\n\n      <input\n        className=\"c-input\"\n        type=\"number\"\n        value={length.value}\n        onChange={(event) => length.set(event.currentTarget.valueAsNumber)}\n        {...length.input.props}\n      />\n      <button\n        className=\"c-button\"\n        data-variant=\"bare\"\n        type=\"button\"\n        onClick={exec([() => handleTruncateClick(), enabled.toggle])}\n      >\n        {enabled.on ? \"Hide truncates\" : \"Expand truncates\"}\n      </button>\n    </div>\n  );\n}\n\nexport const DevTools = { Dimensions, Truncates };\n","import { noop } from \"./noop\";\n\nexport type CopyToClipboardTextType = string;\ntype OnCopyToClipboardFailureType = (error?: unknown) => void;\ntype OnCopyToClipboardSuccessType = VoidFunction;\n\nconst defaultOnCopyToClipboardFailure: OnCopyToClipboardFailureType = (error) =>\n  console.warn(\"Copying to clipboard not supported\");\n\nexport type CopyToClipboardOptionsType = {\n  text: string;\n  onFailure?: OnCopyToClipboardFailureType;\n  onSuccess?: OnCopyToClipboardSuccessType;\n};\n\nexport async function copyToClipboard(options: CopyToClipboardOptionsType) {\n  const onFailure = options.onFailure ?? defaultOnCopyToClipboardFailure;\n  const onSuccess = options.onSuccess ?? noop;\n\n  if (!navigator.clipboard) onFailure();\n\n  try {\n    await navigator.clipboard.writeText(options.text);\n    onSuccess();\n  } catch (error) {\n    onFailure(error);\n  }\n}\n","import type { HourType } from \"@bgord/node/dist/schema\";\n\nimport * as Time from \"./time\";\n\nexport type DateType = Date | number | null | undefined;\n\nexport class DateFormatter {\n  static datetime(date: DateType, defaultValue = \"N/A\"): string {\n    if (!date) return defaultValue;\n\n    return new Date(date).toLocaleString();\n  }\n\n  static monthDay(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const days = DateFormatter._padDatePart(date.getDate());\n    const months = DateFormatter._padDatePart(date.getMonth() + 1);\n\n    return `${months}/${days}`;\n  }\n\n  static form(date: Date | null): string {\n    if (!date) return DateFormatter.form(new Date());\n\n    const year = DateFormatter._padDatePart(date.getFullYear());\n    const month = DateFormatter._padDatePart(date.getMonth() + 1);\n    const day = DateFormatter._padDatePart(date.getDate());\n\n    return `${year}-${month}-${day}`;\n  }\n\n  static clockUTC(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getUTCHours());\n    const minutes = DateFormatter._padDatePart(date.getUTCMinutes());\n    const seconds = DateFormatter._padDatePart(date.getUTCSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static clockLocal(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static countdown(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static formDatetimeLocal(timestamp: number) {\n    const localTimestamp =\n      timestamp - Time.Minutes(new Date().getTimezoneOffset()).ms;\n\n    return new Date(localTimestamp).toISOString().slice(0, 16);\n  }\n\n  static _padDatePart(value: number) {\n    return String(value).padStart(2, \"0\");\n  }\n}\n\nexport class HourFormatter {\n  static convertUtcToLocal(utcHour: HourType) {\n    const timeZoneOffsetInMins = new Date().getTimezoneOffset();\n\n    const utcHourInMins = Time.Hours(utcHour).minutes;\n\n    const localHourInMins = utcHourInMins - timeZoneOffsetInMins;\n    const localHour = (localHourInMins / 60) % 24;\n    const formattedLocalHour = `${String(localHour).padStart(2, \"0\")}:00`;\n\n    return { value: localHour, label: formattedLocalHour };\n  }\n}\n","import type { Schema } from \"@bgord/node\";\nimport React from \"react\";\n\nexport type FeatureFlagNameType = string;\n\nexport type FeatureFlagsContextValueType = {\n  flags: Record<FeatureFlagNameType, Schema.FeatureFlagType>;\n};\n\ntype FeatureFlagsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: FeatureFlagsContextValueType[\"flags\"];\n};\n\nconst FeatureFlagsContext = React.createContext<\n  FeatureFlagsContextValueType[\"flags\"]\n>({});\n\nexport function FeatureFlagsContextProvider(\n  props: FeatureFlagsContextPropsType\n) {\n  return (\n    <FeatureFlagsContext.Provider value={props.value}>\n      {props.children}\n    </FeatureFlagsContext.Provider>\n  );\n}\n\nexport function useFeatureFlags() {\n  const value = React.useContext(FeatureFlagsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useFeatureFlags must be used within the FeatureFlagsContext`\n    );\n  }\n\n  return value;\n}\n\nexport function useFeatureFlag(name: FeatureFlagNameType): boolean {\n  const value = React.useContext(FeatureFlagsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useFeatureFlag must be used within the FeatureFlagsContext`\n    );\n  }\n\n  return value[name] === \"yes\";\n}\n","export type FilterType = Record<string, unknown> | undefined;\n\nexport class FilterUrl {\n  value: string;\n\n  constructor(url: string, filters?: FilterType) {\n    const nonEmptyFilters = this.getNonEmptyFilters(filters);\n    const query = new URLSearchParams(nonEmptyFilters);\n\n    if (query.toString() === \"\") {\n      this.value = url;\n\n      return;\n    }\n\n    this.value = `${url}?${query.toString()}`;\n  }\n\n  private getNonEmptyFilters(filters: FilterType) {\n    if (filters === undefined) return {};\n\n    return Object.fromEntries(\n      Object.entries(filters).filter(([_key, value]) => value !== undefined)\n    ) as Record<string, string>;\n  }\n}\n","import { getSafeWindow } from \"./safe-window\";\n\nexport function isClient() {\n  return !getSafeWindow();\n}\n","import type { UseInfiniteQueryResult } from \"react-query\";\nimport type { Paged } from \"@bgord/node\";\n\nexport class Pagination {\n  static empty = { result: [], meta: { exhausted: true } };\n\n  static infinite<T>(infinite: UseInfiniteQueryResult<Paged<T>>): T[] {\n    return (\n      infinite.data?.pages\n        ?.flat()\n        .map((data) => data.result)\n        .flat() ?? []\n    );\n  }\n}\n\nexport type { Paged, PageType } from \"@bgord/node\";\n\nexport type PagedMetaType = Paged<unknown>[\"meta\"];\n","import React from \"react\";\n\ntype ReorderingBaseItemType = { id: string };\ntype ReorderingIndexType = number;\ntype ReorderingCorrelationIdType = string;\n\nexport type ReorderingTransferType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType\n> = {\n  correlationId: ReorderingCorrelationIdType;\n  id: T[\"id\"];\n  item: T;\n  to: ReorderingIndexType;\n};\n\nexport type UseReorderingConfigType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType\n> = {\n  correlationId: ReorderingCorrelationIdType;\n  initialItems: T[];\n  callback: (transfer: ReorderingTransferType<T>) => void;\n  enabled?: boolean;\n};\n\nexport type UseReorderingReturnType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType\n> = {\n  items: T[];\n  enabled: boolean;\n  props: {\n    item: (index: ReorderingIndexType) => {\n      onDragOver: (event: React.DragEvent<HTMLElement>) => void;\n    };\n    handle: (index: ReorderingIndexType) => {\n      onDragStart: (event: React.DragEvent<HTMLElement>) => void;\n      onDragEnd: (event: React.DragEvent<HTMLElement>) => void;\n      draggable: UseReorderingConfigType<T>[\"enabled\"];\n    };\n  };\n};\n\nexport function useReordering<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType\n>(config: UseReorderingConfigType<T>): UseReorderingReturnType<T> {\n  const enabled = config.enabled ?? true;\n\n  const [items, setItems] = React.useState<T[]>(config.initialItems);\n  React.useEffect(\n    () => setItems(config.initialItems),\n    [JSON.stringify(config.initialItems)]\n  );\n\n  const draggedItem = React.useRef<T | null>(null);\n\n  const [startIndex, setStartIndex] =\n    React.useState<ReorderingIndexType | null>(null);\n  const [toIndex, setToIndex] = React.useState<ReorderingIndexType | null>(\n    null\n  );\n\n  function onDragStartFactory(index: ReorderingIndexType) {\n    return function onDragStart(event: React.DragEvent<HTMLElement>) {\n      setStartIndex(index);\n      draggedItem.current = items[index] ?? null;\n\n      if (!event?.dataTransfer || event.currentTarget.parentNode) return;\n\n      event.dataTransfer.effectAllowed = \"move\";\n      event.dataTransfer.setData(\n        \"text/html\",\n        event.currentTarget.parentNode as unknown as string\n      );\n      event.dataTransfer.setDragImage(\n        event.currentTarget.parentNode as unknown as Element,\n        20,\n        20\n      );\n    };\n  }\n\n  function onDragOverFactory(index: ReorderingIndexType) {\n    return function onDragOver(event: React.DragEvent<HTMLElement>) {\n      event.preventDefault();\n\n      const draggedOverItem = items[index];\n      setToIndex(index);\n\n      // if the item is dragged over itself, ignore\n      if (draggedItem.current === draggedOverItem || !draggedItem.current) {\n        return;\n      }\n\n      // filter out the currently dragged item\n      let updated = items.filter((item) => item !== draggedItem.current);\n\n      // add the dragged item after the dragged over item\n      updated.splice(index, 0, draggedItem.current);\n\n      setItems(updated);\n    };\n  }\n\n  function onDragEndFactory(index: ReorderingIndexType) {\n    return function onDragEnd(_event: React.DragEvent<HTMLElement>) {\n      if (startIndex !== null && toIndex !== null && startIndex !== toIndex) {\n        config.callback({\n          correlationId: config.correlationId,\n          id: items[index]?.id as T[\"id\"],\n          item: items[index] as T,\n          to: toIndex as ReorderingIndexType,\n        });\n      }\n\n      setStartIndex(null);\n      draggedItem.current = null;\n      setToIndex(null);\n    };\n  }\n\n  const cursor = enabled ? (draggedItem.current ? \"grabbing\" : \"grab\") : \"auto\";\n\n  return {\n    items,\n    enabled,\n    props: {\n      item: (index: ReorderingIndexType) => ({\n        onDragOver: onDragOverFactory(index),\n      }),\n      handle: (index: ReorderingIndexType) => ({\n        onDragStart: onDragStartFactory(index),\n        onDragEnd: onDragEndFactory(index),\n        draggable: enabled,\n        style: { cursor },\n      }),\n    },\n  };\n}\n","export type RhythmBaseType = number;\nexport type RhythmTimesType = number;\n\nconst DEFAULT_BASE_PX = 12;\n\nexport function Rhythm(base: RhythmBaseType = DEFAULT_BASE_PX) {\n  return {\n    times(times: RhythmTimesType) {\n      const result = base * times;\n\n      const dimensions = {\n        height: { height: px(result) },\n        minHeight: { minHeight: px(result) },\n        maxHeight: { maxHeight: px(result) },\n        width: { width: px(result) },\n        minWidth: { minWidth: px(result) },\n        maxWidth: { maxWidth: px(result) },\n        square: { height: px(result), width: px(result) },\n      };\n\n      const style = {\n        height: { style: { height: px(result) } },\n        minHeight: { style: { minHeight: px(result) } },\n        maxHeight: { style: { maxHeight: px(result) } },\n        width: { style: { width: px(result) } },\n        minWidth: { style: { minWidth: px(result) } },\n        maxWidth: { style: { maxWidth: px(result) } },\n        square: { style: { height: px(result), width: px(result) } },\n      };\n\n      return { px: px(result), raw: result, style, ...dimensions };\n    },\n  };\n}\n\nfunction px(number: number) {\n  return `${number}px`;\n}\n","export class ThousandsSeparator {\n  private static DEFAULT_SEPARATOR = ' ';\n\n  static format(\n    value: number,\n    separator = ThousandsSeparator.DEFAULT_SEPARATOR\n  ): string {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\n  }\n}\n","import React from \"react\";\nimport { useList } from \"./hooks/use-list\";\n\nexport type ToastsConfigType = {\n  timeout?: number;\n};\n\nexport type BaseToastType = {\n  id: string;\n  message: string;\n};\n\ntype ToastsContextDataType<ToastType extends BaseToastType = BaseToastType> = [\n  ToastType[],\n  {\n    add: (toast: Omit<ToastType, \"id\">) => void;\n    remove: (toast: ToastType) => void;\n    clear: VoidFunction;\n  }\n];\n\nconst ToastsContext = React.createContext<ToastsContextDataType | undefined>(\n  undefined\n);\n\nexport function ToastsContextProvider(\n  props: { children: JSX.Element | JSX.Element[] } & ToastsConfigType\n) {\n  function useToastsImplementation(): ToastsContextDataType {\n    const timeout = props?.timeout ?? 5000;\n\n    const [toasts, actions] = useList<BaseToastType>({\n      comparisonFn: (a, b) => a.id === b.id,\n    });\n\n    function add(payload: Omit<BaseToastType, \"id\">) {\n      const id = String(Date.now());\n      const toast = { ...payload, id };\n\n      actions.add(toast);\n      setTimeout(() => actions.remove(toast), timeout);\n    }\n\n    return [\n      [...toasts].reverse(),\n      { add, remove: actions.remove, clear: actions.clear },\n    ];\n  }\n\n  const [toasts, actions] = useToastsImplementation();\n\n  return (\n    <ToastsContext.Provider value={[toasts, actions]}>\n      {props.children}\n    </ToastsContext.Provider>\n  );\n}\n\nexport function useToastsContext<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const context = React.useContext<ToastsContextDataType<ToastType>>(\n    ToastsContext as unknown as React.Context<ToastsContextDataType<ToastType>>\n  );\n\n  if (context === undefined) {\n    throw new Error(`useToasts must be used within the ToastsContextProvider`);\n  }\n\n  return context;\n}\n\nexport function useToastTrigger<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const [, actions] = useToastsContext<ToastType>();\n\n  return actions.add;\n}\n"],"names":["value","defaultValue","useRef","useEffect","previousValue","current","props","duration","React","useState","visible","isInitial","appeared","appearing","hidden","state","setState","usePreviousValue","AnimaState","setTimeout","previousState","hiding","cloneElement","children","effect","style","rest","setIsInitial","map","child","list","config","direction","item","officialList","setOfficialList","x","some","id","added","push","length","every","deleted","items","find","y","updated","count","filter","ServerError","message","_known","this","isServerError","Object","hasOwnProperty","extract","response","ok","json","error","handle","payload","input","init","mode","headers","getTimezoneOffset","toString","redirect","then","format","Math","floor","String","minutes","padStart","seconds","name","evaluatedDefaultValue","setValue","set","clear","label","htmlFor","changed","unchanged","AUDIO_DEFAULT_VOLUME","src","UseAudioState","initial","useField","volume","round","currentTime","event","currentTarget","ref","target","valueAsNumber","audio","onTimeUpdate","onLoadedMetadata","ready","onEnded","paused","controls","player","min","step","max","onInput","seek","percentage","changeVolume","actions","play","playing","pause","mute","unmute","reset","meta","isReady","isPlaying","isPaused","matches","states","given","raw","formatted","DurationFormatter","muted","condition","_config$ref$current","focus","width","undefined","height","windowSize","setWindowSize","getSafeWindow","safeWindow","addEventListener","handleResize","removeEventListener","innerWidth","innerHeight","breakpoint","useWindowDimensions","dimensions","onClickOutside","exclude","document","handleClickOutside","_ref$current","contains","node","_node$current","query","onChange","filterFn","toLowerCase","includes","hours","ms","Time","Days","Hours","Minutes","Seconds","now","getCurrentTimestamp","timestamp","setTimestamp","setInterval","timer","debouncedValue","setDebouncedValue","delayMs","on","setIsOn","off","enable","disable","toggle","v","useToggle","designMode","useLayoutEffect","querySelector","body","window","getComputedStyle","html","overscrollBehavior","originalBodyOverflowBehavior","originalHtmlOverscrollBehavior","title","UseExpandableListState","contracted","expanded","getState","displayShowMore","displayShowLess","areThereExcessiveElements","showMore","showLess","numberOfExcessiveElements","_element","index","maxSize","Infinity","key","setKey","UseFileState","idle","file","setFile","files","size","selected","useMemo","URL","createObjectURL","isIdle","isSelected","isError","data","selectFile","clearFile","multiple","preview","defaultQuery","currentQuery","keys","onUpdate","noop","setQuery","previousQuery","Boolean","newQuery","isNewQueryInEnum","options","enabled","isHovering","handleMouseEnter","handleMouseLeave","attach","getImageResolution","path","emptyImageResolution","createElement","resolve","reject","img","onload","onerror","promise","resolution","result","execute","_file$data","useIsOnline","onLine","navigator","onlineStatus","handleOnline","handleOffline","threshold","root","rootMargin","IntersectionObserverEntry","prototype","defaultUseIsVisibleConfig","isVisible","setVisible","isIntersectionObserverSupported","element","entry","_entry$","isIntersecting","observer","observe","unobserve","a","b","comparisonFn","defaultComparisonFn","defaultItem","setItem","newer","isDefault","exists","compare","executor","tinykeys","language","PluralizationSupportedLanguages","en","plural","singular","pl","genitive","console","warn","KeyNameEnum","createContext","translations","TranslationsContext","Provider","useContext","variables","translation","entries","reduce","replace","useLanguage","supportedLanguages","enum","previous","Cookies","location","reload","handler","e","preventDefault","defaultItems","setItems","Array","isArray","add","remove","isAdded","update","_meta$value","previousPage","_meta$value2","nextPage","_meta$value3","lastPage","page","last","firstPage","active","disabled","go","SafeLocalStorage","get","fallbackValue","Storage","lastInvocationTimestamp","verify","currentTimestamp","allowed","limitMs","nextAllowedTimestamp","remainingMs","Date","rateLimiter","action","fallback","scrollPosition","setScrollPosition","scrollY","clientHeight","scrollHeight","scrollbarVisibility","measure","goToTop","scrollTo","top","left","behavior","position","hasChanged","overflow","originalBodyOverflow","originalHtmlOverflow","bind","search","url","params","history","pushState","VIDEO_DEFAULT_VOLUME","UseVideoState","video","triggerFullscreen","requestFullscreen","showModal","_ref$current2","close","hooks","Escape","tabIndex","as","rel","forEach","DevTools","Dimensions","Truncates","cache","setCache","className","type","onClick","exec","querySelectorAll","elements","textContent","updatedCache","has","originalText","repeat","onFailure","defaultOnCopyToClipboardFailure","onSuccess","clipboard","writeText","text","datetime","date","toLocaleString","monthDay","DateFormatter","_padDatePart","getDate","getMonth","days","form","getFullYear","clockUTC","getUTCHours","getUTCMinutes","getUTCSeconds","clockLocal","getHours","getMinutes","getSeconds","countdown","formDatetimeLocal","localTimestamp","toISOString","slice","convertUtcToLocal","utcHour","timeZoneOffsetInMins","localHour","FeatureFlagsContext","FilterUrl","filters","getNonEmptyFilters","nonEmptyFilters","fromEntries","Pagination","infinite","_infinite$data","pages","_infinite$data$pages","flat","initialItems","JSON","stringify","startIndex","setStartIndex","toIndex","setToIndex","draggedItem","dataTransfer","parentNode","effectAllowed","setData","setDragImage","draggedOverItem","splice","_event","callback","correlationId","_items$index2","to","onDragOver","onDragOverFactory","onDragStart","onDragStartFactory","onDragEnd","onDragEndFactory","draggable","cursor","base","times","px","minHeight","maxHeight","minWidth","maxWidth","square","number","empty","exhausted","ThousandsSeparator","separator","DEFAULT_SEPARATOR","timeout","useList","reverse","toast","ToastsContext","context","useToastsContext"],"mappings":"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"}