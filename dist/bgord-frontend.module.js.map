{"version":3,"file":"bgord-frontend.module.js","sources":["../hooks/use-client-search.ts","../hooks/use-expandable-list.ts","../hooks/use-file.ts","../hooks/use-previous-value.ts","../noop.ts","../hooks/use-filter.ts","../hooks/use-list.ts","../hooks/use-scroll-lock.ts","../hooks/use-toggle.ts","../safe-window.ts","../hooks/use-url-filter.ts","../hooks/use-window-dimensions.ts","../components/outbound-link.tsx","../toasts.tsx","../translations.tsx","../anima.tsx","../filter-url.ts","../server-error.ts"],"sourcesContent":["import { useState } from \"react\";\n\nexport type UseClientSearchQueryType = string;\n\nexport type UseClientSearchReturnType = {\n  query: UseClientSearchQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: (value: string) => boolean;\n};\n\nexport function useClientSearch(): UseClientSearchReturnType {\n  const emptyQuery: UseClientSearchQueryType = \"\";\n\n  const [query, setValue] = useState<UseClientSearchQueryType>(emptyQuery);\n\n  function clear() {\n    setValue(emptyQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setValue(event.currentTarget.value);\n  }\n\n  function filterFn(value: string) {\n    if (query === emptyQuery) return true;\n\n    return value?.toLowerCase().includes(query.toLowerCase());\n  }\n\n  return { query, clear, onChange, filterFn };\n}\n","import { useState, useEffect } from \"react\";\n\nexport type UseExpandableListConfigType = { max: number; length: number };\n\nexport enum UseExpandableListState {\n  contracted = \"contracted\",\n  expanded = \"expanded\",\n}\n\nexport function useExpandableList(config: UseExpandableListConfigType) {\n  const numberOfExcessiveElements = config.length - config.max;\n  const areThereExcessiveElements = config.length > config.max;\n\n  function getState() {\n    return areThereExcessiveElements\n      ? UseExpandableListState.contracted\n      : UseExpandableListState.expanded;\n  }\n\n  const [state, setState] = useState<UseExpandableListState>(getState);\n\n  useEffect(() => setState(getState()), [config.length, config.max]);\n\n  function showMore() {\n    if (state === UseExpandableListState.contracted) {\n      setState(UseExpandableListState.expanded);\n    }\n  }\n\n  function showLess() {\n    if (state === UseExpandableListState.expanded) {\n      setState(UseExpandableListState.contracted);\n    }\n  }\n\n  function filterFn(_element: any, index: number) {\n    if (state === UseExpandableListState.expanded) return true;\n    return index < config.max;\n  }\n\n  return {\n    state,\n    displayShowMore: state === UseExpandableListState.contracted,\n    displayShowLess:\n      state === UseExpandableListState.expanded && areThereExcessiveElements,\n    showMore,\n    showLess,\n    numberOfExcessiveElements,\n    filterFn,\n  };\n}\n","import { useState } from \"react\";\n\nexport type UseFileConfigType = {\n  maxSize?: number;\n};\n\nexport enum UseFileState {\n  \"idle\" = \"idle\",\n  \"selected\" = \"selected\",\n  \"error\" = \"error\",\n}\n\ntype UseFileIdle = {\n  state: UseFileState.idle;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): void;\n    clearFile: VoidFunction;\n  };\n};\n\ntype UseFileSelected = {\n  state: UseFileState.selected;\n  data: File;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): void;\n    clearFile: VoidFunction;\n  };\n};\n\ntype UseFileError = {\n  state: UseFileState.error;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): void;\n    clearFile: VoidFunction;\n  };\n};\n\nexport function useFile(\n  config?: UseFileConfigType\n): UseFileIdle | UseFileSelected | UseFileError {\n  const maxSize = config?.maxSize ?? Infinity;\n\n  const [state, setState] = useState<UseFileState>(UseFileState.idle);\n\n  const [file, setFile] = useState<File | null>(null);\n\n  function selectFile(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.currentTarget.files;\n\n    if (!files || !files[0]) return;\n\n    const file = files[0];\n\n    if (file.size > maxSize) return setState(UseFileState.error);\n\n    setFile(file);\n    setState(UseFileState.selected);\n  }\n\n  function clearFile() {\n    setFile(null);\n    setState(UseFileState.idle);\n  }\n\n  const actions = { selectFile, clearFile };\n\n  if (state === UseFileState.idle) {\n    return { state, data: null, actions };\n  }\n\n  if (state === UseFileState.selected) {\n    return { state, data: file as File, actions };\n  }\n\n  return { state, data: null, actions };\n}\n","import { useEffect, useRef } from \"react\";\n\nexport function usePreviousValue<T>(value: T, defaultValue?: T | undefined) {\n  const previousValue = useRef<T | undefined>(defaultValue);\n\n  useEffect(() => {\n    previousValue.current = value;\n  });\n\n  return previousValue.current;\n}\n","export function noop() {}\n","import { useState, useEffect } from \"react\";\nimport { usePreviousValue } from \"./use-previous-value\";\nimport { noop } from \"../noop\";\n\nexport type UseFilterQueryType = string | undefined;\n\nexport type UseFilterConfigType<T> = {\n  enum: { [key: string]: UseFilterQueryType };\n  defaultQuery?: UseFilterQueryType;\n  filterFn?: (value: T) => boolean;\n  onUpdate?: (\n    current: UseFilterQueryType,\n    previous: UseFilterQueryType\n  ) => void;\n};\n\nexport function useFilter<T = string>(config: UseFilterConfigType<T>) {\n  const defaultQuery = config.defaultQuery ?? undefined;\n  const filterFn = config.filterFn ?? defaultFilterFn;\n  const options = Object.keys(config.enum);\n  const onUpdate = config?.onUpdate ?? noop;\n\n  const [query, setQuery] = useState<UseFilterQueryType>(defaultQuery);\n  const previousQuery = usePreviousValue(query);\n\n  function clear() {\n    setQuery(defaultQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newQuery = event.currentTarget.value;\n\n    const isNewQueryInEnum = Boolean(config.enum[String(newQuery)]);\n\n    setQuery(isNewQueryInEnum ? newQuery : undefined);\n  }\n\n  function defaultFilterFn(value: T) {\n    if (query === undefined) return true;\n\n    return query === String(value);\n  }\n\n  useEffect(() => {\n    onUpdate(query, previousQuery);\n  }, [previousQuery, query]);\n\n  return { query, clear, onChange, filterFn, options, onUpdate };\n}\n","import { useState, SetStateAction, Dispatch } from \"react\";\n\nexport type UseListActionsType<T> = {\n  clear: VoidFunction;\n  add: (x: T | T[]) => void;\n  remove: (x: T) => void;\n  toggle: (x: T) => void;\n  isAdded: (x: T) => boolean;\n  update: Dispatch<SetStateAction<T[]>>;\n};\n\nexport type UseListReturnType<T> = [T[], UseListActionsType<T>];\n\nexport type UseListConfigType<T> = {\n  defaultItems?: T[];\n  comparisonFn?: (a: T, b: T) => boolean;\n};\n\nexport function useList<T>(\n  config?: UseListConfigType<T>\n): UseListReturnType<T> {\n  const defaultItems = config?.defaultItems ?? [];\n\n  const defaultComparisonFn = (a: T, b: T) => a === b;\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [items, setItems] = useState<T[]>(defaultItems);\n\n  function clear() {\n    setItems([]);\n  }\n\n  function add(payload: T | T[]) {\n    setItems((items) => {\n      if (Array.isArray(payload)) {\n        return [...items, ...payload];\n      }\n      return [...items, payload];\n    });\n  }\n\n  function remove(item: T) {\n    setItems((items) => items.filter((x) => !comparisonFn(x, item)));\n  }\n\n  function isAdded(item: T) {\n    return items.some((x) => comparisonFn(x, item));\n  }\n\n  function toggle(item: T) {\n    isAdded(item) ? remove(item) : add(item);\n  }\n\n  return [items, { clear, add, remove, toggle, isAdded, update: setItems }];\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useScrollLock(condition = true) {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overflows\n    const originalBodyOverflow = window.getComputedStyle(body).overflow;\n    const originalHtmlOverflow = window.getComputedStyle(html).overflow;\n\n    // Prevent scrolling on mount\n    body.style.overflow = \"hidden\";\n    html.style.overflow = \"hidden\";\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      body.style.overflow = originalBodyOverflow;\n      html.style.overflow = originalHtmlOverflow;\n    };\n  }, [condition]);\n}\n","import { useState } from \"react\";\n\nexport function useToggle(defaultValue = false) {\n  const [on, setIsOn] = useState(defaultValue);\n\n  const enable = () => setIsOn(true);\n  const disable = () => setIsOn(false);\n  const toggle = () => setIsOn((v) => !v);\n\n  return { on, off: !on, enable, disable, toggle };\n}\n","export function getSafeWindow() {\n  if (typeof window === \"undefined\") return undefined;\n  return window;\n}\n","import { useFilter, UseFilterConfigType } from \"./use-filter\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type UseUrlFilterConfigType<T> = UseFilterConfigType<T> & {\n  label: string;\n};\n\nexport function useUrlFilter<T>(config: UseUrlFilterConfigType<T>) {\n  const safeWindow = getSafeWindow();\n\n  const currentQuery =\n    new URLSearchParams(safeWindow?.location.search).get(config.label) ??\n    undefined;\n\n  return useFilter({\n    onUpdate: (current, previous) => {\n      if (!safeWindow) return;\n\n      const url = new URL(safeWindow.location.toString());\n      const params = new URLSearchParams(url.search);\n\n      if (current === undefined) {\n        params.delete(config.label);\n      } else {\n        params.set(config.label, current);\n      }\n\n      if (current === previous) return;\n\n      if (current !== previous) {\n        url.search = params.toString();\n        history.pushState({}, \"\", url.toString());\n      }\n    },\n    ...config,\n    defaultQuery: currentQuery ?? config.defaultQuery,\n  });\n}\n","import { useState, useEffect } from \"react\";\n\nexport type WindowDimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowDimensions(): WindowDimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowDimensions>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import React from \"react\";\nimport type { PolymorphicPropsWithoutRef } from \"react-polymorphic-types\";\n\nconst OutboundLinkDefaultElement = \"a\";\n\nexport function OutboundLink<\n  T extends React.ElementType = typeof OutboundLinkDefaultElement\n>(props: PolymorphicPropsWithoutRef<{}, T>) {\n  const { as, ...rest } = props;\n\n  const Element = as || OutboundLinkDefaultElement;\n\n  return <Element target=\"_blank\" rel=\"noreferer noopener\" {...rest} />;\n}\n","import React from \"react\";\nimport { useList } from \"./hooks/use-list\";\n\nexport type ToastsConfigType = {\n  timeout?: number;\n};\n\nexport type BaseToastType = {\n  id: string;\n  message: string;\n};\n\ntype ToastsContextDataType<ToastType extends BaseToastType = BaseToastType> = [\n  ToastType[],\n  {\n    add: (toast: Omit<ToastType, \"id\">) => void;\n    remove: (toast: ToastType) => void;\n    clear: VoidFunction;\n  }\n];\n\nconst ToastsContext = React.createContext<ToastsContextDataType | undefined>(\n  undefined\n);\n\nexport function ToastsContextProvider(\n  props: { children: JSX.Element | JSX.Element[] } & ToastsConfigType\n) {\n  function useToastsImplementation(): ToastsContextDataType {\n    const timeout = props?.timeout ?? 5000;\n\n    const [toasts, actions] = useList<BaseToastType>({\n      comparisonFn: (a, b) => a.id === b.id,\n    });\n\n    function add(payload: Omit<BaseToastType, \"id\">) {\n      const id = String(Date.now());\n      const toast = { ...payload, id };\n\n      actions.add(toast);\n      setTimeout(() => actions.remove(toast), timeout);\n    }\n\n    return [\n      [...toasts].reverse(),\n      { add, remove: actions.remove, clear: actions.clear },\n    ];\n  }\n\n  const [toasts, actions] = useToastsImplementation();\n\n  return (\n    <ToastsContext.Provider value={[toasts, actions]}>\n      {props.children}\n    </ToastsContext.Provider>\n  );\n}\n\nexport function useToastsContext<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const context = React.useContext<ToastsContextDataType<ToastType>>(\n    ToastsContext as unknown as React.Context<ToastsContextDataType<ToastType>>\n  );\n\n  if (context === undefined) {\n    throw new Error(`useToasts must be used within the ToastsContextProvider`);\n  }\n\n  return context;\n}\n\nexport function useToastTrigger<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const [, actions] = useToastsContext<ToastType>();\n\n  return actions.add;\n}\n","import React from \"react\";\nimport type { TranslationsType } from \"@bgord/node\";\n\nconst TranslationsContext = React.createContext<TranslationsType>({});\n\ntype TranslationsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  translations: TranslationsType;\n};\n\nexport function TranslationsContextProvider(\n  props: TranslationsContextPropsType\n) {\n  return (\n    <TranslationsContext.Provider value={props.translations}>\n      {props.children}\n    </TranslationsContext.Provider>\n  );\n}\n\nexport function useTranslations() {\n  const translations = React.useContext(TranslationsContext);\n\n  if (translations === undefined) {\n    throw new Error(\n      `useTranslations must be used within the TranslationsContext`\n    );\n  }\n\n  function translate(key: string) {\n    const result = translations[key];\n\n    if (!result)\n      console.warn(`[@bgord/frontend] missing translation for key ${key}.`);\n\n    return result ?? key;\n  }\n\n  return translate;\n}\n","import React from \"react\";\n\nimport { usePreviousValue } from \"./hooks/use-previous-value\";\n\nexport enum AnimaState {\n  appearing = \"appearing\",\n  appeared = \"appeared\",\n  hidding = \"hidding\",\n  hidden = \"hidden\",\n}\n\nexport type AnimaEffectType = string;\n\nexport type AnimaConfigType = {\n  children: JSX.Element;\n\n  visible: boolean;\n  effect: AnimaEffectType;\n\n  duration?: number;\n  isInitial?: boolean;\n};\n\nexport function Anima(props: AnimaConfigType) {\n  const duration = props.duration ?? 300;\n\n  function getInitialState() {\n    if (!props.visible) return AnimaState.hidden;\n    if (props.isInitial) return AnimaState.appeared;\n    return AnimaState.appearing;\n  }\n\n  const [state, setState] = React.useState<AnimaState>(getInitialState);\n  const previousState = usePreviousValue(state);\n\n  React.useEffect(() => {\n    if (props.isInitial) return;\n\n    if (props.visible) {\n      setState(AnimaState.appearing);\n      setTimeout(() => setState(AnimaState.appeared), 100);\n    } else {\n      if (!previousState) return;\n      setState(AnimaState.hidding);\n      setTimeout(() => setState(AnimaState.hidden), duration);\n    }\n  }, [props.visible]);\n\n  if (state === AnimaState.hidden) return null;\n\n  return React.cloneElement(props.children, {\n    \"data-anima\": state,\n    \"data-anima-effect\": props.effect,\n    style: { \"--duration\": `${duration}ms`, ...props.children.props.style },\n  });\n}\n\nexport function getAnimaProps(props: Record<string, any>) {\n  return {\n    \"data-anima\": props[\"data-anima\"] as AnimaState | undefined,\n    \"data-anima-effect\": props[\"data-anima-effect\"] as\n      | AnimaEffectType\n      | undefined,\n    style: props.style as React.CSSProperties,\n  };\n}\n\nexport type AnimaListPropsType = {\n  children: JSX.Element[];\n} & JSX.IntrinsicElements[\"ul\"];\n\nexport function AnimaList(props: AnimaListPropsType) {\n  const { children, ...rest } = props;\n\n  const [isInitial, setIsInitial] = React.useState<boolean>(true);\n\n  React.useEffect(() => setIsInitial(false), []);\n\n  return (\n    <ul {...rest}>\n      {props.children.map((child) => React.cloneElement(child, { isInitial }))}\n    </ul>\n  );\n}\n\nexport type UseAnimaListDirectionType = \"head\" | \"tail\";\n\nexport type UseAnimaListConfigType = {\n  direction?: UseAnimaListDirectionType;\n  duration?: number;\n};\n\ntype UseAnimaListItemType<T> = { item: T; props: { visible: boolean } };\n\ntype UseAnimaListReturnType<T> = {\n  items: { item: T; props: { visible: boolean } }[];\n  count: number;\n};\n\nexport function useAnimaList<T extends { id: string }>(\n  list: T[],\n  config?: UseAnimaListConfigType\n): UseAnimaListReturnType<T> {\n  const duration = config?.duration ?? 300;\n  const direction = config?.direction ?? \"head\";\n\n  const [officialList, setOfficialList] = React.useState<\n    UseAnimaListItemType<T>[]\n  >(list.map((item) => ({ item, props: { visible: true } })));\n\n  let added: T[] = [];\n\n  for (const item of list) {\n    const wasAdded = !officialList\n      .map((x) => x.item)\n      .some((x) => item.id === x.id);\n\n    if (wasAdded) added.push(item);\n  }\n\n  React.useEffect(() => {\n    if (added.length === 0) return;\n\n    if (direction === \"head\") {\n      setOfficialList((officialList) => [\n        ...added.map((item) => ({ item, props: { visible: true } })),\n        ...officialList,\n      ]);\n    } else {\n      setOfficialList((officialList) => [\n        ...officialList,\n        ...added.map((item) => ({ item, props: { visible: true } })),\n      ]);\n    }\n\n    added = [];\n  }, [added.length, direction]);\n\n  let deleted: T[] = [];\n\n  for (const { item } of officialList) {\n    const wasDeleted = list.every((x) => x.id !== item.id);\n\n    if (wasDeleted) deleted.push(item);\n  }\n\n  React.useEffect(() => {\n    if (deleted.length === 0) return;\n\n    setOfficialList((officialList) =>\n      officialList.map((x) => {\n        const wasDeleted = deleted.some((item) => item.id === x.item.id);\n\n        return wasDeleted ? { ...x, props: { visible: false } } : x;\n      })\n    );\n\n    deleted = [];\n  }, [deleted.length]);\n\n  return {\n    items: officialList.map((item) => {\n      const updated = list.find((y) => y.id === item.item.id);\n      return updated ? { ...item, item: updated } : item;\n    }),\n    count: officialList.filter((x) => x.props.visible).length,\n  };\n}\n","export type FilterType = Record<string, unknown> | undefined;\n\nexport class FilterUrl {\n  value: string;\n\n  constructor(url: string, filters?: FilterType) {\n    const query = new URLSearchParams(this.getNonEmptyFilters(filters));\n\n    if (query.toString() === \"\") {\n      this.value = url;\n\n      return;\n    }\n\n    this.value = `${url}?${query.toString()}`;\n  }\n\n  private getNonEmptyFilters(filters: FilterType) {\n    if (filters === undefined) return {};\n\n    return Object.fromEntries(\n      Object.entries(filters).filter(([_key, value]) => value !== undefined)\n    ) as Record<string, string>;\n  }\n}\n","export type ServerErrorConfigType = {\n  message: string;\n};\n\nexport class ServerError {\n  message: ServerErrorConfigType[\"message\"];\n\n  _known = true;\n\n  constructor(config: ServerErrorConfigType) {\n    this.message = config.message;\n  }\n\n  static isServerError(value: unknown): value is ServerError {\n    if (\n      value &&\n      typeof value === \"object\" &&\n      value === Object(value) &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"_known\") &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"message\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  static async extract(response: Response) {\n    if (response.ok) return response;\n\n    const error = await response.json();\n\n    const message = ServerError.isServerError(error)\n      ? error.message\n      : \"app.error.general\";\n\n    throw new ServerError({ message });\n  }\n\n  static async handle(payload: unknown): Promise<Response> {\n    throw new ServerError({\n      message: ServerError.isServerError(payload)\n        ? payload.message\n        : \"app.error.general\",\n    });\n  }\n}\n"],"names":["useClientSearch","useState","query","setValue","clear","onChange","event","currentTarget","value","filterFn","toLowerCase","includes","UseExpandableListState","UseFileState","useExpandableList","config","numberOfExcessiveElements","length","max","areThereExcessiveElements","getState","contracted","expanded","state","setState","useEffect","displayShowMore","displayShowLess","showMore","showLess","_element","index","useFile","maxSize","Infinity","idle","setFile","actions","selectFile","files","file","size","error","selected","clearFile","data","usePreviousValue","defaultValue","previousValue","useRef","current","noop","useFilter","defaultQuery","undefined","String","options","Object","keys","onUpdate","setQuery","previousQuery","newQuery","isNewQueryInEnum","Boolean","useList","defaultItems","comparisonFn","a","b","items","setItems","add","payload","Array","isArray","remove","item","filter","x","isAdded","some","toggle","update","useScrollLock","condition","useLayoutEffect","html","document","querySelector","body","originalBodyOverflow","window","getComputedStyle","overflow","originalHtmlOverflow","style","useToggle","on","setIsOn","off","enable","disable","v","getSafeWindow","useUrlFilter","safeWindow","currentQuery","URLSearchParams","location","search","get","label","previous","url","URL","toString","params","set","history","pushState","useWindowDimensions","width","height","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","OutboundLink","props","as","rest","React","target","rel","ToastsContext","createContext","ToastsContextProvider","timeout","id","reverse","toast","Date","now","setTimeout","Provider","children","useToastsContext","context","useContext","Error","useToastTrigger","TranslationsContext","TranslationsContextProvider","translations","useTranslations","key","result","console","warn","AnimaState","Anima","duration","visible","isInitial","appeared","appearing","hidden","previousState","hidding","cloneElement","effect","getAnimaProps","AnimaList","setIsInitial","map","child","useAnimaList","list","direction","officialList","setOfficialList","added","push","deleted","every","updated","find","y","count","FilterUrl","filters","this","getNonEmptyFilters","fromEntries","entries","ServerError","message","_known","isServerError","hasOwnProperty","extract","response","ok","json","handle"],"mappings":"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"}