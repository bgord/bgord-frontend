{"version":3,"file":"bgord-frontend.module.js","sources":["../hooks/use-expandable-list.ts","../hooks/use-file.ts","../hooks/use-list.ts","../hooks/use-previous-value.ts","../hooks/use-scroll-lock.ts","../hooks/use-search.ts","../hooks/use-toggle.ts","../hooks/use-window-dimensions.ts","../components/outbound-link.tsx","../toasts.tsx","../anima.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport type UseExpandableListConfigType = { max: number; length: number };\n\nexport enum UseExpandableListState {\n  contracted = \"contracted\",\n  expanded = \"expanded\",\n}\n\nexport function useExpandableList(config: UseExpandableListConfigType) {\n  const numberOfExcessiveElements = config.length - config.max;\n  const areThereExcessiveElements = config.length > config.max;\n\n  function getState() {\n    return areThereExcessiveElements\n      ? UseExpandableListState.contracted\n      : UseExpandableListState.expanded;\n  }\n\n  const [state, setState] = useState<UseExpandableListState>(getState);\n\n  useEffect(() => setState(getState()), [config.length, config.max]);\n\n  function showMore() {\n    if (state === UseExpandableListState.contracted) {\n      setState(UseExpandableListState.expanded);\n    }\n  }\n\n  function showLess() {\n    if (state === UseExpandableListState.expanded) {\n      setState(UseExpandableListState.contracted);\n    }\n  }\n\n  function filterFn(_element: any, index: number) {\n    if (state === UseExpandableListState.expanded) return true;\n    return index < config.max;\n  }\n\n  return {\n    state,\n    displayShowMore: state === UseExpandableListState.contracted,\n    displayShowLess:\n      state === UseExpandableListState.expanded && areThereExcessiveElements,\n    showMore,\n    showLess,\n    numberOfExcessiveElements,\n    filterFn,\n  };\n}\n","import { useState } from \"react\";\n\nexport type UseFileConfigType = {\n  maxSize?: number;\n};\n\nexport enum UseFileState {\n  \"idle\" = \"idle\",\n  \"selected\" = \"selected\",\n  \"error\" = \"error\",\n}\n\ntype UseFileIdle = {\n  state: UseFileState.idle;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): void;\n    clearFile: VoidFunction;\n  };\n};\n\ntype UseFileSelected = {\n  state: UseFileState.selected;\n  data: File;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): void;\n    clearFile: VoidFunction;\n  };\n};\n\ntype UseFileError = {\n  state: UseFileState.error;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): void;\n    clearFile: VoidFunction;\n  };\n};\n\nexport function useFile(\n  config?: UseFileConfigType\n): UseFileIdle | UseFileSelected | UseFileError {\n  const maxSize = config?.maxSize ?? Infinity;\n\n  const [state, setState] = useState<UseFileState>(UseFileState.idle);\n\n  const [file, setFile] = useState<File | null>(null);\n\n  function selectFile(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.currentTarget.files;\n\n    if (!files || !files[0]) return;\n\n    const file = files[0];\n\n    if (file.size > maxSize) return setState(UseFileState.error);\n\n    setFile(file);\n    setState(UseFileState.selected);\n  }\n\n  function clearFile() {\n    setFile(null);\n    setState(UseFileState.idle);\n  }\n\n  const actions = { selectFile, clearFile };\n\n  if (state === UseFileState.idle) {\n    return { state, data: null, actions };\n  }\n\n  if (state === UseFileState.selected) {\n    return { state, data: file as File, actions };\n  }\n\n  return { state, data: null, actions };\n}\n","import { useState, SetStateAction, Dispatch } from \"react\";\n\nexport type UseListActionsType<T> = {\n  clear: VoidFunction;\n  add: (x: T | T[]) => void;\n  remove: (x: T) => void;\n  toggle: (x: T) => void;\n  isAdded: (x: T) => boolean;\n  update: Dispatch<SetStateAction<T[]>>;\n};\n\nexport type UseListReturnType<T> = [T[], UseListActionsType<T>];\n\nexport type UseListConfigType<T> = {\n  defaultItems?: T[];\n  comparisonFn?: (a: T, b: T) => boolean;\n};\n\nexport function useList<T>(\n  config?: UseListConfigType<T>\n): UseListReturnType<T> {\n  const defaultItems = config?.defaultItems ?? [];\n\n  const defaultComparisonFn = (a: T, b: T) => a === b;\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [items, setItems] = useState<T[]>(defaultItems);\n\n  function clear() {\n    setItems([]);\n  }\n\n  function add(payload: T | T[]) {\n    setItems((items) => {\n      if (Array.isArray(payload)) {\n        return [...items, ...payload];\n      }\n      return [...items, payload];\n    });\n  }\n\n  function remove(item: T) {\n    setItems((items) => items.filter((x) => !comparisonFn(x, item)));\n  }\n\n  function isAdded(item: T) {\n    return items.some((x) => comparisonFn(x, item));\n  }\n\n  function toggle(item: T) {\n    isAdded(item) ? remove(item) : add(item);\n  }\n\n  return [items, { clear, add, remove, toggle, isAdded, update: setItems }];\n}\n","import { useEffect, useRef } from \"react\";\n\nexport function usePreviousValue<T>(value: T) {\n  const previousValue = useRef<T | null>(null);\n\n  useEffect(() => {\n    previousValue.current = value;\n  });\n\n  return previousValue.current;\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useScrollLock(condition = true) {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overflows\n    const originalBodyOverflow = window.getComputedStyle(body).overflow;\n    const originalHtmlOverflow = window.getComputedStyle(html).overflow;\n\n    // Prevent scrolling on mount\n    body.style.overflow = \"hidden\";\n    html.style.overflow = \"hidden\";\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      body.style.overflow = originalBodyOverflow;\n      html.style.overflow = originalHtmlOverflow;\n    };\n  }, [condition]);\n}\n","import { useState } from \"react\";\n\nexport type UseSearchQueryType = string;\n\nexport type UseSearchReturnType = {\n  query: UseSearchQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: (value: string) => boolean;\n};\n\nexport function useSearch(): UseSearchReturnType {\n  const emptyQuery: UseSearchQueryType = \"\";\n\n  const [query, setValue] = useState<UseSearchQueryType>(emptyQuery);\n\n  function clear() {\n    setValue(emptyQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setValue(event.currentTarget.value);\n  }\n\n  function filterFn(value: string) {\n    if (query === emptyQuery) return true;\n\n    return value?.toLowerCase().includes(query.toLowerCase());\n  }\n\n  return { query, clear, onChange, filterFn };\n}\n","import { useState } from \"react\";\n\nexport function useToggle(defaultValue = false) {\n  const [on, setIsOn] = useState(defaultValue);\n\n  const enable = () => setIsOn(true);\n  const disable = () => setIsOn(false);\n  const toggle = () => setIsOn((v) => !v);\n\n  return { on, off: !on, enable, disable, toggle };\n}\n","import { useState, useEffect } from \"react\";\n\nexport type WindowDimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowDimensions(): WindowDimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowDimensions>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import React from \"react\";\nimport type { PolymorphicPropsWithoutRef } from \"react-polymorphic-types\";\n\nexport const OutboundLinkDefaultElement = \"a\";\n\n// Extend own props with others inherited from the underlying element type\n// Own props take precedence over the inherited ones\nexport type HeadingProps<\n  T extends React.ElementType = typeof OutboundLinkDefaultElement\n> = PolymorphicPropsWithoutRef<{}, T>;\n\nexport function Heading<\n  T extends React.ElementType = typeof OutboundLinkDefaultElement\n>({ as, ...props }: HeadingProps<T>) {\n  const Element: React.ElementType = as || OutboundLinkDefaultElement;\n\n  return <Element target=\"_blank\" ref=\"noreferer noopener\" {...props} />;\n}\n","import React from \"react\";\nimport { useList } from \"./hooks/use-list\";\n\nexport type ToastsConfigType = {\n  timeout?: number;\n};\n\nexport type BaseToastType = {\n  id: string;\n  message: string;\n};\n\ntype ToastsContextDataType<ToastType extends BaseToastType = BaseToastType> = [\n  ToastType[],\n  {\n    add: (toast: Omit<ToastType, \"id\">) => void;\n    remove: (toast: ToastType) => void;\n    clear: VoidFunction;\n  }\n];\n\nconst ToastsContext = React.createContext<ToastsContextDataType | undefined>(\n  undefined\n);\n\nexport function ToastsContextProvider(\n  props: { children: JSX.Element | JSX.Element[] } & ToastsConfigType\n) {\n  function useToastsImplementation(): ToastsContextDataType {\n    const timeout = props?.timeout ?? 5000;\n\n    const [toasts, actions] = useList<BaseToastType>({\n      comparisonFn: (a, b) => a.id === b.id,\n    });\n\n    function add(payload: Omit<BaseToastType, \"id\">) {\n      const id = String(Date.now());\n      const toast = { ...payload, id };\n\n      actions.add(toast);\n      setTimeout(() => actions.remove(toast), timeout);\n    }\n\n    return [\n      [...toasts].reverse(),\n      { add, remove: actions.remove, clear: actions.clear },\n    ];\n  }\n\n  const [toasts, actions] = useToastsImplementation();\n\n  return (\n    <ToastsContext.Provider value={[toasts, actions]}>\n      {props.children}\n    </ToastsContext.Provider>\n  );\n}\n\nexport function useToastsContext<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const context = React.useContext<ToastsContextDataType<ToastType>>(\n    ToastsContext as unknown as React.Context<ToastsContextDataType<ToastType>>\n  );\n\n  if (context === undefined) {\n    throw new Error(`useToasts must be used within the ToastsContextProvider`);\n  }\n\n  return context;\n}\n\nexport function useToastTrigger<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const [, actions] = useToastsContext<ToastType>();\n\n  return actions.add;\n}\n","import React from \"react\";\n\nimport { usePreviousValue } from \"./hooks/use-previous-value\";\n\nexport enum AnimaState {\n  appearing = \"appearing\",\n  appeared = \"appeared\",\n  hidding = \"hidding\",\n  hidden = \"hidden\",\n}\n\nexport type AnimaEffectType = string;\n\nexport type AnimaConfigType = {\n  children: JSX.Element;\n\n  visible: boolean;\n  effect: AnimaEffectType;\n\n  duration?: number;\n  isInitial?: boolean;\n};\n\nexport function Anima(props: AnimaConfigType) {\n  const duration = props.duration ?? 300;\n\n  function getInitialState() {\n    if (!props.visible) return AnimaState.hidden;\n    if (props.isInitial) return AnimaState.appeared;\n    return AnimaState.appearing;\n  }\n\n  const [state, setState] = React.useState<AnimaState>(getInitialState);\n  const previousState = usePreviousValue(state);\n\n  React.useEffect(() => {\n    if (props.isInitial) return;\n\n    if (props.visible) {\n      setState(AnimaState.appearing);\n      setTimeout(() => setState(AnimaState.appeared), 100);\n    } else {\n      if (!previousState) return;\n      setState(AnimaState.hidding);\n      setTimeout(() => setState(AnimaState.hidden), duration);\n    }\n  }, [props.visible]);\n\n  if (state === AnimaState.hidden) return null;\n\n  return React.cloneElement(props.children, {\n    \"data-anima\": state,\n    \"data-anima-effect\": props.effect,\n    style: { \"--duration\": `${duration}ms`, ...props.children.props.style },\n  });\n}\n\nexport function getAnimaProps(props: Record<string, any>) {\n  return {\n    \"data-anima\": props[\"data-anima\"] as AnimaState | undefined,\n    \"data-anima-effect\": props[\"data-anima-effect\"] as\n      | AnimaEffectType\n      | undefined,\n    style: props.style as React.CSSProperties,\n  };\n}\n\nexport type AnimaListPropsType = {\n  children: JSX.Element[];\n} & JSX.IntrinsicElements[\"ul\"];\n\nexport function AnimaList(props: AnimaListPropsType) {\n  const { children, ...rest } = props;\n\n  const [isInitial, setIsInitial] = React.useState<boolean>(true);\n\n  React.useEffect(() => setIsInitial(false), []);\n\n  return (\n    <ul {...rest}>\n      {props.children.map((child) => React.cloneElement(child, { isInitial }))}\n    </ul>\n  );\n}\n\nexport type UseAnimaListDirectionType = \"head\" | \"tail\";\n\ntype UseAnimaListItemType<T> = { item: T; props: { visible: boolean } };\n\ntype UseAnimaListReturnType<T> = {\n  items: { item: T; props: { visible: boolean } }[];\n  count: number;\n};\n\nexport function useAnimaList<T extends { id: string }>(\n  list: T[],\n  direction: UseAnimaListDirectionType = \"head\"\n): UseAnimaListReturnType<T> {\n  const [officialList, setOfficialList] = React.useState<\n    UseAnimaListItemType<T>[]\n  >(list.map((item) => ({ item, props: { visible: true } })));\n\n  const added: T[] = [];\n\n  for (const item of list) {\n    const wasAdded = !officialList\n      .map((x) => x.item)\n      .some((x) => item.id === x.id);\n\n    if (wasAdded) added.push(item);\n  }\n\n  React.useEffect(() => {\n    if (added.length === 0) return;\n\n    if (direction === \"head\") {\n      setOfficialList((officialList) => [\n        ...added.map((item) => ({ item, props: { visible: true } })),\n        ...officialList,\n      ]);\n    } else {\n      setOfficialList((officialList) => [\n        ...officialList,\n        ...added.map((item) => ({ item, props: { visible: true } })),\n      ]);\n    }\n  }, [added.length, direction]);\n\n  const deleted: T[] = [];\n\n  for (const { item } of officialList) {\n    const wasDeleted = list.every((x) => x.id !== item.id);\n\n    if (wasDeleted) deleted.push(item);\n  }\n\n  React.useEffect(() => {\n    if (deleted.length === 0) return;\n\n    setOfficialList((officialList) =>\n      officialList.map((x) => {\n        const wasDeleted = deleted.some((item) => item.id === x.item.id);\n\n        return wasDeleted ? { ...x, props: { visible: false } } : x;\n      })\n    );\n  }, [deleted.length]);\n\n  return {\n    items: officialList.map((item) => {\n      const updated = list.find((y) => y.id === item.item.id);\n      return updated ? { ...item, item: updated } : item;\n    }),\n    count: officialList.filter((x) => x.props.visible).length,\n  };\n}\n"],"names":["UseExpandableListState","UseFileState","useExpandableList","config","numberOfExcessiveElements","length","max","areThereExcessiveElements","getState","contracted","expanded","useState","state","setState","useEffect","displayShowMore","displayShowLess","showMore","showLess","filterFn","_element","index","useFile","maxSize","Infinity","idle","setFile","actions","selectFile","event","files","currentTarget","file","size","error","selected","clearFile","data","useList","defaultItems","comparisonFn","a","b","items","setItems","add","payload","Array","isArray","remove","item","filter","x","isAdded","some","clear","toggle","update","usePreviousValue","value","previousValue","useRef","current","useScrollLock","condition","useLayoutEffect","html","document","querySelector","body","originalBodyOverflow","window","getComputedStyle","overflow","originalHtmlOverflow","style","useSearch","query","setValue","onChange","toLowerCase","includes","useToggle","defaultValue","on","setIsOn","off","enable","disable","v","useWindowDimensions","width","undefined","height","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","OutboundLinkDefaultElement","Heading","as","props","React","target","ref","ToastsContext","createContext","ToastsContextProvider","timeout","id","reverse","toast","String","Date","now","setTimeout","Provider","children","useToastsContext","context","useContext","Error","useToastTrigger","AnimaState","Anima","duration","visible","isInitial","appeared","appearing","hidden","previousState","hidding","cloneElement","effect","getAnimaProps","AnimaList","rest","setIsInitial","map","child","useAnimaList","list","direction","officialList","setOfficialList","added","push","deleted","every","updated","find","y","count"],"mappings":"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"}