{"version":3,"file":"bgord-frontend.umd.js","sources":["../hooks/use-previous-value.ts","../anima.tsx","../hooks/use-expandable-list.ts","../hooks/use-file.ts","../durations.ts","../hooks/use-field.ts","../hooks/use-autofocus.ts","../safe-window.ts","../hooks/use-window-dimensions.ts","../hooks/use-click-outside.ts","../noop.ts","../hooks/use-filter.ts","../get-image-resolution.ts","../hooks/use-toggle.ts","../hooks/use-is-online.ts","../hooks/use-keyboard-shortcuts.ts","../hooks/use-list.ts","../hooks/use-scroll-lock.ts","../copy-to-clipboard.ts","../dates.ts","../filter-url.ts","../pagination.ts","../pluralize.ts","../server-error.ts","../time.ts","../toasts.tsx","../translations.tsx","../hooks/use-audio.ts","../components/dialog.tsx","../components/offline-indicator.tsx","../components/outbound-link.tsx","../is-client.ts","../hooks/use-breakpoint.ts","../hooks/use-client-search.ts","../hooks/use-document-title.ts","../hooks/use-image-file-resolution.ts","../hooks/use-leaving-prompt.ts","../hooks/use-url-filter.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport function usePreviousValue<T>(value: T, defaultValue?: T | undefined) {\n  const previousValue = useRef<T | undefined>(defaultValue);\n\n  useEffect(() => {\n    previousValue.current = value;\n  });\n\n  return previousValue.current;\n}\n","import React from \"react\";\n\nimport { usePreviousValue } from \"./hooks/use-previous-value\";\n\nexport enum AnimaState {\n  appearing = \"appearing\",\n  appeared = \"appeared\",\n  hidding = \"hidding\",\n  hidden = \"hidden\",\n}\n\nexport type AnimaEffectType = string;\n\nexport type AnimaConfigType = {\n  children: JSX.Element;\n\n  visible: boolean;\n  effect: AnimaEffectType;\n\n  duration?: number;\n  isInitial?: boolean;\n};\n\nexport function Anima(props: AnimaConfigType) {\n  const duration = props.duration ?? 300;\n\n  function getInitialState() {\n    if (!props.visible) return AnimaState.hidden;\n    if (props.isInitial) return AnimaState.appeared;\n    return AnimaState.appearing;\n  }\n\n  const [state, setState] = React.useState<AnimaState>(getInitialState);\n  const previousState = usePreviousValue(state);\n\n  React.useEffect(() => {\n    if (props.isInitial) return;\n\n    if (props.visible) {\n      setState(AnimaState.appearing);\n      setTimeout(() => setState(AnimaState.appeared), 100);\n    } else {\n      if (!previousState) return;\n      setState(AnimaState.hidding);\n      setTimeout(() => setState(AnimaState.hidden), duration);\n    }\n  }, [props.visible]);\n\n  if (state === AnimaState.hidden) return null;\n\n  return React.cloneElement(props.children, {\n    \"data-anima\": state,\n    \"data-anima-effect\": props.effect,\n    style: { \"--duration\": `${duration}ms`, ...props.children.props.style },\n  });\n}\n\nexport function getAnimaProps(props: Record<string, any>) {\n  return {\n    \"data-anima\": props[\"data-anima\"] as AnimaState | undefined,\n    \"data-anima-effect\": props[\"data-anima-effect\"] as\n      | AnimaEffectType\n      | undefined,\n    style: props.style as React.CSSProperties,\n  };\n}\n\nexport type AnimaListPropsType = {\n  children: JSX.Element[];\n} & JSX.IntrinsicElements[\"ul\"];\n\nexport function AnimaList(props: AnimaListPropsType) {\n  const { children, ...rest } = props;\n\n  const [isInitial, setIsInitial] = React.useState<boolean>(true);\n\n  React.useEffect(() => setIsInitial(false), []);\n\n  return (\n    <ul {...rest}>\n      {props.children.map((child) => React.cloneElement(child, { isInitial }))}\n    </ul>\n  );\n}\n\nexport type UseAnimaListDirectionType = \"head\" | \"tail\";\n\nexport type UseAnimaListConfigType = {\n  direction?: UseAnimaListDirectionType;\n  duration?: number;\n};\n\nexport type UseAnimaListItemType<T> = { item: T; props: { visible: boolean } };\n\ntype UseAnimaListReturnType<T> = {\n  items: { item: T; props: { visible: boolean } }[];\n  count: number;\n};\n\nexport function useAnimaList<T extends { id: string }>(\n  list: T[],\n  config?: UseAnimaListConfigType\n): UseAnimaListReturnType<T> {\n  const duration = config?.duration ?? 300;\n  const direction = config?.direction ?? \"head\";\n\n  const [officialList, setOfficialList] = React.useState<\n    UseAnimaListItemType<T>[]\n  >(list.map((item) => ({ item, props: { visible: true } })));\n\n  let added: T[] = [];\n\n  for (const item of list) {\n    const wasAdded = !officialList\n      .map((x) => x.item)\n      .some((x) => item.id === x.id);\n\n    if (wasAdded) added.push(item);\n  }\n\n  React.useEffect(() => {\n    if (added.length === 0) return;\n\n    if (direction === \"head\") {\n      setOfficialList((officialList) => [\n        ...added.map((item) => ({ item, props: { visible: true } })),\n        ...officialList,\n      ]);\n    } else {\n      setOfficialList((officialList) => [\n        ...officialList,\n        ...added.map((item) => ({ item, props: { visible: true } })),\n      ]);\n    }\n\n    added = [];\n  }, [added.length, direction]);\n\n  let deleted: T[] = [];\n\n  for (const { item } of officialList) {\n    const wasDeleted = list.every((x) => x.id !== item.id);\n\n    if (wasDeleted) deleted.push(item);\n  }\n\n  React.useEffect(() => {\n    if (deleted.length === 0) return;\n\n    setOfficialList((officialList) =>\n      officialList.map((x) => {\n        const wasDeleted = deleted.some((item) => item.id === x.item.id);\n\n        return wasDeleted ? { ...x, props: { visible: false } } : x;\n      })\n    );\n\n    deleted = [];\n  }, [deleted.length]);\n\n  return {\n    items: officialList.map((item) => {\n      const updated = list.find((y) => y.id === item.item.id);\n      return updated ? { ...item, item: updated } : item;\n    }),\n    count: officialList.filter((x) => x.props.visible).length,\n  };\n}\n","import { useState, useEffect } from \"react\";\n\nexport type UseExpandableListConfigType = { max: number; length: number };\n\nexport enum UseExpandableListState {\n  contracted = \"contracted\",\n  expanded = \"expanded\",\n}\n\nexport function useExpandableList(config: UseExpandableListConfigType) {\n  const numberOfExcessiveElements = config.length - config.max;\n  const areThereExcessiveElements = config.length > config.max;\n\n  function getState() {\n    return areThereExcessiveElements\n      ? UseExpandableListState.contracted\n      : UseExpandableListState.expanded;\n  }\n\n  const [state, setState] = useState<UseExpandableListState>(getState);\n\n  useEffect(() => setState(getState()), [config.length, config.max]);\n\n  function showMore() {\n    if (state === UseExpandableListState.contracted) {\n      setState(UseExpandableListState.expanded);\n    }\n  }\n\n  function showLess() {\n    if (state === UseExpandableListState.expanded) {\n      setState(UseExpandableListState.contracted);\n    }\n  }\n\n  function filterFn(_element: any, index: number) {\n    if (state === UseExpandableListState.expanded) return true;\n    return index < config.max;\n  }\n\n  return {\n    state,\n    displayShowMore: state === UseExpandableListState.contracted,\n    displayShowLess:\n      state === UseExpandableListState.expanded && areThereExcessiveElements,\n    showMore,\n    showLess,\n    numberOfExcessiveElements,\n    filterFn,\n  };\n}\n","import { useState } from \"react\";\n\nexport type UseFileConfigType = {\n  maxSize?: number;\n};\n\nexport enum UseFileState {\n  \"idle\" = \"idle\",\n  \"selected\" = \"selected\",\n  \"error\" = \"error\",\n}\n\ntype UseFileIdle = {\n  state: UseFileState.idle;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n};\n\ntype UseFileSelected = {\n  state: UseFileState.selected;\n  data: File;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n    previewFile: () => ReturnType<typeof URL.createObjectURL> | undefined;\n  };\n};\n\ntype UseFileError = {\n  state: UseFileState.error;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n};\n\nexport type UseFileReturnType = UseFileIdle | UseFileSelected | UseFileError;\n\nexport function useFile(config?: UseFileConfigType): UseFileReturnType {\n  const maxSize = config?.maxSize ?? Infinity;\n\n  const [state, setState] = useState<UseFileState>(UseFileState.idle);\n\n  const [file, setFile] = useState<File | null>(null);\n\n  function selectFile(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.currentTarget.files;\n\n    if (!files || !files[0]) return;\n\n    const file = files[0];\n\n    if (file.size > maxSize) {\n      setState(UseFileState.error);\n      return undefined;\n    }\n\n    setFile(file);\n    setState(UseFileState.selected);\n\n    return file;\n  }\n\n  function clearFile() {\n    setFile(null);\n    setState(UseFileState.idle);\n  }\n\n  function previewFile() {\n    if (!file) return undefined;\n    return URL.createObjectURL(file);\n  }\n\n  if (state === UseFileState.idle) {\n    return { state, data: null, actions: { selectFile, clearFile } };\n  }\n\n  if (state === UseFileState.selected) {\n    return {\n      state,\n      data: file as File,\n      actions: { selectFile, clearFile, previewFile },\n    };\n  }\n\n  return { state, data: null, actions: { selectFile, clearFile } };\n}\n","export class DurationFormatter {\n  static format(duration: number) {\n    const minutes = Math.floor(duration / 60);\n    const seconds = duration % 60;\n\n    const formattedMinutes = String(minutes).padStart(2, \"0\");\n    const formattedSeconds = String(seconds).padStart(2, \"0\");\n\n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n","import { useState, Dispatch, SetStateAction } from \"react\";\n\nexport type UseFieldDefaultValueType<T> = T | (() => T);\nexport type UseFieldReturnType<T> = {\n  value: T;\n  set: Dispatch<SetStateAction<T>>;\n  clear: VoidFunction;\n};\n\nexport function useField<T>(\n  defaultValue: UseFieldDefaultValueType<T>\n): UseFieldReturnType<T> {\n  const evaluatedDefaultValue =\n    // @ts-ignore\n    typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n\n  const [value, setValue] = useState(evaluatedDefaultValue);\n\n  function clear() {\n    setValue(evaluatedDefaultValue);\n  }\n\n  return { value, set: setValue, clear };\n}\n","import React from \"react\";\n\nexport type UseAutofocusConfigType = {\n  ref: React.RefObject<HTMLElement>;\n  condition: boolean;\n};\n\nexport function useAutofocus(config: UseAutofocusConfigType) {\n  React.useEffect(() => {\n    if (!config.condition) return;\n\n    config.ref.current?.focus();\n  }, [config.condition]);\n}\n","export function getSafeWindow() {\n  if (typeof window === \"undefined\") return undefined;\n  return window;\n}\n","import { useState, useEffect } from \"react\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type WindowDimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowDimensions(): WindowDimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowDimensions>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    const safeWindow = getSafeWindow();\n\n    if (!safeWindow) return;\n\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: safeWindow?.innerWidth,\n        height: safeWindow?.innerHeight,\n      });\n    }\n\n    // Add event listener\n    safeWindow.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => safeWindow.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import React from \"react\";\n\nexport function useClickOutside(\n  ref: React.RefObject<HTMLElement>,\n  onClickOutside: VoidFunction,\n  exclude?: React.RefObject<HTMLElement>[]\n) {\n  React.useEffect(() => {\n    if (!ref.current) return;\n\n    function handleClickOutside(event: MouseEvent) {\n      // Check if click event happened outside the `ref`\n      // so the `onClickOutside` callback `may` be fired.\n      if (!ref.current?.contains(event.target as Node)) {\n        // The second check is to check if some `exclude`d node\n        // outside the `ref` node has been clicked.\n        const isExcludedNodeClicked = exclude?.some((node) =>\n          node.current?.contains(event.target as Node)\n        );\n\n        // `onClickOutside` callback is fired if the click event\n        // happened outside both `ref` node and `exclude`d nodes.\n        if (!isExcludedNodeClicked) {\n          onClickOutside();\n        }\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [onClickOutside, ref, exclude]);\n}\n","export function noop() {}\n","import { useState, useEffect } from \"react\";\nimport { usePreviousValue } from \"./use-previous-value\";\nimport { noop } from \"../noop\";\n\nexport type UseFilterQueryType = string | undefined;\n\nexport type UseFilterConfigType<T> = {\n  enum: { [key: string]: UseFilterQueryType };\n  defaultQuery?: UseFilterQueryType;\n  filterFn?: (value: T) => boolean;\n  onUpdate?: (\n    current: UseFilterQueryType,\n    previous: UseFilterQueryType\n  ) => void;\n};\n\nexport function useFilter<T = string>(config: UseFilterConfigType<T>) {\n  const defaultQuery = config.defaultQuery ?? undefined;\n  const filterFn = config.filterFn ?? defaultFilterFn;\n  const options = Object.keys(config.enum);\n  const onUpdate = config?.onUpdate ?? noop;\n\n  const [query, setQuery] = useState<UseFilterQueryType>(defaultQuery);\n  const previousQuery = usePreviousValue(query);\n\n  function clear() {\n    setQuery(defaultQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newQuery = event.currentTarget.value;\n\n    const isNewQueryInEnum = Boolean(config.enum[String(newQuery)]);\n\n    setQuery(isNewQueryInEnum ? newQuery : undefined);\n  }\n\n  function defaultFilterFn(value: T) {\n    if (query === undefined) return true;\n\n    return query === String(value);\n  }\n\n  useEffect(() => {\n    onUpdate(query, previousQuery);\n  }, [previousQuery, query]);\n\n  return { query, clear, onChange, filterFn, options, onUpdate };\n}\n","export type ImagePathType = string | undefined;\n\nexport type ImageResolutionType = {\n  width: number | null;\n  height: number | null;\n};\n\nexport const emptyImageResolution: ImageResolutionType = {\n  width: null,\n  height: null,\n};\n\nexport async function getImageResolution(\n  path: ImagePathType\n): Promise<ImageResolutionType> {\n  if (!path) return emptyImageResolution;\n\n  const img = document.createElement(\"img\");\n\n  const promise = new Promise<ImageResolutionType>((resolve, reject) => {\n    img.onload = () => resolve({ width: img.width, height: img.height });\n    img.onerror = reject;\n  });\n\n  img.src = path;\n\n  return promise;\n}\n","import { useState } from \"react\";\n\nexport type UseToggleReturnType = {\n  on: boolean;\n  off: boolean;\n  enable: VoidFunction;\n  disable: VoidFunction;\n  toggle: VoidFunction;\n};\n\nexport function useToggle(defaultValue = false): UseToggleReturnType {\n  const [on, setIsOn] = useState(defaultValue);\n\n  const enable = () => setIsOn(true);\n  const disable = () => setIsOn(false);\n  const toggle = () => setIsOn((v) => !v);\n\n  return { on, off: !on, enable, disable, toggle };\n}\n","import React from \"react\";\nimport { useToggle } from \"./use-toggle\";\n\ntype OnlineStatusType = boolean;\n\nexport const useIsOnline = (): OnlineStatusType => {\n  const onlineStatus = useToggle(getOnlineStatus());\n\n  React.useEffect(() => {\n    function handleOnline() {\n      onlineStatus.enable();\n    }\n\n    function handleOffline() {\n      onlineStatus.disable();\n    }\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  return onlineStatus.on;\n};\n\n// Check if browser supports `navigator.onLine`,\n// otherwise, we assume the user is online.\nfunction getOnlineStatus(): OnlineStatusType {\n  return typeof navigator !== \"undefined\" &&\n    typeof navigator.onLine === \"boolean\"\n    ? navigator.onLine\n    : true;\n}\n","import React from \"react\";\nimport tinykeys from \"tinykeys\";\n\nexport interface UseKeyboardShortcurtsConfigType {\n  [keybinding: string]: (event: KeyboardEvent) => void;\n}\n\nexport function useKeyboardShortcurts(config: UseKeyboardShortcurtsConfigType) {\n  React.useEffect(() => {\n    const unsubscribeShortcuts = tinykeys(window, config);\n\n    return () => unsubscribeShortcuts();\n  }, [config]);\n}\n","import { useState, SetStateAction, Dispatch } from \"react\";\n\nexport type UseListActionsType<T> = {\n  clear: VoidFunction;\n  add: (x: T | T[]) => void;\n  remove: (x: T) => void;\n  toggle: (x: T) => void;\n  isAdded: (x: T) => boolean;\n  update: Dispatch<SetStateAction<T[]>>;\n};\n\nexport type UseListReturnType<T> = [T[], UseListActionsType<T>];\n\nexport type UseListConfigType<T> = {\n  defaultItems?: T[];\n  comparisonFn?: (a: T, b: T) => boolean;\n};\n\nexport function useList<T>(\n  config?: UseListConfigType<T>\n): UseListReturnType<T> {\n  const defaultItems = config?.defaultItems ?? [];\n\n  const defaultComparisonFn = (a: T, b: T) => a === b;\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [items, setItems] = useState<T[]>(defaultItems);\n\n  function clear() {\n    setItems([]);\n  }\n\n  function add(payload: T | T[]) {\n    setItems((items) => {\n      if (Array.isArray(payload)) {\n        return [...items, ...payload];\n      }\n      return [...items, payload];\n    });\n  }\n\n  function remove(item: T) {\n    setItems((items) => items.filter((x) => !comparisonFn(x, item)));\n  }\n\n  function isAdded(item: T) {\n    return items.some((x) => comparisonFn(x, item));\n  }\n\n  function toggle(item: T) {\n    isAdded(item) ? remove(item) : add(item);\n  }\n\n  return [items, { clear, add, remove, toggle, isAdded, update: setItems }];\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useScrollLock(condition = true) {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overflows\n    const originalBodyOverflow = window.getComputedStyle(body).overflow;\n    const originalHtmlOverflow = window.getComputedStyle(html).overflow;\n\n    // Prevent scrolling on mount\n    body.style.overflow = \"hidden\";\n    html.style.overflow = \"hidden\";\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      body.style.overflow = originalBodyOverflow;\n      html.style.overflow = originalHtmlOverflow;\n    };\n  }, [condition]);\n}\n","import { noop } from \"./noop\";\n\nexport type CopyToClipboardTextType = string;\ntype OnCopyToClipboardFailureType = (error?: unknown) => void;\ntype OnCopyToClipboardSuccessType = VoidFunction;\n\nconst defaultOnCopyToClipboardFailure: OnCopyToClipboardFailureType = (error) =>\n  console.warn(\"Copying to clipboard not supported\");\n\nexport type CopyToClipboardOptionsType = {\n  text: string;\n  onFailure?: OnCopyToClipboardFailureType;\n  onSuccess?: OnCopyToClipboardSuccessType;\n};\n\nexport async function copyToClipboard(options: CopyToClipboardOptionsType) {\n  const onFailure = options.onFailure ?? defaultOnCopyToClipboardFailure;\n  const onSuccess = options.onSuccess ?? noop;\n\n  if (!navigator.clipboard) onFailure();\n\n  try {\n    await navigator.clipboard.writeText(options.text);\n    onSuccess();\n  } catch (error) {\n    onFailure(error);\n  }\n}\n","export type DateType = Date | number | null | undefined;\n\nexport class DateFormatter {\n  static datetime(date: DateType, defaultValue = \"N/A\"): string {\n    if (!date) return defaultValue;\n\n    return new Date(date).toLocaleString();\n  }\n\n  static form(date: Date | null): string {\n    if (!date) return DateFormatter.form(new Date());\n\n    const year = String(date.getFullYear()).padStart(2, \"0\");\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n\n    return `${year}-${month}-${day}`;\n  }\n}\n","export type FilterType = Record<string, unknown> | undefined;\n\nexport class FilterUrl {\n  value: string;\n\n  constructor(url: string, filters?: FilterType) {\n    const query = new URLSearchParams(this.getNonEmptyFilters(filters));\n\n    if (query.toString() === \"\") {\n      this.value = url;\n\n      return;\n    }\n\n    this.value = `${url}?${query.toString()}`;\n  }\n\n  private getNonEmptyFilters(filters: FilterType) {\n    if (filters === undefined) return {};\n\n    return Object.fromEntries(\n      Object.entries(filters).filter(([_key, value]) => value !== undefined)\n    ) as Record<string, string>;\n  }\n}\n","import type { UseInfiniteQueryResult } from \"react-query\";\nimport type { Paged } from \"@bgord/node\";\n\nexport class Pagination {\n  static empty = { result: [], meta: { exhausted: true } };\n\n  static extract<T>(infinite: UseInfiniteQueryResult<Paged<T>>): T[] {\n    return (\n      infinite.data?.pages\n        ?.flat()\n        .map((data) => data.result)\n        .flat() ?? []\n    );\n  }\n}\n\nexport type { Paged } from \"@bgord/node\";\n","import type { Falsy, Schema } from \"@bgord/node\";\n\ntype PluralizeWordType = string;\ntype PluralizeValueType = Falsy<number>;\n\nexport type PluralizeOptionsType = {\n  value: PluralizeValueType;\n  singular: PluralizeWordType;\n  plural?: PluralizeWordType;\n  language: Schema.LanguageType;\n};\n\nexport function pluralize(options: PluralizeOptionsType): PluralizeWordType {\n  if (options.language !== \"en\") {\n    console.warn(\n      `[@bgord/frontend] missing pluralization fuction for language ${options.language}.`\n    );\n\n    return options.singular;\n  }\n\n  const plural = options.plural ?? `${options.singular}s`;\n\n  if (options.value === 1) return options.singular;\n  return plural;\n}\n","export type ServerErrorConfigType = {\n  message: string;\n};\n\nexport class ServerError {\n  message: ServerErrorConfigType[\"message\"];\n\n  _known = true;\n\n  constructor(config: ServerErrorConfigType) {\n    this.message = config.message;\n  }\n\n  static isServerError(value: unknown): value is ServerError {\n    if (\n      value &&\n      typeof value === \"object\" &&\n      value === Object(value) &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"_known\") &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"message\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  static async extract(response: Response) {\n    if (response.ok) return response;\n\n    const error = await response.json();\n\n    const message = ServerError.isServerError(error)\n      ? error.message\n      : \"app.error.general\";\n\n    throw new ServerError({ message });\n  }\n\n  static async handle(payload: unknown): Promise<Response> {\n    throw new ServerError({\n      message: ServerError.isServerError(payload)\n        ? payload.message\n        : \"app.error.general\",\n    });\n  }\n}\n","export class Days {\n  value: number;\n\n  constructor(value: number) {\n    this.value = value;\n  }\n\n  toHours() {\n    return this.value * 24;\n  }\n\n  toMinutes() {\n    return this.value * 24 * 60;\n  }\n\n  toSeconds() {\n    return this.value * 24 * 60 * 60;\n  }\n\n  toMs() {\n    return this.value * 24 * 60 * 60 * 1000;\n  }\n}\n\nexport class Hours {\n  value: number;\n\n  constructor(value: number) {\n    this.value = value;\n  }\n\n  toMinutes() {\n    return this.value * 60;\n  }\n\n  toSeconds() {\n    return this.value * 60 * 60;\n  }\n\n  toMs() {\n    return this.value * 60 * 60 * 1000;\n  }\n}\n\nexport class Minutes {\n  value: number;\n\n  constructor(value: number) {\n    this.value = value;\n  }\n\n  toSeconds() {\n    return this.value * 60;\n  }\n\n  toMs() {\n    return this.value * 60 * 1000;\n  }\n}\n\nexport class Seconds {\n  value: number;\n\n  constructor(value: number) {\n    this.value = value;\n  }\n\n  toMs() {\n    return this.value * 1000;\n  }\n}\n\nexport const Time = { Days, Hours, Minutes, Seconds };\n","import React from \"react\";\nimport { useList } from \"./hooks/use-list\";\n\nexport type ToastsConfigType = {\n  timeout?: number;\n};\n\nexport type BaseToastType = {\n  id: string;\n  message: string;\n};\n\ntype ToastsContextDataType<ToastType extends BaseToastType = BaseToastType> = [\n  ToastType[],\n  {\n    add: (toast: Omit<ToastType, \"id\">) => void;\n    remove: (toast: ToastType) => void;\n    clear: VoidFunction;\n  }\n];\n\nconst ToastsContext = React.createContext<ToastsContextDataType | undefined>(\n  undefined\n);\n\nexport function ToastsContextProvider(\n  props: { children: JSX.Element | JSX.Element[] } & ToastsConfigType\n) {\n  function useToastsImplementation(): ToastsContextDataType {\n    const timeout = props?.timeout ?? 5000;\n\n    const [toasts, actions] = useList<BaseToastType>({\n      comparisonFn: (a, b) => a.id === b.id,\n    });\n\n    function add(payload: Omit<BaseToastType, \"id\">) {\n      const id = String(Date.now());\n      const toast = { ...payload, id };\n\n      actions.add(toast);\n      setTimeout(() => actions.remove(toast), timeout);\n    }\n\n    return [\n      [...toasts].reverse(),\n      { add, remove: actions.remove, clear: actions.clear },\n    ];\n  }\n\n  const [toasts, actions] = useToastsImplementation();\n\n  return (\n    <ToastsContext.Provider value={[toasts, actions]}>\n      {props.children}\n    </ToastsContext.Provider>\n  );\n}\n\nexport function useToastsContext<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const context = React.useContext<ToastsContextDataType<ToastType>>(\n    ToastsContext as unknown as React.Context<ToastsContextDataType<ToastType>>\n  );\n\n  if (context === undefined) {\n    throw new Error(`useToasts must be used within the ToastsContextProvider`);\n  }\n\n  return context;\n}\n\nexport function useToastTrigger<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const [, actions] = useToastsContext<ToastType>();\n\n  return actions.add;\n}\n","import React from \"react\";\nimport type { TranslationsType, Schema } from \"@bgord/node\";\nimport { pluralize, PluralizeOptionsType } from \"./pluralize\";\n\ntype TranslationsContextValueType = {\n  translations: TranslationsType;\n  language: Schema.LanguageType;\n};\n\nconst TranslationsContext = React.createContext<TranslationsContextValueType>({\n  translations: {},\n  language: \"en\",\n});\n\ntype TranslationsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: TranslationsContextValueType;\n};\n\nexport function TranslationsContextProvider(\n  props: TranslationsContextPropsType\n) {\n  return (\n    <TranslationsContext.Provider value={props.value}>\n      {props.children}\n    </TranslationsContext.Provider>\n  );\n}\n\nexport function useTranslations() {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useTranslations must be used within the TranslationsContext`\n    );\n  }\n\n  function translate(key: string) {\n    const result = value.translations[key];\n\n    if (!result)\n      console.warn(`[@bgord/frontend] missing translation for key ${key}.`);\n\n    return result ?? key;\n  }\n\n  return translate;\n}\n\nexport function useLanguage(): TranslationsContextValueType[\"language\"] {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(`useLanguage must be used within the TranslationsContext`);\n  }\n\n  return value.language;\n}\n\nexport function usePluralize() {\n  const language = useLanguage();\n\n  return (options: Omit<PluralizeOptionsType, \"language\">) =>\n    pluralize({ ...options, language });\n}\n","import * as React from \"react\";\n\nimport { DurationFormatter } from \"../durations\";\nimport { useField } from \"./use-field\";\n\nexport const AUDIO_DEFAULT_VOLUME = 1;\n\nexport type UseAudioSrcType = string;\n\nexport type UseAudioStateType = \"initial\" | \"ready\" | \"playing\" | \"paused\";\n\nexport function useAudio(src: UseAudioSrcType) {\n  const [state, setState] = React.useState<UseAudioStateType>(\"initial\");\n\n  const ref = React.useRef<HTMLAudioElement | null>(null);\n\n  const duration = useField<number>(0);\n  const currentTime = useField<number>(0);\n  const volume = useField<number>(AUDIO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (ref.current) {\n      ref.current.play();\n      setState(\"playing\");\n    }\n  }\n\n  function pause() {\n    if (ref.current) {\n      ref.current.pause();\n      setState(\"paused\");\n    }\n  }\n\n  function reset() {\n    if (ref.current) {\n      ref.current.currentTime = 0;\n      ref.current.pause();\n      currentTime.set(0);\n      setState(\"paused\");\n    }\n  }\n\n  function mute() {\n    if (ref.current) {\n      ref.current.volume = 0;\n      volume.set(0);\n    }\n  }\n\n  function unmute() {\n    if (ref.current) {\n      ref.current.volume = AUDIO_DEFAULT_VOLUME;\n      volume.set(AUDIO_DEFAULT_VOLUME);\n    }\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.currentTime = target.valueAsNumber;\n      currentTime.set(target.valueAsNumber);\n    }\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLAudioElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(\"ready\");\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLAudioElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(\"paused\");\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.volume = target.valueAsNumber;\n      volume.set(target.valueAsNumber);\n    }\n  }\n\n  return {\n    props: {\n      audio: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: { play, pause, mute, unmute, reset, seek, changeVolume },\n    meta: {\n      state,\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import React from \"react\";\n\nimport * as hooks from \"../hooks\";\n\nexport type DialogPropsType = hooks.UseToggleReturnType &\n  JSX.IntrinsicElements[\"dialog\"];\n\nexport function Dialog(props: DialogPropsType) {\n  const { disable, enable, on, off, toggle, ...rest } = props;\n  const ref = React.useRef<HTMLDialogElement>(null);\n\n  hooks.useKeyboardShortcurts({ Escape: disable });\n  hooks.useClickOutside(ref, disable);\n  hooks.useAutofocus({ ref, condition: props.on });\n  hooks.useScrollLock(props.on);\n\n  if (props.off) return null;\n\n  return (\n    <dialog\n      ref={ref}\n      tabIndex={0}\n      open={props.on}\n      data-display=\"flex\"\n      data-direction=\"column\"\n      data-position=\"absolute\"\n      data-z=\"2\"\n      data-bg=\"white\"\n      data-br=\"4\"\n      data-bc=\"gray-300\"\n      data-bw=\"1\"\n      data-p=\"24\"\n      data-mx=\"auto\"\n      {...rest}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { useIsOnline } from \"../hooks\";\n\nexport function OfflineIndicator(props: { children: React.ReactChild }) {\n  const isOnline = useIsOnline();\n\n  if (isOnline) return null;\n\n  return <>{props.children}</>;\n}\n","import React from \"react\";\nimport type { PolymorphicPropsWithoutRef } from \"react-polymorphic-types\";\n\nconst OutboundLinkDefaultElement = \"a\";\n\nexport function OutboundLink<\n  T extends React.ElementType = typeof OutboundLinkDefaultElement\n>(props: PolymorphicPropsWithoutRef<{}, T>) {\n  const { as, ...rest } = props;\n\n  const Element = as || OutboundLinkDefaultElement;\n\n  return <Element target=\"_blank\" rel=\"noreferer noopener\" {...rest} />;\n}\n","import { getSafeWindow } from \"./safe-window\";\n\nexport function isClient() {\n  return !getSafeWindow();\n}\n","import { useWindowDimensions } from \"./use-window-dimensions\";\n\nexport type BreakpointType = number;\n\nexport function useBreakpoint(breakpoint: BreakpointType): boolean {\n  const dimensions = useWindowDimensions();\n  const width = dimensions?.width ?? 0;\n\n  return width <= breakpoint;\n}\n","import { useState } from \"react\";\n\nexport type UseClientSearchQueryType = string;\n\nexport type UseClientSearchReturnType = {\n  query: UseClientSearchQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: (value: string) => boolean;\n};\n\nexport function useClientSearch(): UseClientSearchReturnType {\n  const emptyQuery: UseClientSearchQueryType = \"\";\n\n  const [query, setValue] = useState<UseClientSearchQueryType>(emptyQuery);\n\n  function clear() {\n    setValue(emptyQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setValue(event.currentTarget.value);\n  }\n\n  function filterFn(value: string) {\n    if (query === emptyQuery) return true;\n\n    return value?.toLowerCase().includes(query.toLowerCase());\n  }\n\n  return { query, clear, onChange, filterFn };\n}\n","import React from \"react\";\n\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { UseFileReturnType, UseFileState } from \"./use-file\";\nimport {\n  getImageResolution,\n  ImageResolutionType,\n  emptyImageResolution,\n} from \"../get-image-resolution\";\n\nexport function useImageFileResolution(\n  file: UseFileReturnType\n): ImageResolutionType {\n  const resolution = useField<ImageResolutionType>(emptyImageResolution);\n\n  React.useEffect(() => {\n    async function execute() {\n      if (file.state === UseFileState.selected) {\n        try {\n          const result = await getImageResolution(file.actions.previewFile());\n\n          return resolution.set(result);\n        } catch (error) {\n          return resolution.clear();\n        }\n      }\n\n      if (\n        [UseFileState.error, UseFileState.idle].includes(file.state) &&\n        resolution.value.width !== null &&\n        resolution.value.height !== null\n      ) {\n        resolution.clear();\n      }\n    }\n\n    execute();\n  }, [file.state, file.data?.name]);\n\n  return resolution.value;\n}\n","import React from \"react\";\n\nexport type UseLeavingPromptConditionType = boolean;\n\nexport function useLeavingPrompt(\n  condition: UseLeavingPromptConditionType = false\n) {\n  React.useEffect(() => {\n    if (!condition) return;\n\n    function handler(e: BeforeUnloadEvent) {\n      e.preventDefault();\n    }\n\n    window.addEventListener(\"beforeunload\", handler);\n\n    return () => window.removeEventListener(\"beforeunload\", handler);\n  }, [condition]);\n}\n","import { useFilter, UseFilterConfigType } from \"./use-filter\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type UseUrlFilterConfigType<T> = UseFilterConfigType<T> & {\n  label: string;\n};\n\nexport function useUrlFilter<T>(config: UseUrlFilterConfigType<T>) {\n  const safeWindow = getSafeWindow();\n\n  const currentQuery =\n    new URLSearchParams(safeWindow?.location.search).get(config.label) ??\n    undefined;\n\n  return useFilter({\n    onUpdate: (current, previous) => {\n      if (!safeWindow) return;\n\n      const url = new URL(safeWindow.location.toString());\n      const params = new URLSearchParams(url.search);\n\n      if (current === undefined) {\n        params.delete(config.label);\n      } else {\n        params.set(config.label, current);\n      }\n\n      if (current === previous) return;\n\n      if (current !== previous) {\n        url.search = params.toString();\n        history.pushState({}, \"\", url.toString());\n      }\n    },\n    ...config,\n    defaultQuery: config.defaultQuery,\n  });\n}\n"],"names":["usePreviousValue","value","defaultValue","previousValue","useRef","useEffect","current","AnimaState","UseExpandableListState","UseFileState","DurationFormatter","format","duration","minutes","Math","floor","seconds","String","padStart","useField","evaluatedDefaultValue","useState","setValue","set","clear","useAutofocus","config","React","condition","ref","focus","getSafeWindow","window","useWindowDimensions","width","undefined","height","windowSize","setWindowSize","safeWindow","addEventListener","handleResize","removeEventListener","innerWidth","innerHeight","useClickOutside","onClickOutside","exclude","document","handleClickOutside","event","_ref$current","contains","target","some","node","_node$current","noop","useFilter","defaultQuery","filterFn","query","options","Object","keys","onUpdate","setQuery","previousQuery","onChange","newQuery","currentTarget","isNewQueryInEnum","Boolean","getImageResolution","path","emptyImageResolution","img","createElement","promise","Promise","resolve","reject","onload","onerror","src","useToggle","on","setIsOn","off","enable","disable","toggle","v","useIsOnline","onlineStatus","navigator","onLine","handleOnline","handleOffline","useKeyboardShortcurts","unsubscribeShortcuts","tinykeys","useList","defaultItems","comparisonFn","a","b","items","setItems","add","payload","Array","isArray","remove","item","filter","x","isAdded","update","useScrollLock","useLayoutEffect","html","querySelector","body","originalBodyOverflow","getComputedStyle","overflow","originalHtmlOverflow","style","defaultOnCopyToClipboardFailure","error","console","warn","DateFormatter","datetime","date","Date","toLocaleString","form","getFullYear","getMonth","getDate","FilterUrl","url","filters","URLSearchParams","this","getNonEmptyFilters","toString","fromEntries","entries","Pagination","extract","infinite","data","_infinite$data","pages","_infinite$data$pages","flat","map","result","pluralize","language","singular","plural","empty","meta","exhausted","ServerError","message","_known","isServerError","hasOwnProperty","response","ok","json","handle","Days","toHours","toMinutes","toSeconds","toMs","Hours","Minutes","Seconds","Time","ToastsContext","createContext","useToastsContext","context","useContext","Error","TranslationsContext","translations","useLanguage","props","visible","isInitial","appeared","appearing","hidden","state","setState","previousState","setTimeout","hidding","cloneElement","children","effect","rest","setIsInitial","child","hooks","Escape","tabIndex","open","as","rel","timeout","actions","id","reverse","toast","now","Provider","onFailure","onSuccess","clipboard","writeText","text","list","direction","officialList","setOfficialList","added","push","length","deleted","every","updated","find","y","count","currentTime","volume","muted","percentage","round","seek","valueAsNumber","changeVolume","audio","onTimeUpdate","onLoadedMetadata","onEnded","controls","player","min","step","max","onInput","play","pause","mute","unmute","reset","raw","formatted","breakpoint","dimensions","toLowerCase","includes","title","numberOfExcessiveElements","areThereExcessiveElements","getState","contracted","expanded","displayShowMore","displayShowLess","showMore","showLess","_element","index","maxSize","Infinity","idle","file","setFile","selectFile","files","size","selected","clearFile","previewFile","URL","createObjectURL","resolution","execute","_file$data","name","handler","e","preventDefault","key","location","search","get","label","previous","params","history","pushState"],"mappings":"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"}