{"version":3,"file":"bgord-frontend.umd.js","sources":["../server-error.ts","../durations.ts","../hooks/use-field.ts","../hooks/use-audio.ts","../hooks/use-autofocus.ts","../safe-window.ts","../hooks/use-window-dimensions.ts","../hooks/use-click-outside.ts","../hooks/use-previous-value.ts","../noop.ts","../hooks/use-client-filter.ts","../hooks/use-client-sort.ts","../time.ts","../hooks/use-current-timestamp.ts","../hooks/use-expandable-list.ts","../hooks/use-file.ts","../hooks/use-toggle.ts","../hooks/use-keyboard-shortcuts.ts","../get-image-resolution.ts","../hooks/use-is-online.ts","../hooks/use-is-visible.ts","../hooks/use-item.ts","../hooks/use-keyboard-handler.ts","../pluralize.ts","../translations.tsx","../hooks/use-list.ts","../hooks/use-video.ts","../safe-local-storage.ts","../rate-limiter.ts","../hooks/use-scroll-lock.ts","../exec.ts","../components/dev-tools.tsx","../copy-to-clipboard.ts","../dates.ts","../etag.ts","../feature-flags.tsx","../filter-url.ts","../form.ts","../min-max-scaler.ts","../pagination.ts","../rhythm.ts","../sorts.ts","../thousands-separator.ts","../toasts.tsx","../api.ts","../components/dialog.tsx","../line-clamp.ts","../components/offline-indicator.tsx","../components/outbound-link.tsx","../components/switch.tsx","../is-client.ts","../hooks/use-breakpoint.ts","../hooks/use-client-search.ts","../hooks/use-debounce.ts","../hooks/use-delayed-loader.ts","../hooks/use-design-mode.ts","../hooks/use-disable-pull-to-refresh.ts","../hooks/use-document-title.ts","../hooks/use-focus-keyboard-shortcut.ts","../hooks/use-hover.ts","../hooks/use-image-file-resolution.ts","../hooks/use-language-selector.ts","../hooks/use-leaving-prompt.ts","../hooks/use-meta-enter-submit.ts","../hooks/use-pagination.ts","../hooks/use-persistent-toggle.ts","../hooks/use-rate-limiter.ts","../reordering.ts","../hooks/use-scroll.ts","../hooks/use-sound.ts","../hooks/use-url-filter.ts"],"sourcesContent":["export type ServerErrorConfigType = {\n  message: string;\n};\n\nexport class ServerError {\n  message: ServerErrorConfigType[\"message\"];\n\n  _known = true;\n\n  constructor(config: ServerErrorConfigType) {\n    this.message = config.message;\n  }\n\n  static isServerError(value: unknown): value is ServerError {\n    if (\n      value &&\n      typeof value === \"object\" &&\n      value === Object(value) &&\n      // biome-ignore lint: lint/suspicious/noPrototypeBuiltins\n      value.hasOwnProperty(\"_known\") &&\n      // biome-ignore lint: lint/suspicious/noPrototypeBuiltins\n      value.hasOwnProperty(\"message\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  static async extract(response: Response) {\n    if (response.ok) return response;\n\n    const error = await response.json();\n\n    const message = ServerError.isServerError(error)\n      ? error.message\n      : \"app.error.general\";\n\n    throw new ServerError({ message });\n  }\n\n  static async handle(payload: unknown): Promise<Response> {\n    throw new ServerError({\n      message: ServerError.isServerError(payload)\n        ? payload.message\n        : \"app.error.general\",\n    });\n  }\n}\n","export class DurationFormatter {\n  static format(duration: number) {\n    const minutes = Math.floor(duration / 60);\n    const seconds = duration % 60;\n\n    const formattedMinutes = String(minutes).padStart(2, \"0\");\n    const formattedSeconds = String(seconds).padStart(2, \"0\");\n\n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n","import { useEffect, useState, Dispatch, SetStateAction } from \"react\";\n\nexport type UseFieldDefaultValueType<T> = T | (() => T);\nexport type UseFieldNameType = string;\n\nexport type UseFieldReturnType<T> = {\n  value: T;\n  set: Dispatch<SetStateAction<T>>;\n  clear: VoidFunction;\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  label: { props: { htmlFor: UseFieldNameType } };\n  input: { props: { id: UseFieldNameType; name: UseFieldNameType } };\n  changed: boolean;\n  unchanged: boolean;\n};\n\nexport function useField<T>(\n  name: UseFieldNameType,\n  defaultValue: UseFieldDefaultValueType<T>\n): UseFieldReturnType<T> {\n  const evaluatedDefaultValue =\n    // @ts-ignore\n    typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n\n  const [value, setValue] = useState(evaluatedDefaultValue);\n\n  useEffect(() => setValue(evaluatedDefaultValue), [evaluatedDefaultValue]);\n\n  return {\n    value,\n    set: setValue,\n    handleChange: (event: React.ChangeEvent<HTMLInputElement>) =>\n      setValue(event.currentTarget.value),\n    clear: () => setValue(evaluatedDefaultValue),\n    label: { props: { htmlFor: name } },\n    input: { props: { id: name, name: name } },\n    changed: value !== evaluatedDefaultValue,\n    unchanged: value === evaluatedDefaultValue,\n  };\n}\n\nexport function extractUseField<T, X>(\n  props: UseFieldReturnType<T> & X\n): { field: UseFieldReturnType<T>; rest: X } {\n  // prettier-ignore\n  const { value, set, clear, label, input, changed, unchanged, handleChange, ...rest } = props;\n\n  // prettier-ignore\n  return {\n    field: { value, set, clear, label, input, changed, unchanged, handleChange },\n    rest: rest as X,\n  };\n}\n\nexport class Fields {\n  static allUnchanged(fields: { unchanged: boolean }[]): boolean {\n    return fields.every((field) => field.unchanged);\n  }\n\n  static anyUnchanged(fields: { unchanged: boolean }[]): boolean {\n    return fields.some((field) => field.unchanged);\n  }\n\n  static anyChanged(fields: { changed: boolean }[]): boolean {\n    return fields.some((field) => field.changed);\n  }\n\n  static clearAll(fields: { clear: VoidFunction }[]) {\n    return () => {\n      for (const field of fields) {\n        field.clear();\n      }\n    };\n  }\n}\n","import * as React from \"react\";\n\nimport { DurationFormatter } from \"../durations\";\nimport { useField } from \"./use-field\";\n\nexport type UseAudioSrcType = string;\n\ntype AudioDurationType = number;\ntype AudioCurrentTimeType = number;\ntype AudioVolumeType = number;\n\nexport const AUDIO_DEFAULT_VOLUME: AudioVolumeType = 1;\n\nexport enum UseAudioState {\n  initial = \"initial\",\n  ready = \"ready\",\n  playing = \"playing\",\n  paused = \"paused\",\n}\n\nexport type UseAudioReturnType = {\n  props: {\n    audio: {\n      src: UseAudioSrcType;\n      onTimeUpdate: (event: Event) => void;\n      onLoadedMetadata: (event: Event) => void;\n      onEnded: (event: Event) => void;\n      controls: false;\n    };\n    player: {\n      min: 0;\n      step: 1;\n      max: AudioDurationType;\n      value: AudioDurationType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n    volume: {\n      min: 0;\n      max: 1;\n      step: 0.01;\n      value: AudioVolumeType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n  };\n  actions: {\n    play: VoidFunction;\n    pause: VoidFunction;\n    mute: VoidFunction;\n    unmute: VoidFunction;\n    reset: VoidFunction;\n    seek: (event: Event) => void;\n    changeVolume: (event: Event) => void;\n  };\n\n  meta: {\n    state: UseAudioState;\n    isInitial: boolean;\n    isReady: boolean;\n    isPlaying: boolean;\n    isPaused: boolean;\n    matches: (states: UseAudioState[]) => boolean;\n    percentage: {\n      raw: number;\n      formatted: string;\n    };\n    currentTime: {\n      raw: AudioCurrentTimeType;\n      formatted: string;\n    };\n    duration: {\n      raw: AudioDurationType;\n      formatted: string;\n    };\n    volume: {\n      value: AudioVolumeType;\n      raw: number;\n      formatted: string;\n    };\n    muted: boolean;\n  };\n};\n\nexport function useAudio(src: UseAudioSrcType): UseAudioReturnType {\n  const [state, setState] = React.useState<UseAudioState>(\n    UseAudioState.initial\n  );\n\n  const ref = React.useRef<HTMLAudioElement | null>(null);\n\n  const duration = useField<AudioDurationType>(\"duration\", 0);\n  const currentTime = useField<AudioCurrentTimeType>(\"currentTime\", 0);\n  const volume = useField<AudioVolumeType>(\"volume\", AUDIO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (ref.current) {\n      ref.current.play();\n      setState(UseAudioState.playing);\n    }\n  }\n\n  function pause() {\n    if (ref.current) {\n      ref.current.pause();\n      setState(UseAudioState.paused);\n    }\n  }\n\n  function reset() {\n    if (ref.current) {\n      ref.current.currentTime = 0;\n      ref.current.pause();\n      currentTime.set(0);\n      setState(UseAudioState.paused);\n    }\n  }\n\n  function mute() {\n    if (ref.current) {\n      ref.current.volume = 0;\n      volume.set(0);\n    }\n  }\n\n  function unmute() {\n    if (ref.current) {\n      ref.current.volume = AUDIO_DEFAULT_VOLUME;\n      volume.set(AUDIO_DEFAULT_VOLUME);\n    }\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.currentTime = target.valueAsNumber;\n      currentTime.set(target.valueAsNumber);\n    }\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLAudioElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(UseAudioState.ready);\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLAudioElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(UseAudioState.paused);\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.volume = target.valueAsNumber;\n      volume.set(target.valueAsNumber);\n    }\n  }\n\n  return {\n    props: {\n      audio: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: { play, pause, mute, unmute, reset, seek, changeVolume },\n    meta: {\n      state,\n      isInitial: state === UseAudioState.initial,\n      isReady: state === UseAudioState.ready,\n      isPlaying: state === UseAudioState.playing,\n      isPaused: state === UseAudioState.paused,\n      matches: (states: UseAudioState[]) =>\n        states.some((given) => given === state),\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import React from \"react\";\n\nexport type UseAutofocusConfigType = {\n  ref: React.RefObject<HTMLElement>;\n  condition: boolean;\n};\n\nexport function useAutofocus(config: UseAutofocusConfigType): void {\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  React.useEffect(() => {\n    if (!config.condition) return;\n\n    config.ref.current?.focus();\n  }, [config.condition]);\n}\n","export function getSafeWindow() {\n  if (typeof window === \"undefined\") return undefined;\n  return window;\n}\n","import { useState, useEffect } from \"react\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type WindowDimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowDimensions(): WindowDimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowDimensions>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    const safeWindow = getSafeWindow();\n\n    if (!safeWindow) return;\n\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: safeWindow?.innerWidth,\n        height: safeWindow?.innerHeight,\n      });\n    }\n\n    // Add event listener\n    safeWindow.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => safeWindow.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import React from \"react\";\n\nexport function useClickOutside(\n  ref: React.RefObject<HTMLElement>,\n  onClickOutside: VoidFunction,\n  exclude?: React.RefObject<HTMLElement>[]\n): void {\n  React.useEffect(() => {\n    if (!ref.current) return;\n\n    function handleClickOutside(event: MouseEvent) {\n      // Check if click event happened outside the `ref`\n      // so the `onClickOutside` callback `may` be fired.\n      if (!ref.current?.contains(event.target as Node)) {\n        // The second check is to check if some `exclude`d node\n        // outside the `ref` node has been clicked.\n        const isExcludedNodeClicked = exclude?.some((node) =>\n          node.current?.contains(event.target as Node)\n        );\n\n        // `onClickOutside` callback is fired if the click event\n        // happened outside both `ref` node and `exclude`d nodes.\n        if (!isExcludedNodeClicked) {\n          onClickOutside();\n        }\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [onClickOutside, ref, exclude]);\n}\n","import { useEffect, useRef } from \"react\";\n\nexport function usePreviousValue<T>(\n  value: T,\n  defaultValue?: T | undefined\n): T | undefined {\n  const previousValue = useRef<T | undefined>(defaultValue);\n\n  useEffect(() => {\n    previousValue.current = value;\n  });\n\n  return previousValue.current;\n}\n","export function noop() {}\n","import { useState, useEffect } from \"react\";\nimport { usePreviousValue } from \"./use-previous-value\";\nimport { noop } from \"../noop\";\n\nexport type UseClientFilterQueryType = string | undefined;\nexport type UseClientFilterNameType = string;\n\nexport type UseClientFilterConfigType<T> = {\n  name: string;\n  enum: { [key: string]: UseClientFilterQueryType };\n  defaultQuery?: UseClientFilterQueryType;\n  currentQuery?: UseClientFilterQueryType;\n  filterFn?: (value: T) => boolean;\n  onUpdate?: (\n    current: UseClientFilterQueryType,\n    previous: UseClientFilterQueryType,\n  ) => void;\n};\n\nexport type UseClientFilterReturnType<T> = {\n  query: UseClientFilterQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: NonNullable<UseClientFilterConfigType<T>[\"filterFn\"]>;\n  options: UseClientFilterConfigType<T>[\"enum\"][0][];\n  onUpdate: UseClientFilterConfigType<T>[\"onUpdate\"];\n  name: UseClientFilterConfigType<T>[\"name\"];\n  changed: boolean;\n  unchanged: boolean;\n  label: { props: { htmlFor: UseClientFilterNameType } };\n  input: {\n    props: { id: UseClientFilterNameType; name: UseClientFilterNameType };\n  };\n};\n\nexport function useClientFilter<T = string>(\n  config: UseClientFilterConfigType<T>,\n): UseClientFilterReturnType<T> {\n  const defaultQuery = config.defaultQuery ?? undefined;\n  const currentQuery = config.currentQuery ?? undefined;\n\n  const filterFn = config.filterFn ?? defaultFilterFn;\n  const options = Object.keys(config.enum);\n  const onUpdate = config?.onUpdate ?? noop;\n\n  const [query, setQuery] = useState<UseClientFilterQueryType>(\n    currentQuery ?? defaultQuery,\n  );\n  const previousQuery = usePreviousValue(query);\n\n  function clear() {\n    setQuery(defaultQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newQuery = event.currentTarget.value;\n\n    const isNewQueryInEnum = Boolean(config.enum[String(newQuery)]);\n\n    setQuery(isNewQueryInEnum ? newQuery : undefined);\n  }\n\n  function defaultFilterFn(value: T) {\n    if (query === undefined) return true;\n\n    return query === String(value);\n  }\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  useEffect(() => onUpdate(query, previousQuery), [previousQuery, query]);\n\n  return {\n    query,\n    clear,\n    onChange,\n    filterFn,\n    options,\n    onUpdate,\n    name: config.name,\n    changed: query !== defaultQuery,\n    unchanged: query === defaultQuery,\n    label: { props: { htmlFor: config.name } },\n    input: { props: { id: config.name, name: config.name } },\n  };\n}\n","import { useField, UseFieldNameType, UseFieldReturnType } from \"./use-field\";\n\nexport type UseClientSortFnType<T> = (a: T, b: T) => number;\n\nexport type UseClientSortReturnType<T> = {\n  sortFn: UseClientSortFnType<T>;\n  options: UseClientSortOptionType[];\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n} & UseFieldReturnType<UseClientSortOptionType>;\n\nexport type UseClientSortOptionType = string;\n\ntype UseClientSortConfigType<T> = {\n  enum: Record<UseClientSortOptionType, UseClientSortOptionType> & {\n    default: UseClientSortOptionType;\n  };\n  options: Record<UseClientSortOptionType, UseClientSortFnType<T>>;\n};\n\nexport const defaultSortFn = () => 0;\n\nexport function useClientSort<T>(\n  name: UseFieldNameType,\n  config: UseClientSortConfigType<T>\n): UseClientSortReturnType<T> {\n  const state = useField<UseClientSortOptionType>(name, config.enum.default);\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newSort = event.currentTarget.value;\n    const isNewSortInEnum = Boolean(config.enum[String(newSort)]);\n\n    state.set(isNewSortInEnum ? newSort : config.enum.default);\n  }\n\n  if (state.value === config.enum.default) {\n    return {\n      sortFn: defaultSortFn,\n      options: Object.keys(config.options),\n      ...state,\n      handleChange,\n    };\n  }\n  return {\n    sortFn: config.options[state.value] ?? defaultSortFn,\n    options: Object.keys(config.options),\n    ...state,\n    handleChange,\n  };\n}\n","export function Days(value: number) {\n  return {\n    value,\n    hours: value * 24,\n    minutes: value * 24 * 60,\n    seconds: value * 24 * 60 * 60,\n    ms: value * 24 * 60 * 60 * 1000,\n  };\n}\n\nexport function Hours(value: number) {\n  return {\n    value,\n    minutes: value * 60,\n    seconds: value * 60 * 60,\n    ms: value * 60 * 60 * 1000,\n  };\n}\n\nexport function Minutes(value: number) {\n  return { value, seconds: value * 60, ms: value * 60 * 1000 };\n}\n\nexport function Seconds(value: number) {\n  return { value, ms: value * 1000 };\n}\n\nexport const Time = { Days, Hours, Minutes, Seconds };\n","import type { TimestampType } from \"@bgord/node/dist/schema\";\nimport { useState, useEffect } from \"react\";\nimport { Time } from \"../time\";\n\nexport function getCurrentTimestamp(): TimestampType {\n  return Date.now();\n}\n\nexport function useCurrentTimestamp(): TimestampType {\n  const [timestamp, setTimestamp] =\n    useState<TimestampType>(getCurrentTimestamp);\n\n  useEffect(() => {\n    const timer = setInterval(\n      () => setTimestamp(getCurrentTimestamp()),\n      Time.Seconds(1).ms\n    );\n\n    return () => clearInterval(timer);\n  }, []);\n\n  return timestamp;\n}\n","import { useState, useEffect } from \"react\";\n\nexport enum UseExpandableListState {\n  contracted = \"contracted\",\n  expanded = \"expanded\",\n}\n\nexport type UseExpandableListConfigType = { max: number; length: number };\n\nexport type UseExpandableListReturnType = {\n  state: UseExpandableListState;\n  displayShowMore: boolean;\n  displayShowLess: boolean;\n  actions: {\n    showMore: VoidFunction;\n    showLess: VoidFunction;\n  };\n  numberOfExcessiveElements: number;\n  filterFn: (element: unknown, index: number) => void;\n};\n\nexport function useExpandableList(\n  config: UseExpandableListConfigType,\n): UseExpandableListReturnType {\n  const numberOfExcessiveElements = config.length - config.max;\n  const areThereExcessiveElements = config.length > config.max;\n\n  function getState() {\n    return areThereExcessiveElements\n      ? UseExpandableListState.contracted\n      : UseExpandableListState.expanded;\n  }\n\n  const [state, setState] = useState<UseExpandableListState>(getState);\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  useEffect(() => setState(getState()), [config.length, config.max]);\n\n  function showMore() {\n    if (state === UseExpandableListState.contracted) {\n      setState(UseExpandableListState.expanded);\n    }\n  }\n\n  function showLess() {\n    if (state === UseExpandableListState.expanded) {\n      setState(UseExpandableListState.contracted);\n    }\n  }\n\n  function filterFn(_element: unknown, index: number) {\n    if (state === UseExpandableListState.expanded) return true;\n    return index < config.max;\n  }\n\n  return {\n    state,\n    displayShowMore: state === UseExpandableListState.contracted,\n    displayShowLess:\n      state === UseExpandableListState.expanded && areThereExcessiveElements,\n    actions: {\n      showMore,\n      showLess,\n    },\n    numberOfExcessiveElements,\n    filterFn,\n  };\n}\n","import { useState, useMemo } from \"react\";\n\ntype UseFileNameType = string;\n\nexport type UseFileConfigType = {\n  maxSize?: number;\n};\n\nexport enum UseFileState {\n  idle = \"idle\",\n  selected = \"selected\",\n  error = \"error\",\n}\n\ntype UseFileIdle = {\n  state: UseFileState.idle;\n  matches: (states: UseFileState[]) => boolean;\n  isIdle: true;\n  isSelected: false;\n  isError: false;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\ntype UseFileSelected = {\n  state: UseFileState.selected;\n  matches: (states: UseFileState[]) => boolean;\n  data: File;\n  isIdle: false;\n  isSelected: true;\n  isError: false;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  preview: ReturnType<typeof URL.createObjectURL> | undefined;\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\ntype UseFileError = {\n  state: UseFileState.error;\n  matches: (states: UseFileState[]) => boolean;\n  data: null;\n  isIdle: false;\n  isSelected: false;\n  isError: true;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\nexport type UseFileReturnType = UseFileIdle | UseFileSelected | UseFileError;\n\nexport function useFile(\n  name: UseFileNameType,\n  config?: UseFileConfigType\n): UseFileReturnType {\n  const maxSize = config?.maxSize ?? Number.POSITIVE_INFINITY;\n\n  const [key, setKey] = useState(0);\n  const [state, setState] = useState<UseFileState>(UseFileState.idle);\n  const [file, setFile] = useState<File | null>(null);\n\n  function selectFile(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.currentTarget.files;\n\n    if (!(files?.[0])) return;\n\n    const file = files[0];\n\n    if (file.size > maxSize) {\n      setState(UseFileState.error);\n      return undefined;\n    }\n\n    setFile(file);\n    setState(UseFileState.selected);\n\n    return file;\n  }\n\n  function clearFile() {\n    setKey((key) => key + 1);\n    setFile(null);\n    setState(UseFileState.idle);\n  }\n\n  const preview = useMemo(\n    () => (file ? URL.createObjectURL(file) : undefined),\n    [file]\n  );\n\n  function matches(states: UseFileState[]) {\n    return states.some((given) => given === state);\n  }\n\n  if (state === UseFileState.idle) {\n    return {\n      state,\n      matches,\n      isIdle: true,\n      isSelected: false,\n      isError: false,\n      data: null,\n      actions: { selectFile, clearFile },\n      label: { props: { htmlFor: name } },\n      input: {\n        props: { id: name, name, multiple: false, key },\n      },\n    };\n  }\n\n  if (state === UseFileState.selected) {\n    return {\n      state,\n      matches,\n      data: file as File,\n      isIdle: false,\n      isSelected: true,\n      isError: false,\n      actions: { selectFile, clearFile },\n      preview,\n      label: { props: { htmlFor: name } },\n      input: {\n        props: { id: name, name, multiple: false, key },\n      },\n    };\n  }\n\n  return {\n    state,\n    matches,\n    data: null,\n    isIdle: false,\n    isSelected: false,\n    isError: true,\n    actions: { selectFile, clearFile },\n    label: { props: { htmlFor: name } },\n    input: {\n      props: { id: name, name, multiple: false, key },\n    },\n  };\n}\n","import { useState } from \"react\";\n\nexport type UseToggleValueType = boolean;\n\nexport type UseToggleConfigType = UseToggleValueType;\n\nexport type UseToggleReturnType = {\n  on: UseToggleValueType;\n  off: UseToggleValueType;\n  enable: VoidFunction;\n  disable: VoidFunction;\n  toggle: VoidFunction;\n  props: {\n    controller: {\n      \"aria-expanded\": JSX.IntrinsicElements[\"div\"][\"aria-expanded\"];\n      \"aria-controls\": JSX.IntrinsicElements[\"div\"][\"aria-controls\"];\n    };\n    target: { id: JSX.IntrinsicElements[\"div\"][\"id\"] };\n  };\n};\n\nexport function useToggle(\n  defaultValue: UseToggleConfigType = false,\n  name?: string\n): UseToggleReturnType {\n  const [on, setIsOn] = useState(defaultValue);\n\n  const enable = () => setIsOn(true);\n  const disable = () => setIsOn(false);\n  const toggle = () => setIsOn((v) => !v);\n\n  return {\n    on,\n    off: !on,\n    enable,\n    disable,\n    toggle,\n    props: {\n      controller: {\n        \"aria-expanded\": on ? \"true\" : \"false\",\n        \"aria-controls\": name,\n      },\n      target: { id: name },\n    },\n  };\n}\n\nexport function extractUseToggle<X>(_props: UseToggleReturnType & X): {\n  toggle: UseToggleReturnType;\n  rest: X;\n} {\n  const { on, off, enable, disable, toggle, props, ...rest } = _props;\n\n  return {\n    toggle: { on, off, enable, disable, toggle, props },\n    rest: rest as X,\n  };\n}\n","import React from \"react\";\nimport { tinykeys } from \"tinykeys\";\n\nexport interface UseKeyboardShortcutsConfigType {\n  [keybinding: string]: (event: KeyboardEvent) => void;\n}\n\nexport type UseKeyboardShortcutsOptionsType = { enabled?: boolean };\n\nexport function useKeyboardShortcuts(\n  config: UseKeyboardShortcutsConfigType,\n  options?: UseKeyboardShortcutsOptionsType,\n): void {\n  const enabled = options?.enabled ?? true;\n\n  React.useEffect(() => {\n    if (!enabled) return;\n\n    const unsubscribeShortcuts = tinykeys(window, config);\n\n    return () => unsubscribeShortcuts();\n  }, [config, enabled]);\n}\n","export type ImagePathType = string | undefined;\n\nexport type ImageResolutionType = {\n  width: number | null;\n  height: number | null;\n};\n\nexport const emptyImageResolution: ImageResolutionType = {\n  width: null,\n  height: null,\n};\n\nexport async function getImageResolution(\n  path: ImagePathType\n): Promise<ImageResolutionType> {\n  if (!path) return emptyImageResolution;\n\n  const img = document.createElement(\"img\");\n\n  const promise = new Promise<ImageResolutionType>((resolve, reject) => {\n    img.onload = () => resolve({ width: img.width, height: img.height });\n    img.onerror = reject;\n  });\n\n  img.src = path;\n\n  return promise;\n}\n","import React from \"react\";\nimport { useToggle } from \"./use-toggle\";\n\ntype OnlineStatusType = boolean;\n\nexport const useIsOnline = (): OnlineStatusType => {\n  const onlineStatus = useToggle(getOnlineStatus());\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  React.useEffect(() => {\n    function handleOnline() {\n      onlineStatus.enable();\n    }\n\n    function handleOffline() {\n      onlineStatus.disable();\n    }\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  return onlineStatus.on;\n};\n\n// Check if browser supports `navigator.onLine`,\n// otherwise, we assume the user is online.\nfunction getOnlineStatus(): OnlineStatusType {\n  return typeof navigator !== \"undefined\" &&\n    typeof navigator.onLine === \"boolean\"\n    ? navigator.onLine\n    : true;\n}\n","import { RefObject, useEffect, useState } from \"react\";\n\nexport const defaultUseIsVisibleConfig = {\n  threshold: 0,\n  root: null,\n  rootMargin: \"0%\",\n  ref: { current: null },\n};\n\nexport function isIntersectionObserverSupported() {\n  return (\n    \"IntersectionObserver\" in window &&\n    \"IntersectionObserverEntry\" in window &&\n    \"intersectionRatio\" in window.IntersectionObserverEntry.prototype\n  );\n}\n\nexport type UseIsVisibleConfigType = IntersectionObserverInit & {\n  ref: RefObject<Element>;\n};\n\nexport type UseIsVisibleReturnType = boolean;\n\nexport function useIsVisible(\n  config: UseIsVisibleConfigType = defaultUseIsVisibleConfig,\n): UseIsVisibleReturnType {\n  const [isVisible, setVisible] = useState<UseIsVisibleReturnType>(false);\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  useEffect(() => {\n    const element = config.ref.current;\n\n    if (!(isIntersectionObserverSupported() && element)) return;\n\n    const observer = new IntersectionObserver(\n      (entry) => setVisible(Boolean(entry[0]?.isIntersecting)),\n      config,\n    );\n\n    observer.observe(element);\n\n    return () => observer.unobserve(element);\n  }, []);\n\n  return isVisible;\n}\n","import { useState } from \"react\";\n\ntype UseItemValueType<T> = T | null;\n\nexport type UseItemReturnType<T> = {\n  clear: VoidFunction;\n  set: (item: NonNullable<UseItemValueType<T>>) => void;\n  toggle: (item: NonNullable<UseItemValueType<T>>) => any;\n  value: UseItemValueType<T>;\n  isDefault: boolean;\n  exists: boolean;\n  compare: (a: UseItemValueType<T>) => boolean;\n};\n\nexport type UseItemConfigType<T> = {\n  defaultItem?: UseItemValueType<T>;\n\n  comparisonFn?: (a: UseItemValueType<T>, b: UseItemValueType<T>) => boolean;\n};\n\nfunction defaultComparisonFn<T>(\n  a: UseItemValueType<T>,\n  b: UseItemValueType<T>\n) {\n  return a === b;\n}\n\nconst defaultItem = null;\n\nexport function useItem<T>(\n  config?: UseItemConfigType<T>\n): UseItemReturnType<T> {\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [item, setItem] = useState<UseItemValueType<T>>(\n    config?.defaultItem ?? defaultItem\n  );\n\n  return {\n    clear: () => setItem(defaultItem),\n\n    set: (newer) => setItem(newer),\n\n    toggle: (newer) =>\n      setItem((current) => {\n        if (current === defaultItem) return newer;\n\n        return comparisonFn(current, newer) ? defaultItem : newer;\n      }),\n\n    value: item,\n\n    isDefault: comparisonFn(item, defaultItem),\n\n    exists: !comparisonFn(item, defaultItem),\n\n    compare: (given: UseItemValueType<T>) => comparisonFn(item, given),\n  };\n}\n","import React from \"react\";\n\nexport enum KeyNameEnum {\n  Enter = \"Enter\",\n  Space = \" \",\n}\n\n// biome-ignore lint: lint/complexity/noBannedTypes\nexport type UseKeyHandlerConfigType = Partial<Record<KeyNameEnum, Function>>;\n\nexport type UseKeyHandlerReturnType = (\n  event: React.KeyboardEvent<HTMLElement>\n) => void;\n\nexport function useKeyHandler(\n  config: UseKeyHandlerConfigType\n): UseKeyHandlerReturnType {\n  const keys = Object.keys(config);\n\n  return function handleKey(event: React.KeyboardEvent<HTMLElement>) {\n    const key = event.key as KeyNameEnum;\n    const executor = config[key];\n\n    if (keys.includes(event.key) && config[key] && executor) {\n      executor();\n    }\n  };\n}\n","import { polishPlurals } from \"polish-plurals\";\nimport type { Falsy, Schema } from \"@bgord/node\";\n\ntype PluralizeWordType = string;\ntype PluralizeValueType = Falsy<number>;\n\nexport type PluralizeOptionsType = {\n  value: PluralizeValueType;\n  singular: PluralizeWordType;\n  plural?: PluralizeWordType;\n  genitive?: PluralizeWordType;\n  language: Schema.LanguageType;\n};\n\nenum PluralizationSupportedLanguages {\n  en = \"en\",\n  pl = \"pl\",\n}\n\nexport function pluralize(options: PluralizeOptionsType): PluralizeWordType {\n  if (options.language === PluralizationSupportedLanguages.en) {\n    const plural = options.plural ?? `${options.singular}s`;\n\n    if (options.value === 1) return options.singular;\n\n    return plural;\n  }\n\n  if (options.language === PluralizationSupportedLanguages.pl) {\n    const value = options.value ?? 1;\n\n    if (value === 1) return options.singular;\n\n    return polishPlurals(\n      options.singular,\n      String(options.plural),\n      String(options.genitive),\n      value\n    );\n  }\n\n  console.warn(\n    `[@bgord/frontend] missing pluralization function for language ${options.language}.`\n  );\n\n  return options.singular;\n}\n","import React from \"react\";\nimport type {\n  TranslationsType,\n  TranslationsKeyType,\n  Schema,\n} from \"@bgord/node\";\nimport { pluralize, PluralizeOptionsType } from \"./pluralize\";\n\ntype TranslationsContextValueType = {\n  translations: TranslationsType;\n  language: Schema.LanguageType;\n};\n\ntype TranslationPlaceholderType = string;\ntype TranslationPlaceholderValueType = string | number;\ntype TranslationVariableType = Record<\n  TranslationPlaceholderType,\n  TranslationPlaceholderValueType\n>;\n\nconst TranslationsContext = React.createContext<TranslationsContextValueType>({\n  translations: {},\n  language: \"en\",\n});\n\ntype TranslationsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: TranslationsContextValueType;\n};\n\nexport function TranslationsContextProvider(\n  props: TranslationsContextPropsType\n) {\n  return (\n    <TranslationsContext.Provider value={props.value}>\n      {props.children}\n    </TranslationsContext.Provider>\n  );\n}\n\nexport function useTranslations() {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      \"useTranslations must be used within the TranslationsContext\"\n    );\n  }\n\n  function translate(\n    key: TranslationsKeyType,\n    variables?: TranslationVariableType\n  ) {\n    const translation = value.translations[key];\n\n    if (!translation) {\n      console.warn(`[@bgord/frontend] missing translation for key: ${key}`);\n      return key;\n    }\n\n    if (!variables) return translation;\n\n    return Object.entries(variables).reduce(\n      (result, [placeholder, value]) =>\n        result.replace(`{{${placeholder}}}`, String(value)),\n      translation\n    );\n  }\n\n  return translate;\n}\n\nexport function useLanguage(): TranslationsContextValueType[\"language\"] {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(\"useLanguage must be used within the TranslationsContext\");\n  }\n\n  return value.language;\n}\n\nexport function usePluralize() {\n  const language = useLanguage();\n\n  return (options: Omit<PluralizeOptionsType, \"language\">) =>\n    pluralize({ ...options, language });\n}\n","import { useState, SetStateAction, Dispatch } from \"react\";\n\nexport type UseListActionsType<T> = {\n  clear: VoidFunction;\n  add: (x: T | T[]) => void;\n  remove: (x: T) => void;\n  toggle: (x: T) => void;\n  isAdded: (x: T) => boolean;\n  update: Dispatch<SetStateAction<T[]>>;\n};\n\nexport type UseListReturnType<T> = [T[], UseListActionsType<T>];\n\nexport type UseListConfigType<T> = {\n  defaultItems?: T[];\n  comparisonFn?: (a: T, b: T) => boolean;\n};\n\nexport function useList<T>(\n  config?: UseListConfigType<T>\n): UseListReturnType<T> {\n  const defaultItems = config?.defaultItems ?? [];\n\n  const defaultComparisonFn = (a: T, b: T) => a === b;\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [items, setItems] = useState<T[]>(defaultItems);\n\n  function clear() {\n    setItems([]);\n  }\n\n  function add(payload: T | T[]) {\n    setItems((items) => {\n      if (Array.isArray(payload)) {\n        return [...items, ...payload];\n      }\n      return [...items, payload];\n    });\n  }\n\n  function remove(item: T) {\n    setItems((items) => items.filter((x) => !comparisonFn(x, item)));\n  }\n\n  function isAdded(item: T) {\n    return items.some((x) => comparisonFn(x, item));\n  }\n\n  function toggle(item: T) {\n    isAdded(item) ? remove(item) : add(item);\n  }\n\n  return [items, { clear, add, remove, toggle, isAdded, update: setItems }];\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { DurationFormatter } from \"../durations\";\n\nexport type UseVideoSrcType = string;\n\ntype VideoDurationType = number;\ntype VideoCurrentTimeType = number;\ntype VideoVolumeType = number;\n\nexport const VIDEO_DEFAULT_VOLUME: VideoVolumeType = 1;\n\nexport enum UseVideoState {\n  initial = \"initial\",\n  ready = \"ready\",\n  playing = \"playing\",\n  paused = \"paused\",\n}\n\nexport type UseVideoReturnType = {\n  props: {\n    video: {\n      src: UseVideoSrcType;\n      onTimeUpdate: (event: Event) => void;\n      onLoadedMetadata: (event: Event) => void;\n      onEnded: (event: Event) => void;\n      controls: false;\n    };\n    player: {\n      min: 0;\n      step: 1;\n      max: VideoDurationType;\n      value: VideoDurationType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n    volume: {\n      min: 0;\n      max: 1;\n      step: 0.01;\n      value: VideoVolumeType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n  };\n  actions: {\n    play: VoidFunction;\n    pause: VoidFunction;\n    mute: VoidFunction;\n    unmute: VoidFunction;\n    reset: VoidFunction;\n    seek: (event: Event) => void;\n    changeVolume: (event: Event) => void;\n    triggerFullscreen: VoidFunction;\n  };\n\n  meta: {\n    state: UseVideoState;\n    isInitial: boolean;\n    isReady: boolean;\n    isPlaying: boolean;\n    isPaused: boolean;\n    matches: (states: UseVideoState[]) => boolean;\n    percentage: {\n      raw: number;\n      formatted: string;\n    };\n    currentTime: {\n      raw: VideoCurrentTimeType;\n      formatted: string;\n    };\n    duration: {\n      raw: VideoDurationType;\n      formatted: string;\n    };\n    volume: {\n      value: VideoVolumeType;\n      raw: number;\n      formatted: string;\n    };\n    muted: boolean;\n  };\n};\n\nexport function useVideo(src: UseVideoSrcType): UseVideoReturnType {\n  const [state, setState] = React.useState<UseVideoState>(\n    UseVideoState.initial\n  );\n\n  const ref = React.useRef<HTMLVideoElement | null>(null);\n\n  const duration = useField<VideoDurationType>(\"duration\", 0);\n  const currentTime = useField<VideoCurrentTimeType>(\"currentTime\", 0);\n  const volume = useField<VideoVolumeType>(\"volume\", VIDEO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (!ref.current) return;\n    ref.current.play();\n    setState(UseVideoState.playing);\n  }\n\n  function pause() {\n    if (!ref.current) return;\n    ref.current.pause();\n    setState(UseVideoState.paused);\n  }\n\n  function reset() {\n    if (!ref.current) return;\n    ref.current.currentTime = 0;\n    ref.current.pause();\n    currentTime.set(0);\n    setState(UseVideoState.paused);\n  }\n\n  function mute() {\n    if (!ref.current) return;\n    ref.current.volume = 0;\n    volume.set(0);\n  }\n\n  function unmute() {\n    if (!ref.current) return;\n    ref.current.volume = VIDEO_DEFAULT_VOLUME;\n    volume.set(VIDEO_DEFAULT_VOLUME);\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (!ref.current) return;\n    ref.current.currentTime = target.valueAsNumber;\n    currentTime.set(target.valueAsNumber);\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(UseVideoState.ready);\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLVideoElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(UseVideoState.paused);\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (!ref.current) return;\n    ref.current.volume = target.valueAsNumber;\n    volume.set(target.valueAsNumber);\n  }\n\n  function triggerFullscreen() {\n    if (!ref.current) return;\n    ref.current.requestFullscreen();\n  }\n\n  return {\n    props: {\n      video: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: {\n      play,\n      pause,\n      mute,\n      unmute,\n      reset,\n      seek,\n      changeVolume,\n      triggerFullscreen,\n    },\n    meta: {\n      state,\n      isInitial: state === UseVideoState.initial,\n      isReady: state === UseVideoState.ready,\n      isPlaying: state === UseVideoState.playing,\n      isPaused: state === UseVideoState.paused,\n      matches: (states: UseVideoState[]) =>\n        states.some((given) => given === state),\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import * as Storage from \"ts-storage\";\n\nexport type SafeLocalStorageKeyType = string;\n\nexport class SafeLocalStorage {\n  static get<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    fallbackValue: T\n  ): T {\n    return Storage.get(key, fallbackValue).value;\n  }\n\n  static set<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    value: T\n  ) {\n    Storage.set(key, value);\n  }\n\n  static clear(key: SafeLocalStorageKeyType) {\n    Storage.remove(key);\n  }\n}\n","import type { TimestampType } from \"@bgord/node/dist/schema\";\nimport type { Falsy } from \"@bgord/node\";\n\nexport type RateLimiterOptionsType = {\n  limitMs: TimestampType;\n};\n\n/** @public */\nexport type RateLimiterResultSuccessType = { allowed: true };\n\nexport type RateLimiterResultErrorType = {\n  allowed: false;\n  remainingMs: TimestampType;\n};\n\n/** @public */\nexport type RateLimiterResultType =\n  | RateLimiterResultSuccessType\n  | RateLimiterResultErrorType;\n\nexport class RateLimiter {\n  private lastInvocationTimestamp: Falsy<TimestampType> = null;\n\n  private options: RateLimiterOptionsType;\n\n  constructor(options: RateLimiterOptionsType) {\n    this.options = options;\n  }\n\n  verify(currentTimestamp: TimestampType): RateLimiterResultType {\n    if (!this.lastInvocationTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    const nextAllowedTimestamp =\n      this.lastInvocationTimestamp + this.options.limitMs;\n\n    if (nextAllowedTimestamp <= currentTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    return {\n      allowed: false,\n      remainingMs: nextAllowedTimestamp - currentTimestamp,\n    };\n  }\n}\n","import { useEffect } from \"react\";\n\nexport function useScrollLock(condition = true): void {\n  useEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const originalHtmlOverflow = window.getComputedStyle(html).overflow;\n\n    // Prevent scrolling on mount\n    html.style.overflow = \"hidden\";\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      html.style.overflow = originalHtmlOverflow;\n    };\n  }, [condition]);\n}\n","// biome-ignore lint: lint/complexity/noBannedTypes\ntype ExecFunctionListType = Function[];\n\nexport function exec(list: ExecFunctionListType) {\n  return function () {\n    for (const item of list) {\n      item();\n    }\n  };\n}\n","import React from \"react\";\n\nimport { useWindowDimensions } from \"../hooks/use-window-dimensions\";\nimport { useToggle } from \"../hooks/use-toggle\";\nimport { useField } from \"../hooks/use-field\";\nimport { exec } from \"../exec\";\n\nfunction Dimensions(props: JSX.IntrinsicElements[\"div\"]) {\n  const dimensions = useWindowDimensions();\n\n  return (\n    <div data-fs=\"12\" {...props}>\n      {dimensions.width} x {dimensions.height}\n    </div>\n  );\n}\n\nfunction Truncates() {\n  const enabled = useToggle();\n  const length = useField(\"length\", 128);\n\n  const [cache, setCache] = React.useState(new Map());\n\n  const handleTruncateClick = () => {\n    const elements = document.querySelectorAll('[data-transform=\"truncate\"]');\n\n    const updatedCache = new Map(cache);\n\n    elements.forEach((element) => {\n      const originalText = element.textContent;\n\n      if (!updatedCache.has(element)) {\n        updatedCache.set(element, originalText);\n        element.textContent = \"x\".repeat(length.value);\n      } else {\n        element.textContent = updatedCache.get(element);\n        updatedCache.delete(element);\n      }\n    });\n\n    setCache(updatedCache);\n  };\n\n  return (\n    <div data-display=\"flex\" data-cross=\"center\" data-gap=\"6\">\n      <label className=\"c-label\" {...length.label.props}>\n        Length\n      </label>\n\n      <input\n        className=\"c-input\"\n        type=\"number\"\n        value={length.value}\n        onChange={(event) => length.set(event.currentTarget.valueAsNumber)}\n        {...length.input.props}\n      />\n      <button\n        className=\"c-button\"\n        data-variant=\"bare\"\n        type=\"button\"\n        onClick={exec([() => handleTruncateClick(), enabled.toggle])}\n      >\n        {enabled.on ? \"Hide truncates\" : \"Expand truncates\"}\n      </button>\n    </div>\n  );\n}\n\nexport const DevTools = { Dimensions, Truncates };\n","import { noop } from \"./noop\";\n\nexport type CopyToClipboardTextType = string;\ntype OnCopyToClipboardFailureType = (error?: unknown) => void;\ntype OnCopyToClipboardSuccessType = VoidFunction;\n\nconst defaultOnCopyToClipboardFailure: OnCopyToClipboardFailureType = (error) =>\n  console.warn(\"Copying to clipboard not supported\");\n\nexport type CopyToClipboardOptionsType = {\n  text: string;\n  onFailure?: OnCopyToClipboardFailureType;\n  onSuccess?: OnCopyToClipboardSuccessType;\n};\n\nexport async function copyToClipboard(options: CopyToClipboardOptionsType) {\n  const onFailure = options.onFailure ?? defaultOnCopyToClipboardFailure;\n  const onSuccess = options.onSuccess ?? noop;\n\n  if (!navigator.clipboard) onFailure();\n\n  try {\n    await navigator.clipboard.writeText(options.text);\n    onSuccess();\n  } catch (error) {\n    onFailure(error);\n  }\n}\n","import type { HourType } from \"@bgord/node/dist/schema\";\n\nimport * as Time from \"./time\";\n\nexport type DateType = Date | number | null | undefined;\n\nexport class DateFormatter {\n  static datetime(date: DateType, defaultValue = \"N/A\"): string {\n    if (!date) return defaultValue;\n\n    return new Date(date).toLocaleString();\n  }\n\n  static monthDay(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const days = DateFormatter._padDatePart(date.getDate());\n    const months = DateFormatter._padDatePart(date.getMonth() + 1);\n\n    return `${days}/${months}`;\n  }\n\n  static form(date: Date | null): string {\n    if (!date) return DateFormatter.form(new Date());\n\n    const year = DateFormatter._padDatePart(date.getFullYear());\n    const month = DateFormatter._padDatePart(date.getMonth() + 1);\n    const day = DateFormatter._padDatePart(date.getDate());\n\n    return `${year}-${month}-${day}`;\n  }\n\n  static clockUTC(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getUTCHours());\n    const minutes = DateFormatter._padDatePart(date.getUTCMinutes());\n    const seconds = DateFormatter._padDatePart(date.getUTCSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static clockLocal(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static countdown(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static formDatetimeLocal(timestamp: number) {\n    const localTimestamp =\n      timestamp - Time.Minutes(new Date().getTimezoneOffset()).ms;\n\n    return new Date(localTimestamp).toISOString().slice(0, 16);\n  }\n\n  static _padDatePart(value: number) {\n    return String(value).padStart(2, \"0\");\n  }\n}\n\nexport class HourFormatter {\n  static convertUtcToLocal(utcHour: HourType) {\n    const timeZoneOffsetInMins = new Date().getTimezoneOffset();\n\n    const utcHourInMins = Time.Hours(utcHour).minutes;\n\n    const localHourInMins = utcHourInMins - timeZoneOffsetInMins;\n    const localHour = (localHourInMins / 60) % 24;\n    const formattedLocalHour = `${String(localHour).padStart(2, \"0\")}:00`;\n\n    return { value: localHour, label: formattedLocalHour };\n  }\n}\n","import type { Schema } from \"@bgord/node\";\n\nexport class ETag {\n  static fromRevision(revision: Schema.RevisionType) {\n    return { \"if-match\": String(revision) };\n  }\n}\n\nexport type WeakETagValueType = string;\n\nexport class WeakETag {\n  static fromRevision(revision: Schema.RevisionType) {\n    return { \"if-match\": `W/${revision}` };\n  }\n}\n","import type { Schema } from \"@bgord/node\";\nimport React from \"react\";\n\nexport type FeatureFlagNameType = string;\n\nexport type FeatureFlagsContextValueType = {\n  flags: Record<FeatureFlagNameType, Schema.FeatureFlagType>;\n};\n\ntype FeatureFlagsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: FeatureFlagsContextValueType[\"flags\"];\n};\n\nconst FeatureFlagsContext = React.createContext<\n  FeatureFlagsContextValueType[\"flags\"]\n>({});\n\nexport function FeatureFlagsContextProvider(\n  props: FeatureFlagsContextPropsType\n) {\n  return (\n    <FeatureFlagsContext.Provider value={props.value}>\n      {props.children}\n    </FeatureFlagsContext.Provider>\n  );\n}\n\nexport function useFeatureFlags() {\n  const value = React.useContext(FeatureFlagsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      \"useFeatureFlags must be used within the FeatureFlagsContext\"\n    );\n  }\n\n  return value;\n}\n\nexport function useFeatureFlag(name: FeatureFlagNameType): boolean {\n  const value = React.useContext(FeatureFlagsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      \"useFeatureFlag must be used within the FeatureFlagsContext\"\n    );\n  }\n\n  return value[name] === \"yes\";\n}\n","export type FilterType = Record<string, unknown> | undefined;\n\nexport class FilterUrl {\n  value: string;\n\n  constructor(url: string, filters?: FilterType) {\n    const nonEmptyFilters = this.getNonEmptyFilters(filters);\n    const query = new URLSearchParams(nonEmptyFilters);\n\n    if (query.toString() === \"\") {\n      this.value = url;\n\n      return;\n    }\n\n    this.value = `${url}?${query.toString()}`;\n  }\n\n  private getNonEmptyFilters(filters: FilterType) {\n    if (filters === undefined) return {};\n\n    return Object.fromEntries(\n      Object.entries(filters).filter(([_key, value]) => value !== undefined)\n    ) as Record<string, string>;\n  }\n}\n","export type PatternConfigType = {\n  min?: number;\n  max?: number;\n  required?: JSX.IntrinsicElements[\"input\"][\"required\"];\n};\n\nexport class Form {\n  static pattern(\n    config: PatternConfigType\n  ): JSX.IntrinsicElements[\"textarea\"] & JSX.IntrinsicElements[\"input\"] {\n    const required = config.required ?? true;\n\n    if (config.min && !config.max)\n      return { pattern: `.{${config.min}}`, required };\n\n    if (config.min && config.max)\n      return { pattern: `.{${config.min},${config.max}}`, required };\n\n    if (!config.min && config.max)\n      return { pattern: `.{,${config.max}}`, required };\n\n    return { pattern: undefined, required };\n  }\n}\n","type ApproximationValueType = number;\ntype ApproximationResultType = number;\ntype ApproximationDecimalPlacesType = number;\n\nexport class Approximation {\n  static float(\n    value: ApproximationValueType,\n    decimalPlaces: ApproximationDecimalPlacesType = 2\n  ): ApproximationResultType {\n    return Number.parseFloat(value.toFixed(decimalPlaces));\n  }\n}\n\ntype MinMaxScalerValueType = number;\n\ntype MinMaxScalerConfigType = {\n  min: MinMaxScalerValueType;\n  max: MinMaxScalerValueType;\n  bound?: {\n    lower: MinMaxScalerValueType;\n    upper: MinMaxScalerValueType;\n  };\n};\n\nexport class MinMaxScaler {\n  private readonly min: MinMaxScalerValueType;\n  private readonly max: MinMaxScalerValueType;\n  private readonly lower: MinMaxScalerValueType;\n  private readonly upper: MinMaxScalerValueType;\n\n  constructor(config: MinMaxScalerConfigType) {\n    const lower = config.bound?.lower ?? 0;\n    const upper = config.bound?.upper ?? 1;\n\n    if (config.max - config.min < 0) {\n      throw new Error(\"Invalid MinMaxScaler min-max config\");\n    }\n\n    if (upper - lower <= 0) {\n      throw new Error(\"Invalid MinMaxScaler bound config\");\n    }\n\n    this.min = config.min;\n    this.max = config.max;\n    this.lower = lower;\n    this.upper = upper;\n  }\n\n  scale(value: MinMaxScalerValueType) {\n    const { min, max, lower, upper } = this;\n\n    if (value < min || value > max) {\n      throw new Error(\"Value out of min/max range\");\n    }\n\n    if (min === max)\n      return {\n        original: value,\n        scaled: (lower + upper) / 2,\n        isMin: value === min,\n        isMax: value === max,\n      };\n\n    const result = ((value - min) / (max - min)) * (upper - lower) + lower;\n\n    return {\n      original: value,\n      scaled: Approximation.float(result, 2),\n      isMin: value === min,\n      isMax: value === max,\n    };\n  }\n\n  descale(scaled: MinMaxScalerValueType) {\n    const { min, max, lower, upper } = this;\n\n    if (scaled < lower || scaled > upper) {\n      throw new Error(\"Scaled value out of bounds\");\n    }\n\n    const result = ((scaled - lower) / (upper - lower)) * (max - min) + min;\n\n    return {\n      original: Approximation.float(result, 2),\n      scaled,\n      isLowerBound: scaled === lower,\n      isUpperBound: scaled === upper,\n    };\n  }\n\n  static getMinMax(values: MinMaxScalerValueType[]) {\n    if (values.length === 0) {\n      throw new Error(\"An empty array supplied\");\n    }\n\n    return { min: Math.min(...values), max: Math.max(...values) };\n  }\n}\n","import type { UseInfiniteQueryResult } from \"react-query\";\nimport type { Paged } from \"@bgord/node\";\n\nexport class Pagination {\n  static empty = { result: [], meta: { exhausted: true } };\n\n  static infinite<T>(infinite: UseInfiniteQueryResult<Paged<T>>): T[] {\n    return (\n      infinite.data?.pages\n        ?.flat()\n        .flatMap((data) => data.result) ?? []\n    );\n  }\n}\n\nexport type { Paged, PageType } from \"@bgord/node\";\n\nexport type PagedMetaType = Paged<unknown>[\"meta\"];\n","export type RhythmBaseType = number;\nexport type RhythmTimesType = number;\n\nconst DEFAULT_BASE_PX = 12;\n\nexport function Rhythm(base: RhythmBaseType = DEFAULT_BASE_PX) {\n  return {\n    times(times: RhythmTimesType) {\n      const result = base * times;\n\n      const dimensions = {\n        height: { height: px(result) },\n        minHeight: { minHeight: px(result) },\n        maxHeight: { maxHeight: px(result) },\n        width: { width: px(result) },\n        minWidth: { minWidth: px(result) },\n        maxWidth: { maxWidth: px(result) },\n        square: { height: px(result), width: px(result) },\n      };\n\n      const style = {\n        height: { style: { height: px(result) } },\n        minHeight: { style: { minHeight: px(result) } },\n        maxHeight: { style: { maxHeight: px(result) } },\n        width: { style: { width: px(result) } },\n        minWidth: { style: { minWidth: px(result) } },\n        maxWidth: { style: { maxWidth: px(result) } },\n        square: { style: { height: px(result), width: px(result) } },\n      };\n\n      return { px: px(result), raw: result, style, ...dimensions };\n    },\n  };\n}\n\nfunction px(number: number) {\n  return `${number}px`;\n}\n","export class Sorts {\n  static updatedAtMostRecent<T extends { updatedAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.descending(a.updatedAt.raw, b.updatedAt.raw);\n  }\n\n  static updatedAtLeastRecent<T extends { updatedAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.ascending(a.updatedAt.raw, b.updatedAt.raw);\n  }\n\n  static createdAtMostRecent<T extends { createdAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.descending(a.createdAt.raw, b.createdAt.raw);\n  }\n\n  static createdAtLeastRecent<T extends { createdAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.ascending(a.createdAt.raw, b.createdAt.raw);\n  }\n\n  static aToZ(a: string, b: string): number {\n    return a.localeCompare(b);\n  }\n\n  static zToA(a: string, b: string): number {\n    return b.localeCompare(a);\n  }\n\n  static ascending(a: number, b: number): number {\n    return a > b ? 1 : 0;\n  }\n\n  static descending(a: number, b: number): number {\n    return a < b ? 1 : 0;\n  }\n}\n","export class ThousandsSeparator {\n  private static DEFAULT_SEPARATOR = ' ';\n\n  static format(\n    value: number,\n    separator = ThousandsSeparator.DEFAULT_SEPARATOR\n  ): string {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\n  }\n}\n","import React from \"react\";\nimport { useList } from \"./hooks/use-list\";\n\nexport type ToastsConfigType = {\n  timeout?: number;\n};\n\nexport type BaseToastType = {\n  id: string;\n  message: string;\n};\n\ntype ToastsContextDataType<ToastType extends BaseToastType = BaseToastType> = [\n  ToastType[],\n  {\n    add: (toast: Omit<ToastType, \"id\">) => void;\n    remove: (toast: ToastType) => void;\n    clear: VoidFunction;\n  }\n];\n\nconst ToastsContext = React.createContext<ToastsContextDataType | undefined>(\n  undefined\n);\n\nexport function ToastsContextProvider(\n  props: { children: JSX.Element | JSX.Element[] } & ToastsConfigType\n) {\n  function useToastsImplementation(): ToastsContextDataType {\n    const timeout = props?.timeout ?? 5000;\n\n    const [toasts, actions] = useList<BaseToastType>({\n      comparisonFn: (a, b) => a.id === b.id,\n    });\n\n    function add(payload: Omit<BaseToastType, \"id\">) {\n      const id = String(Date.now());\n      const toast = { ...payload, id };\n\n      actions.add(toast);\n      setTimeout(() => actions.remove(toast), timeout);\n    }\n\n    return [\n      toasts.toReversed(),\n      { add, remove: actions.remove, clear: actions.clear },\n    ];\n  }\n\n  const [toasts, actions] = useToastsImplementation();\n\n  return (\n    <ToastsContext.Provider value={[toasts, actions]}>\n      {props.children}\n    </ToastsContext.Provider>\n  );\n}\n\nexport function useToastsContext<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const context = React.useContext<ToastsContextDataType<ToastType>>(\n    ToastsContext as unknown as React.Context<ToastsContextDataType<ToastType>>\n  );\n\n  if (context === undefined) {\n    throw new Error(\"useToasts must be used within the ToastsContextProvider\");\n  }\n\n  return context;\n}\n\nexport function useToastTrigger<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const [, actions] = useToastsContext<ToastType>();\n\n  return actions.add;\n}\n","import { ServerError } from \"./server-error\";\n\nexport const API: typeof fetch = (input, init) =>\n  fetch(input, {\n    mode: \"same-origin\",\n    redirect: \"follow\",\n    ...init,\n    headers: {\n      \"Content-Type\": \"application/json\",\n\n      \"time-zone-offset\": new Date().getTimezoneOffset().toString(),\n      ...init?.headers,\n    },\n  })\n    .then(ServerError.extract)\n    .catch(ServerError.handle);\n","import React from \"react\";\n\nimport * as hooks from \"../hooks\";\n\nexport type DialogPropsType = hooks.UseToggleReturnType &\n  JSX.IntrinsicElements[\"dialog\"];\n\nexport function Dialog(props: DialogPropsType) {\n  const { toggle: dialog, rest } = hooks.extractUseToggle(props);\n  const ref = React.useRef<HTMLDialogElement>(null);\n\n  React.useEffect(() => {\n    if (props.on) {\n      // @ts-ignore\n      ref.current?.showModal();\n    } else {\n      // @ts-ignore\n      ref.current?.close();\n    }\n  }, [props.on]);\n\n  hooks.useKeyboardShortcuts({ Escape: dialog.disable });\n  hooks.useAutofocus({ ref, condition: props.on });\n  hooks.useScrollLock(props.on);\n  hooks.useClickOutside(ref, dialog.disable);\n\n  return (\n    <dialog\n      ref={ref}\n      tabIndex={0}\n      data-display={props.on ? \"flex\" : \"none\"}\n      data-direction=\"column\"\n      data-mx=\"auto\"\n      data-p=\"24\"\n      data-position=\"fixed\"\n      data-z=\"2\"\n      data-bg=\"white\"\n      data-br=\"4\"\n      data-bc=\"gray-300\"\n      data-bw=\"1\"\n      data-backdrop=\"black\"\n      {...rest}\n    />\n  );\n}\n","export function LineClamp(lines = 2) {\n  return {\n    \"data-transform\": \"line-clamp\",\n    style: { \"--lines\": lines },\n  };\n}\n","import React from \"react\";\n\nimport { useIsOnline } from \"../hooks\";\n\nexport function OfflineIndicator(props: { children: React.ReactChild }) {\n  const isOnline = useIsOnline();\n\n  if (isOnline) return null;\n\n  return <>{props.children}</>;\n}\n","import React from \"react\";\nimport type { PolymorphicPropsWithoutRef } from \"react-polymorphic-types\";\n\nconst OutboundLinkDefaultElement = \"a\";\n\nexport function OutboundLink<\n  T extends React.ElementType = typeof OutboundLinkDefaultElement\n  // biome-ignore lint: lint/complexity/noBannedTypes\n>(props: PolymorphicPropsWithoutRef<{}, T>) {\n  const { as, ...rest } = props;\n\n  const Element = as || OutboundLinkDefaultElement;\n\n  return <Element target=\"_blank\" rel=\"noreferer noopener\" {...rest} />;\n}\n","import React, { Fragment } from \"react\";\n\nimport { UseFieldReturnType, extractUseField } from \"../hooks/use-field\";\n\nexport function Switch(\n  props: UseFieldReturnType<boolean> &\n    Omit<JSX.IntrinsicElements[\"input\"], \"label\" | \"value\">\n) {\n  const { field, rest } = extractUseField<\n    boolean,\n    Omit<JSX.IntrinsicElements[\"input\"], \"label\" | \"value\">\n  >(props);\n\n  return (\n    <>\n      <input\n        className=\"c-switch-checkbox c-visually-hidden\"\n        type=\"checkbox\"\n        checked={field.value}\n        onChange={(event) => field.set(event.currentTarget.checked)}\n        {...field.input.props}\n        {...rest}\n      />\n\n      <label className=\"c-switch-label\" {...field.label.props}>\n        <div className=\"c-switch-slider\" />\n      </label>\n    </>\n  );\n}\n","import { getSafeWindow } from \"./safe-window\";\n\nexport function isClient() {\n  return !getSafeWindow();\n}\n","import { useWindowDimensions } from \"./use-window-dimensions\";\n\nexport type BreakpointType = number;\n\nexport type UseBreakpointReturnType = boolean;\n\nexport function useBreakpoint(\n  breakpoint: BreakpointType\n): UseBreakpointReturnType {\n  const dimensions = useWindowDimensions();\n  const width = dimensions?.width ?? 0;\n\n  return width <= breakpoint;\n}\n","import { useState } from \"react\";\n\nexport type UseClientSearchQueryType = string;\n\nexport type UseClientSearchReturnType = {\n  query: UseClientSearchQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: (value: string) => boolean;\n  changed: boolean;\n  unchanged: boolean;\n};\n\nexport function useClientSearch(): UseClientSearchReturnType {\n  const emptyQuery: UseClientSearchQueryType = \"\";\n\n  const [query, setValue] = useState<UseClientSearchQueryType>(emptyQuery);\n\n  function clear() {\n    setValue(emptyQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setValue(event.currentTarget.value);\n  }\n\n  function filterFn(value: string) {\n    if (query === emptyQuery) return true;\n\n    return value?.toLowerCase().includes(query.toLowerCase());\n  }\n\n  return {\n    query,\n    clear,\n    onChange,\n    filterFn,\n    changed: query !== emptyQuery,\n    unchanged: query === emptyQuery,\n  };\n}\n","import React from \"react\";\n\ntype UseDebounceConfigType<T> = { value: T; delayMs: number };\n\nexport function useDebounce<T>(config: UseDebounceConfigType<T>): T {\n  const [debouncedValue, setDebouncedValue] = React.useState<T>(config.value);\n\n  React.useEffect(() => {\n    const timer = setTimeout(\n      () => setDebouncedValue(config.value),\n      config.delayMs\n    );\n\n    return () => clearTimeout(timer);\n  }, [config.value, config.delayMs]);\n\n  return debouncedValue;\n}\n","import { useEffect } from \"react\";\nimport { UseQueryResult } from \"react-query\";\n\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type UseDelayedLoaderConfig = Pick<UseQueryResult, \"isLoading\">;\n\nexport function useDelayedLoader(\n  config: UseDelayedLoaderConfig,\n  delayMs = 500,\n): UseToggleReturnType {\n  const delayedLoader = useToggle();\n  const delayElapsed = useToggle();\n\n  let timeoutId: NodeJS.Timeout;\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  useEffect(() => {\n    timeoutId = setTimeout(delayElapsed.enable, delayMs);\n\n    return () => clearTimeout(timeoutId);\n  }, []);\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  useEffect(() => {\n    if (delayElapsed.off) return;\n    if (config.isLoading) return delayedLoader.enable();\n    return delayedLoader.disable();\n  }, [config.isLoading, delayElapsed.on]);\n\n  return delayedLoader;\n}\n","import { useEffect } from \"react\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport {\n  useToggle,\n  UseToggleConfigType,\n  UseToggleReturnType,\n} from \"./use-toggle\";\n\nexport function useDesignMode(\n  config?: UseToggleConfigType,\n): UseToggleReturnType {\n  const designMode = useToggle(config);\n  const safeWindow = getSafeWindow();\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  useEffect(() => {\n    if (!safeWindow) return;\n\n    safeWindow.document.designMode = designMode.on ? \"on\" : \"off\";\n  }, [designMode.on]);\n\n  return designMode;\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useDisablePullToRefresh(condition = true): void {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overscroll behaviors\n    const originalHtmlOverscrollBehavior =\n      window.getComputedStyle(html).overscrollBehavior;\n    const originalBodyOverflowBehavior =\n      window.getComputedStyle(body).overscrollBehavior;\n\n    // Disable pull to refresh\n    body.style.overscrollBehavior = \"none\";\n    html.style.overscrollBehavior = \"none\";\n\n    // Enable pull to refresh when component unmounts\n    return () => {\n      body.style.overscrollBehavior = originalBodyOverflowBehavior;\n      html.style.overscrollBehavior = originalHtmlOverscrollBehavior;\n    };\n  }, [condition]);\n}\n","import React from \"react\";\n\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n","import { useRef, Ref } from \"react\";\n\nimport { useKeyboardShortcuts } from \"./use-keyboard-shortcuts\";\n\nexport function useFocusKeyboardShortcut(shortcut: string): {\n  ref: Ref<HTMLInputElement>;\n} {\n  const ref = useRef<HTMLInputElement>(null);\n  useKeyboardShortcuts({ [shortcut]: () => ref.current?.focus() });\n\n  return { ref };\n}\n","import React from \"react\";\n\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type UseHoverConfigType = {\n  enabled: boolean;\n};\n\nexport type UseHoverReturnType = {\n  attach: { ref: React.RefObject<any> };\n  isHovering: UseToggleReturnType[\"on\"];\n};\n\nexport function useHover(config?: UseHoverConfigType): UseHoverReturnType {\n  const enabled = config?.enabled ?? true;\n\n  const ref = React.useRef<any>(null);\n  const isHovering = useToggle(false);\n\n  const handleMouseEnter = isHovering.enable;\n  const handleMouseLeave = isHovering.disable;\n\n  // biome-ignore lint: lint/complexity/noForEach\n  React.useEffect(() => {\n    const node = ref.current;\n\n    if (node && enabled) {\n      node.addEventListener(\"mouseenter\", handleMouseEnter);\n      node.addEventListener(\"mouseleave\", handleMouseLeave);\n    }\n\n    return () => {\n      if (node && enabled) {\n        node.removeEventListener(\"mouseenter\", handleMouseEnter);\n        node.removeEventListener(\"mouseleave\", handleMouseLeave);\n      }\n    };\n  }, []);\n\n  return { attach: { ref }, isHovering: isHovering.on && enabled };\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { UseFileReturnType, UseFileState } from \"./use-file\";\nimport {\n  getImageResolution,\n  ImageResolutionType,\n  emptyImageResolution,\n} from \"../get-image-resolution\";\n\nexport function useImageFileResolution(\n  file: UseFileReturnType,\n): ImageResolutionType {\n  const resolution = useField<ImageResolutionType>(\n    \"resolution\",\n    emptyImageResolution,\n  );\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  React.useEffect(() => {\n    async function execute() {\n      if (file.state === UseFileState.selected) {\n        try {\n          const result = await getImageResolution(file.preview);\n\n          return resolution.set(result);\n        } catch (error) {\n          return resolution.clear();\n        }\n      }\n\n      if (\n        [UseFileState.error, UseFileState.idle].includes(file.state) &&\n        resolution.value.width !== null &&\n        resolution.value.height !== null\n      ) {\n        resolution.clear();\n      }\n    }\n\n    execute();\n  }, [file.state, file.data?.name]);\n\n  return resolution.value;\n}\n","import type { LanguageType } from \"@bgord/node/dist/schema\";\nimport Cookies from \"js-cookie\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport { useLanguage } from \"../translations\";\nimport { useClientFilter, UseClientFilterReturnType } from \"./use-client-filter\";\n\nexport function useLanguageSelector(\n  supportedLanguages: Record<LanguageType, LanguageType>\n): UseClientFilterReturnType<LanguageType> {\n  const language = useLanguage();\n\n  return useClientFilter({\n    enum: supportedLanguages,\n    currentQuery: language,\n    name: \"language\",\n    onUpdate: (current, previous) => {\n      const safeWindow = getSafeWindow();\n\n      if (!safeWindow) return;\n\n      if (!(current && previous ) || previous === current) return;\n\n      Cookies.set(\"accept-language\", current);\n      safeWindow.document.location.reload();\n    },\n  });\n}\n","import React from \"react\";\n\nexport type UseLeavingPromptConditionType = boolean;\n\nexport function useLeavingPrompt(\n  condition: UseLeavingPromptConditionType = false\n): void {\n  React.useEffect(() => {\n    if (!condition) return;\n\n    function handler(e: BeforeUnloadEvent) {\n      e.preventDefault();\n    }\n\n    window.addEventListener(\"beforeunload\", handler);\n\n    return () => window.removeEventListener(\"beforeunload\", handler);\n  }, [condition]);\n}\n","import React from \"react\";\n\nexport function useMetaEnterSubmit() {\n  const handleMetaEnterSubmit = (\n    event: React.KeyboardEvent<HTMLTextAreaElement>\n  ) => {\n    if (event.key !== \"Enter\" || !event.metaKey) return;\n\n    event.currentTarget.form?.dispatchEvent(\n      new Event(\"submit\", { cancelable: true })\n    );\n  };\n\n  return { onKeyDown: handleMetaEnterSubmit };\n}\n","import { useField } from \"./use-field\";\nimport { PagedMetaType, PageType } from \"../pagination\";\n\ntype UsePaginationControlType = {\n  active: boolean;\n  disabled: boolean;\n  exists: boolean;\n  go: VoidFunction;\n  value: PageType | undefined;\n};\n\ntype UsePaginationReturnType = {\n  current: PageType;\n  last: PageType;\n\n  controls: {\n    firstPage: UsePaginationControlType;\n    previousPage: UsePaginationControlType;\n    nextPage: UsePaginationControlType;\n    lastPage: UsePaginationControlType;\n  };\n\n  update: (updated: PagedMetaType | null) => void;\n};\n\nexport function usePagination(): UsePaginationReturnType {\n  const meta = useField<PagedMetaType | null>(\"meta\", null);\n\n  const firstPage = 1;\n  const previousPage = meta.value?.previousPage;\n  const nextPage = meta.value?.nextPage;\n  const lastPage = meta.value?.lastPage || firstPage;\n\n  const page = useField(\"page\", firstPage);\n\n  return {\n    current: page.value,\n    last: lastPage,\n\n    controls: {\n      firstPage: {\n        active: !previousPage,\n        disabled: false,\n        exists: true,\n        go: () => page.set(firstPage),\n        value: firstPage,\n      },\n\n      previousPage: {\n        active: false,\n        disabled: !previousPage,\n        exists: Boolean(previousPage),\n        go: () => page.set(previousPage ?? page.value),\n        value: previousPage,\n      },\n\n      nextPage: {\n        active: false,\n        disabled: !nextPage,\n        exists: Boolean(nextPage),\n        go: () => page.set(nextPage ?? page.value),\n        value: nextPage,\n      },\n\n      lastPage: {\n        active: page.value === lastPage,\n        disabled: !nextPage,\n        exists: true,\n        go: () => page.set(lastPage ?? page.value),\n        value: lastPage,\n      },\n    },\n\n    update: (updated) => meta.set(updated),\n  };\n}\n","import * as React from \"react\";\n\nimport {\n  useToggle,\n  UseToggleReturnType,\n  UseToggleValueType,\n} from \"./use-toggle\";\nimport {\n  SafeLocalStorage,\n  SafeLocalStorageKeyType,\n} from \"../safe-local-storage\";\n\nexport type UsePersistentToggleReturnType = UseToggleReturnType & {\n  clear: VoidFunction;\n};\n\nexport function usePersistentToggle(\n  key: SafeLocalStorageKeyType,\n  defaultValue: UseToggleValueType = false\n): UsePersistentToggleReturnType {\n  const storedValue = SafeLocalStorage.get<UseToggleValueType>(\n    key,\n    defaultValue\n  );\n\n  const toggle = useToggle(storedValue);\n\n  React.useEffect(() => SafeLocalStorage.set(key, toggle.on), [key, toggle.on]);\n\n  return { ...toggle, clear: () => SafeLocalStorage.clear(key) };\n}\n","import { useRef } from \"react\";\n\nimport {\n  RateLimiterOptionsType,\n  RateLimiterResultErrorType,\n  RateLimiter,\n} from \"../rate-limiter\";\n\nexport type UseRateLimiterActionType<T> = (...args: T[]) => void;\n\nexport type UseRateLimiterOptionsType<T> = RateLimiterOptionsType & {\n  action: UseRateLimiterActionType<T>;\n  fallback?: (remainingMs: RateLimiterResultErrorType[\"remainingMs\"]) => void;\n};\n\nexport type UseRateLimiterReturnType<T> = UseRateLimiterActionType<T>;\n\nexport function useRateLimiter<T>(\n  options: UseRateLimiterOptionsType<T>\n): UseRateLimiterReturnType<T> {\n  const rateLimiter = useRef<RateLimiter>(new RateLimiter(options));\n\n  return function executor(...args: T[]) {\n    const currentTimestamp = Date.now();\n    const result = rateLimiter.current.verify(currentTimestamp);\n\n    if (result.allowed) {\n      return options.action(...args);\n    }\n\n    return options.fallback?.(result.remainingMs);\n  };\n}\n","import React from \"react\";\n\ntype ReorderingBaseItemType = { id: string };\ntype ReorderingIndexType = number;\ntype ReorderingCorrelationIdType = string;\n\nexport type ReorderingTransferType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType,\n> = {\n  correlationId: ReorderingCorrelationIdType;\n  id: T[\"id\"];\n  item: T;\n  to: ReorderingIndexType;\n};\n\nexport type UseReorderingConfigType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType,\n> = {\n  correlationId: ReorderingCorrelationIdType;\n  initialItems: T[];\n  callback: (transfer: ReorderingTransferType<T>) => void;\n  enabled?: boolean;\n};\n\nexport type UseReorderingReturnType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType,\n> = {\n  items: T[];\n  enabled: boolean;\n  props: {\n    item: (index: ReorderingIndexType) => {\n      onDragOver: (event: React.DragEvent<HTMLElement>) => void;\n    };\n    handle: (index: ReorderingIndexType) => {\n      onDragStart: (event: React.DragEvent<HTMLElement>) => void;\n      onDragEnd: (event: React.DragEvent<HTMLElement>) => void;\n      draggable: UseReorderingConfigType<T>[\"enabled\"];\n    };\n  };\n};\n\nexport function useReordering<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType,\n>(config: UseReorderingConfigType<T>): UseReorderingReturnType<T> {\n  const enabled = config.enabled ?? true;\n\n  const [items, setItems] = React.useState<T[]>(config.initialItems);\n\n  // biome-ignore lint: lint/complexity/noForEach\n  React.useEffect(\n    () => setItems(config.initialItems),\n    [JSON.stringify(config.initialItems)],\n  );\n\n  const draggedItem = React.useRef<T | null>(null);\n\n  const [startIndex, setStartIndex] =\n    React.useState<ReorderingIndexType | null>(null);\n  const [toIndex, setToIndex] = React.useState<ReorderingIndexType | null>(\n    null,\n  );\n\n  function onDragStartFactory(index: ReorderingIndexType) {\n    return function onDragStart(event: React.DragEvent<HTMLElement>) {\n      setStartIndex(index);\n      draggedItem.current = items[index] ?? null;\n\n      if (!event?.dataTransfer || event.currentTarget.parentNode) return;\n\n      event.dataTransfer.effectAllowed = \"move\";\n      event.dataTransfer.setData(\n        \"text/html\",\n        event.currentTarget.parentNode as unknown as string,\n      );\n      event.dataTransfer.setDragImage(\n        event.currentTarget.parentNode as unknown as Element,\n        20,\n        20,\n      );\n    };\n  }\n\n  function onDragOverFactory(index: ReorderingIndexType) {\n    return function onDragOver(event: React.DragEvent<HTMLElement>) {\n      event.preventDefault();\n\n      const draggedOverItem = items[index];\n      setToIndex(index);\n\n      // if the item is dragged over itself, ignore\n      if (draggedItem.current === draggedOverItem || !draggedItem.current) {\n        return;\n      }\n\n      // filter out the currently dragged item\n      // add the dragged item after the dragged over item\n      setItems(\n        items\n          .filter((item) => item !== draggedItem.current)\n          .toSpliced(index, 0, draggedItem.current),\n      );\n    };\n  }\n\n  function onDragEndFactory(index: ReorderingIndexType) {\n    return function onDragEnd(_event: React.DragEvent<HTMLElement>) {\n      if (startIndex !== null && toIndex !== null && startIndex !== toIndex) {\n        config.callback({\n          correlationId: config.correlationId,\n          id: items[index]?.id as T[\"id\"],\n          item: items[index] as T,\n          to: toIndex as ReorderingIndexType,\n        });\n      }\n\n      setStartIndex(null);\n      draggedItem.current = null;\n      setToIndex(null);\n    };\n  }\n\n  const cursor = enabled ? (draggedItem.current ? \"grabbing\" : \"grab\") : \"auto\";\n\n  return {\n    items,\n    enabled,\n    props: {\n      item: (index: ReorderingIndexType) => ({\n        onDragOver: onDragOverFactory(index),\n      }),\n      handle: (index: ReorderingIndexType) => ({\n        onDragStart: onDragStartFactory(index),\n        onDragEnd: onDragEndFactory(index),\n        draggable: enabled,\n        style: { cursor },\n      }),\n    },\n  };\n}\n","import React from \"react\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type ScrollPositionType = number;\n\nexport type UseScrollReturnType = {\n  actions: { goToTop: VoidFunction };\n  position: {\n    value: ScrollPositionType;\n    isInitial: boolean;\n    hasChanged: boolean;\n  };\n  visible: UseToggleReturnType[\"on\"];\n  hidden: UseToggleReturnType[\"off\"];\n};\n\nexport function useScroll(): UseScrollReturnType {\n  const safeWindow = getSafeWindow();\n\n  // Scroll position always set at the top of the page\n  const defaultScrollPosition = 0;\n  const [scrollPosition, setScrollPosition] =\n    React.useState<ScrollPositionType>(defaultScrollPosition);\n\n  // Assuming scrollbar is hidden by default\n  const scrollbarVisibility = useToggle(false);\n\n  function goToTop() {\n    if (!safeWindow) return;\n    safeWindow.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  }\n\n  // biome-ignore lint: lint/correctness/useExhaustiveDependencies\n  React.useLayoutEffect(() => {\n    function measure() {\n      if (!safeWindow) return;\n\n      setScrollPosition(safeWindow?.scrollY);\n\n      // Checking if the viewport (clientHeight) can fully contain\n      // full content height (scrollHeight)\n      if (\n        safeWindow.document.body.clientHeight <\n        safeWindow.document.body.scrollHeight\n      ) {\n        scrollbarVisibility.enable();\n      } else {\n        scrollbarVisibility.disable();\n      }\n    }\n\n    safeWindow?.addEventListener(\"scroll\", measure);\n\n    return () => safeWindow?.removeEventListener(\"scroll\", measure);\n  }, []);\n\n  return {\n    actions: { goToTop },\n    position: {\n      value: scrollPosition,\n      isInitial: scrollPosition === 0,\n      hasChanged: scrollPosition > 0,\n    },\n    visible: scrollbarVisibility.on,\n    hidden: scrollbarVisibility.off,\n  };\n}\n","export type SoundSourceType = string;\n\nexport type UseSoundReturnType = { play: VoidFunction };\n\nexport function useSound(src: SoundSourceType): UseSoundReturnType {\n  const audio = new Audio(src);\n\n  return { play: audio.play.bind(audio) };\n}\n","import {\n  useClientFilter,\n  UseClientFilterConfigType,\n  UseClientFilterReturnType,\n} from \"./use-client-filter\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type UseUrlFilterConfigType<T> = UseClientFilterConfigType<T>;\n\nexport function useUrlFilter<T>(\n  config: UseUrlFilterConfigType<T>\n): UseClientFilterReturnType<T> {\n  const safeWindow = getSafeWindow();\n\n  const currentQuery =\n    new URLSearchParams(safeWindow?.location.search).get(config.name) ??\n    undefined;\n\n  return useClientFilter({\n    onUpdate: (current, previous) => {\n      if (!safeWindow) return;\n\n      const url = new URL(safeWindow.location.toString());\n      const params = new URLSearchParams(url.search);\n\n      if (current === undefined) {\n        params.delete(config.name);\n      } else {\n        params.set(config.name, current);\n      }\n\n      if (current === previous) return;\n\n      if (current !== previous) {\n        url.search = params.toString();\n        history.pushState({}, \"\", url.toString());\n      }\n    },\n    ...config,\n    defaultQuery: config.defaultQuery,\n    currentQuery: currentQuery,\n  });\n}\n"],"names":["ServerError","config","message","_known","this","isServerError","value","Object","hasOwnProperty","extract","response","ok","Promise","resolve","json","then","error","e","reject","handle","payload","DurationFormatter","format","duration","minutes","Math","floor","seconds","String","padStart","useField","name","defaultValue","evaluatedDefaultValue","_useState","useState","setValue","useEffect","set","handleChange","event","currentTarget","clear","label","props","htmlFor","input","id","changed","unchanged","extractUseField","field","rest","_objectWithoutPropertiesLoose","_excluded","UseAudioState","Fields","allUnchanged","fields","every","anyUnchanged","some","anyChanged","clearAll","_step","_iterator","_createForOfIteratorHelperLoose","done","useAutofocus","React","condition","_config$ref$current","ref","current","focus","getSafeWindow","window","useWindowDimensions","width","undefined","height","windowSize","setWindowSize","safeWindow","addEventListener","handleResize","removeEventListener","innerWidth","innerHeight","useClickOutside","onClickOutside","exclude","document","handleClickOutside","_ref$current","contains","target","node","_node$current","usePreviousValue","previousValue","useRef","noop","useClientFilter","defaultQuery","_config$defaultQuery","currentQuery","_config$currentQuery","filterFn","_config$filterFn","query","options","keys","onUpdate","_config$onUpdate","setQuery","previousQuery","onChange","newQuery","isNewQueryInEnum","Boolean","defaultSortFn","Days","hours","ms","Hours","Minutes","Seconds","Time","getCurrentTimestamp","Date","now","UseExpandableListState","UseFileState","useToggle","on","setIsOn","off","enable","disable","toggle","v","controller","extractUseToggle","_props","useKeyboardShortcuts","enabled","_options$enabled","unsubscribeShortcuts","tinykeys","getImageResolution","path","emptyImageResolution","img","createElement","promise","onload","onerror","src","useIsOnline","onlineStatus","navigator","onLine","handleOnline","handleOffline","defaultUseIsVisibleConfig","threshold","root","rootMargin","isIntersectionObserverSupported","IntersectionObserverEntry","prototype","defaultComparisonFn","a","b","KeyNameEnum","PluralizationSupportedLanguages","defaultItem","pluralize","language","en","_options$plural","plural","singular","pl","_options$value","polishPlurals","genitive","console","warn","TranslationsContext","createContext","translations","useLanguage","useContext","Error","useList","defaultItems","_config$defaultItems","comparisonFn","_config$comparisonFn","items","setItems","add","Array","isArray","concat","remove","item","filter","x","isAdded","update","UseVideoState","SafeLocalStorage","get","key","fallbackValue","Storage","RateLimiter","lastInvocationTimestamp","verify","currentTimestamp","allowed","nextAllowedTimestamp","limitMs","remainingMs","useScrollLock","html","querySelector","originalHtmlOverflow","getComputedStyle","overflow","style","exec","list","DevTools","Dimensions","dimensions","Truncates","length","_React$useState","Map","cache","setCache","className","type","valueAsNumber","onClick","elements","querySelectorAll","updatedCache","forEach","element","originalText","textContent","has","repeat","defaultOnCopyToClipboardFailure","DateFormatter","datetime","date","toLocaleString","monthDay","timestamp","_padDatePart","getDate","getMonth","form","getFullYear","clockUTC","getUTCHours","getUTCMinutes","getUTCSeconds","clockLocal","getHours","getMinutes","getSeconds","countdown","formDatetimeLocal","localTimestamp","getTimezoneOffset","toISOString","slice","HourFormatter","convertUtcToLocal","utcHour","timeZoneOffsetInMins","localHour","ETag","fromRevision","revision","WeakETag","FeatureFlagsContext","FilterUrl","url","filters","nonEmptyFilters","getNonEmptyFilters","URLSearchParams","toString","fromEntries","entries","_ref","Form","pattern","required","_config$required","min","max","Approximation","decimalPlaces","Number","parseFloat","toFixed","MinMaxScaler","lower","upper","_config$bound$lower","_config$bound","bound","_config$bound$upper","_config$bound2","_proto","scale","original","scaled","isMin","isMax","descale","isLowerBound","isUpperBound","getMinMax","values","apply","Pagination","infinite","_infinite$data$pages$","_infinite$data","data","_infinite$data$pages","pages","flat","flatMap","result","px","number","empty","meta","exhausted","Sorts","updatedAtMostRecent","descending","updatedAt","raw","updatedAtLeastRecent","ascending","createdAtMostRecent","createdAt","createdAtLeastRecent","aToZ","localeCompare","zToA","ThousandsSeparator","separator","DEFAULT_SEPARATOR","replace","ToastsContext","useToastsContext","context","init","fetch","_extends","mode","redirect","headers","_hooks$extractUseTogg","hooks","dialog","_ref$current2","showModal","close","Escape","tabIndex","Provider","children","lines","as","rel","base","times","minHeight","maxHeight","minWidth","maxWidth","square","_extractUseField","checked","timeout","_useList","actions","_useToastsImplementat","_props$timeout","toReversed","toast","setTimeout","onFailure","_options$onFailure","onSuccess","_options$onSuccess","clipboard","_temp2","writeText","text","_catch","initial","state","setState","currentTime","volume","muted","percentage","round","seek","changeVolume","audio","onTimeUpdate","onLoadedMetadata","ready","onEnded","paused","controls","player","step","onInput","play","playing","pause","mute","unmute","reset","isInitial","isReady","isPlaying","isPaused","matches","states","given","formatted","breakpoint","_dimensions$width","toLowerCase","includes","sortFn","_config$options$state","newSort","isNewSortInEnum","setTimestamp","timer","setInterval","clearInterval","debouncedValue","setDebouncedValue","delayMs","clearTimeout","timeoutId","delayedLoader","delayElapsed","isLoading","designMode","useLayoutEffect","body","originalHtmlOverscrollBehavior","overscrollBehavior","originalBodyOverflowBehavior","title","numberOfExcessiveElements","areThereExcessiveElements","getState","contracted","expanded","displayShowMore","displayShowLess","showMore","showLess","_element","index","maxSize","_config$maxSize","POSITIVE_INFINITY","setKey","_useState2","idle","_useState3","file","setFile","selectFile","files","size","selected","clearFile","preview","useMemo","URL","createObjectURL","isIdle","isSelected","isError","multiple","shortcut","_useKeyboardShortcuts","_config$enabled","isHovering","handleMouseEnter","handleMouseLeave","attach","resolution","_exit2","_temp4","_resolution$set","_resolution$clear","_temp3","execute","_file$data","isVisible","setVisible","observer","IntersectionObserver","entry","_entry$","isIntersecting","observe","unobserve","_config$defaultItem","setItem","newer","isDefault","exists","compare","executor","supportedLanguages","enum","previous","Cookies","location","reload","handler","preventDefault","onKeyDown","metaKey","_event$currentTarget$","dispatchEvent","Event","cancelable","previousPage","_meta$value","nextPage","_meta$value2","lastPage","_meta$value3","page","last","firstPage","active","disabled","go","updated","rateLimiter","action","call","arguments","fallback","initialItems","JSON","stringify","draggedItem","_React$useState2","startIndex","setStartIndex","_React$useState3","toIndex","setToIndex","onDragStartFactory","_items$index","dataTransfer","parentNode","effectAllowed","setData","setDragImage","onDragOverFactory","draggedOverItem","toSpliced","onDragEndFactory","_event","_items$index2","callback","correlationId","to","cursor","onDragOver","onDragStart","onDragEnd","draggable","scrollPosition","setScrollPosition","scrollbarVisibility","measure","scrollY","clientHeight","scrollHeight","goToTop","scrollTo","top","left","behavior","position","hasChanged","visible","hidden","Audio","bind","variables","translation","reduce","_URLSearchParams$get","search","params","history","pushState","video","triggerFullscreen","requestFullscreen"],"mappings":"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"}