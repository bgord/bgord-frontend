{"version":3,"file":"bgord-frontend.umd.js","sources":["../hooks/use-previous-value.ts","../anima.tsx","../server-error.ts","../durations.ts","../hooks/use-field.ts","../hooks/use-audio.ts","../hooks/use-autofocus.ts","../safe-window.ts","../hooks/use-window-dimensions.ts","../hooks/use-click-outside.ts","../noop.ts","../hooks/use-client-filter.ts","../hooks/use-client-sort.ts","../time.ts","../hooks/use-current-timestamp.ts","../hooks/use-expandable-list.ts","../hooks/use-file.ts","../hooks/use-toggle.ts","../hooks/use-keyboard-shortcuts.ts","../get-image-resolution.ts","../hooks/use-is-online.ts","../hooks/use-is-visible.ts","../hooks/use-item.ts","../hooks/use-keyboard-handler.ts","../pluralize.ts","../translations.tsx","../hooks/use-list.ts","../hooks/use-video.ts","../safe-local-storage.ts","../rate-limiter.ts","../hooks/use-scroll-lock.ts","../exec.ts","../components/dev-tools.tsx","../copy-to-clipboard.ts","../dates.ts","../etag.ts","../feature-flags.tsx","../filter-url.ts","../form.ts","../min-max-scaler.ts","../pagination.ts","../rhythm.ts","../sorts.ts","../thousands-separator.ts","../toasts.tsx","../api.ts","../components/dialog.tsx","../line-clamp.ts","../components/offline-indicator.tsx","../components/outbound-link.tsx","../components/switch.tsx","../is-client.ts","../hooks/use-breakpoint.ts","../hooks/use-client-search.ts","../hooks/use-debounce.ts","../hooks/use-delayed-loader.ts","../hooks/use-design-mode.ts","../hooks/use-disable-pull-to-refresh.ts","../hooks/use-document-title.ts","../hooks/use-focus-keyboard-shortcut.ts","../hooks/use-hover.ts","../hooks/use-image-file-resolution.ts","../hooks/use-language-selector.ts","../hooks/use-leaving-prompt.ts","../hooks/use-meta-enter-submit.ts","../hooks/use-pagination.ts","../hooks/use-persistent-toggle.ts","../hooks/use-rate-limiter.ts","../reordering.ts","../hooks/use-scroll.ts","../hooks/use-sound.ts","../hooks/use-url-filter.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport function usePreviousValue<T>(\n  value: T,\n  defaultValue?: T | undefined\n): T | undefined {\n  const previousValue = useRef<T | undefined>(defaultValue);\n\n  useEffect(() => {\n    previousValue.current = value;\n  });\n\n  return previousValue.current;\n}\n","import React from \"react\";\n\nimport { usePreviousValue } from \"./hooks/use-previous-value\";\n\nexport enum AnimaState {\n  appearing = \"appearing\",\n  appeared = \"appeared\",\n  hiding = \"hiding\",\n  hidden = \"hidden\",\n}\n\nexport type AnimaEffectType = string;\n\nexport type AnimaConfigType = {\n  children: JSX.Element;\n\n  visible: boolean;\n  effect: AnimaEffectType;\n\n  duration?: number;\n  isInitial?: boolean;\n};\n\nexport function Anima(props: AnimaConfigType) {\n  const duration = props.duration ?? 300;\n\n  function getInitialState() {\n    if (!props.visible) return AnimaState.hidden;\n    if (props.isInitial) return AnimaState.appeared;\n    return AnimaState.appearing;\n  }\n\n  const [state, setState] = React.useState<AnimaState>(getInitialState);\n  const previousState = usePreviousValue(state);\n\n  React.useEffect(() => {\n    if (props.isInitial) return;\n\n    if (props.visible) {\n      setState(AnimaState.appearing);\n      setTimeout(() => setState(AnimaState.appeared), 100);\n    } else {\n      if (!previousState) return;\n      setState(AnimaState.hiding);\n      setTimeout(() => setState(AnimaState.hidden), duration);\n    }\n  }, [props.visible]);\n\n  if (state === AnimaState.hidden) return null;\n\n  return React.cloneElement(props.children, {\n    \"data-anima\": state,\n    \"data-anima-effect\": props.effect,\n    style: { \"--duration\": `${duration}ms`, ...props.children.props.style },\n  });\n}\n\nexport function getAnimaProps(props: Record<string, any>) {\n  return {\n    \"data-anima\": props[\"data-anima\"] as AnimaState | undefined,\n    \"data-anima-effect\": props[\"data-anima-effect\"] as\n      | AnimaEffectType\n      | undefined,\n    style: props.style as React.CSSProperties,\n  };\n}\n\nexport type AnimaListPropsType = {\n  children: JSX.Element[];\n} & JSX.IntrinsicElements[\"ul\"];\n\nexport function AnimaList(props: AnimaListPropsType) {\n  const { children, ...rest } = props;\n\n  const [isInitial, setIsInitial] = React.useState<boolean>(true);\n\n  React.useEffect(() => setIsInitial(false), []);\n\n  return (\n    <ul {...rest}>\n      {props.children.map((child) => React.cloneElement(child, { isInitial }))}\n    </ul>\n  );\n}\n\nexport type UseAnimaListDirectionType = \"head\" | \"tail\";\n\nexport type UseAnimaListConfigType = {\n  direction?: UseAnimaListDirectionType;\n  duration?: number;\n};\n\nexport type UseAnimaListItemType<T> = { item: T; props: { visible: boolean } };\n\ntype UseAnimaListReturnType<T> = {\n  items: { item: T; props: { visible: boolean } }[];\n  count: number;\n};\n\nexport function useAnimaList<T extends { id: string }>(\n  list: T[],\n  config?: UseAnimaListConfigType\n): UseAnimaListReturnType<T> {\n  const duration = config?.duration ?? 300;\n  const direction = config?.direction ?? \"head\";\n\n  const [officialList, setOfficialList] = React.useState<\n    UseAnimaListItemType<T>[]\n  >(list.map((item) => ({ item, props: { visible: true } })));\n\n  let added: T[] = [];\n\n  for (const item of list) {\n    const wasAdded = !officialList\n      .map((x) => x.item)\n      .some((x) => item.id === x.id);\n\n    if (wasAdded) added.push(item);\n  }\n\n  React.useEffect(() => {\n    if (added.length === 0) return;\n\n    if (direction === \"head\") {\n      setOfficialList((officialList) => [\n        ...added.map((item) => ({ item, props: { visible: true } })),\n        ...officialList,\n      ]);\n    } else {\n      setOfficialList((officialList) => [\n        ...officialList,\n        ...added.map((item) => ({ item, props: { visible: true } })),\n      ]);\n    }\n\n    added = [];\n  }, [added.length, direction]);\n\n  let deleted: T[] = [];\n\n  for (const { item } of officialList) {\n    const wasDeleted = list.every((x) => x.id !== item.id);\n\n    if (wasDeleted) deleted.push(item);\n  }\n\n  React.useEffect(() => {\n    if (deleted.length === 0) return;\n\n    setOfficialList((officialList) =>\n      officialList.map((x) => {\n        const wasDeleted = deleted.some((item) => item.id === x.item.id);\n\n        return wasDeleted ? { ...x, props: { visible: false } } : x;\n      })\n    );\n\n    deleted = [];\n  }, [deleted.length]);\n\n  return {\n    items: officialList.map((item) => {\n      const updated = list.find((y) => y.id === item.item.id);\n      return updated ? { ...item, item: updated } : item;\n    }),\n    count: officialList.filter((x) => x.props.visible).length,\n  };\n}\n","export type ServerErrorConfigType = {\n  message: string;\n};\n\nexport class ServerError {\n  message: ServerErrorConfigType[\"message\"];\n\n  _known = true;\n\n  constructor(config: ServerErrorConfigType) {\n    this.message = config.message;\n  }\n\n  static isServerError(value: unknown): value is ServerError {\n    if (\n      value &&\n      typeof value === \"object\" &&\n      value === Object(value) &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"_known\") &&\n      /* eslint-disable no-prototype-builtins */\n      value.hasOwnProperty(\"message\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  static async extract(response: Response) {\n    if (response.ok) return response;\n\n    const error = await response.json();\n\n    const message = ServerError.isServerError(error)\n      ? error.message\n      : \"app.error.general\";\n\n    throw new ServerError({ message });\n  }\n\n  static async handle(payload: unknown): Promise<Response> {\n    throw new ServerError({\n      message: ServerError.isServerError(payload)\n        ? payload.message\n        : \"app.error.general\",\n    });\n  }\n}\n","export class DurationFormatter {\n  static format(duration: number) {\n    const minutes = Math.floor(duration / 60);\n    const seconds = duration % 60;\n\n    const formattedMinutes = String(minutes).padStart(2, \"0\");\n    const formattedSeconds = String(seconds).padStart(2, \"0\");\n\n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n","import { useEffect, useState, Dispatch, SetStateAction } from \"react\";\n\nexport type UseFieldDefaultValueType<T> = T | (() => T);\nexport type UseFieldNameType = string;\n\nexport type UseFieldReturnType<T> = {\n  value: T;\n  set: Dispatch<SetStateAction<T>>;\n  clear: VoidFunction;\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  label: { props: { htmlFor: UseFieldNameType } };\n  input: { props: { id: UseFieldNameType; name: UseFieldNameType } };\n  changed: boolean;\n  unchanged: boolean;\n};\n\nexport function useField<T>(\n  name: UseFieldNameType,\n  defaultValue: UseFieldDefaultValueType<T>\n): UseFieldReturnType<T> {\n  const evaluatedDefaultValue =\n    // @ts-ignore\n    typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n\n  const [value, setValue] = useState(evaluatedDefaultValue);\n\n  useEffect(() => setValue(evaluatedDefaultValue), [evaluatedDefaultValue]);\n\n  return {\n    value,\n    set: setValue,\n    handleChange: (event: React.ChangeEvent<HTMLInputElement>) =>\n      setValue(event.currentTarget.value),\n    clear: () => setValue(evaluatedDefaultValue),\n    label: { props: { htmlFor: name } },\n    input: { props: { id: name, name: name } },\n    changed: value !== evaluatedDefaultValue,\n    unchanged: value == evaluatedDefaultValue,\n  };\n}\n\nexport function extractUseField<T, X>(\n  props: UseFieldReturnType<T> & X\n): { field: UseFieldReturnType<T>; rest: X } {\n  // prettier-ignore\n  const { value, set, clear, label, input, changed, unchanged, handleChange, ...rest } = props;\n\n  // prettier-ignore\n  return {\n    field: { value, set, clear, label, input, changed, unchanged, handleChange },\n    rest: rest as X,\n  };\n}\n\nexport class Fields {\n  static allUnchanged(fields: { unchanged: boolean }[]): boolean {\n    return fields.every((field) => field.unchanged);\n  }\n\n  static anyUnchanged(fields: { unchanged: boolean }[]): boolean {\n    return fields.some((field) => field.unchanged);\n  }\n\n  static anyChanged(fields: { changed: boolean }[]): boolean {\n    return fields.some((field) => field.changed);\n  }\n\n  static clearAll(fields: { clear: VoidFunction }[]) {\n    return () => fields.forEach((field) => field.clear());\n  }\n}\n","import * as React from \"react\";\n\nimport { DurationFormatter } from \"../durations\";\nimport { useField } from \"./use-field\";\n\nexport type UseAudioSrcType = string;\n\ntype AudioDurationType = number;\ntype AudioCurrentTimeType = number;\ntype AudioVolumeType = number;\n\nexport const AUDIO_DEFAULT_VOLUME: AudioVolumeType = 1;\n\nexport enum UseAudioState {\n  \"initial\" = \"initial\",\n  \"ready\" = \"ready\",\n  \"playing\" = \"playing\",\n  \"paused\" = \"paused\",\n}\n\nexport type UseAudioReturnType = {\n  props: {\n    audio: {\n      src: UseAudioSrcType;\n      onTimeUpdate: (event: Event) => void;\n      onLoadedMetadata: (event: Event) => void;\n      onEnded: (event: Event) => void;\n      controls: false;\n    };\n    player: {\n      min: 0;\n      step: 1;\n      max: AudioDurationType;\n      value: AudioDurationType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n    volume: {\n      min: 0;\n      max: 1;\n      step: 0.01;\n      value: AudioVolumeType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n  };\n  actions: {\n    play: VoidFunction;\n    pause: VoidFunction;\n    mute: VoidFunction;\n    unmute: VoidFunction;\n    reset: VoidFunction;\n    seek: (event: Event) => void;\n    changeVolume: (event: Event) => void;\n  };\n\n  meta: {\n    state: UseAudioState;\n    isInitial: boolean;\n    isReady: boolean;\n    isPlaying: boolean;\n    isPaused: boolean;\n    matches: (states: UseAudioState[]) => boolean;\n    percentage: {\n      raw: number;\n      formatted: string;\n    };\n    currentTime: {\n      raw: AudioCurrentTimeType;\n      formatted: string;\n    };\n    duration: {\n      raw: AudioDurationType;\n      formatted: string;\n    };\n    volume: {\n      value: AudioVolumeType;\n      raw: number;\n      formatted: string;\n    };\n    muted: boolean;\n  };\n};\n\nexport function useAudio(src: UseAudioSrcType): UseAudioReturnType {\n  const [state, setState] = React.useState<UseAudioState>(\n    UseAudioState.initial\n  );\n\n  const ref = React.useRef<HTMLAudioElement | null>(null);\n\n  const duration = useField<AudioDurationType>(\"duration\", 0);\n  const currentTime = useField<AudioCurrentTimeType>(\"currentTime\", 0);\n  const volume = useField<AudioVolumeType>(\"volume\", AUDIO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (ref.current) {\n      ref.current.play();\n      setState(UseAudioState.playing);\n    }\n  }\n\n  function pause() {\n    if (ref.current) {\n      ref.current.pause();\n      setState(UseAudioState.paused);\n    }\n  }\n\n  function reset() {\n    if (ref.current) {\n      ref.current.currentTime = 0;\n      ref.current.pause();\n      currentTime.set(0);\n      setState(UseAudioState.paused);\n    }\n  }\n\n  function mute() {\n    if (ref.current) {\n      ref.current.volume = 0;\n      volume.set(0);\n    }\n  }\n\n  function unmute() {\n    if (ref.current) {\n      ref.current.volume = AUDIO_DEFAULT_VOLUME;\n      volume.set(AUDIO_DEFAULT_VOLUME);\n    }\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.currentTime = target.valueAsNumber;\n      currentTime.set(target.valueAsNumber);\n    }\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLAudioElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(UseAudioState.ready);\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLAudioElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(UseAudioState.paused);\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (ref.current) {\n      ref.current.volume = target.valueAsNumber;\n      volume.set(target.valueAsNumber);\n    }\n  }\n\n  return {\n    props: {\n      audio: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: { play, pause, mute, unmute, reset, seek, changeVolume },\n    meta: {\n      state,\n      isInitial: state === UseAudioState.initial,\n      isReady: state === UseAudioState.ready,\n      isPlaying: state === UseAudioState.playing,\n      isPaused: state === UseAudioState.paused,\n      matches: (states: UseAudioState[]) =>\n        states.some((given) => given === state),\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import React from \"react\";\n\nexport type UseAutofocusConfigType = {\n  ref: React.RefObject<HTMLElement>;\n  condition: boolean;\n};\n\nexport function useAutofocus(config: UseAutofocusConfigType): void {\n  React.useEffect(() => {\n    if (!config.condition) return;\n\n    config.ref.current?.focus();\n  }, [config.condition]);\n}\n","export function getSafeWindow() {\n  if (typeof window === \"undefined\") return undefined;\n  return window;\n}\n","import { useState, useEffect } from \"react\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type WindowDimensions = {\n  width: number | undefined;\n  height: number | undefined;\n};\n\nexport function useWindowDimensions(): WindowDimensions {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowDimensions>({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    const safeWindow = getSafeWindow();\n\n    if (!safeWindow) return;\n\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: safeWindow?.innerWidth,\n        height: safeWindow?.innerHeight,\n      });\n    }\n\n    // Add event listener\n    safeWindow.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => safeWindow.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import React from \"react\";\n\nexport function useClickOutside(\n  ref: React.RefObject<HTMLElement>,\n  onClickOutside: VoidFunction,\n  exclude?: React.RefObject<HTMLElement>[]\n): void {\n  React.useEffect(() => {\n    if (!ref.current) return;\n\n    function handleClickOutside(event: MouseEvent) {\n      // Check if click event happened outside the `ref`\n      // so the `onClickOutside` callback `may` be fired.\n      if (!ref.current?.contains(event.target as Node)) {\n        // The second check is to check if some `exclude`d node\n        // outside the `ref` node has been clicked.\n        const isExcludedNodeClicked = exclude?.some((node) =>\n          node.current?.contains(event.target as Node)\n        );\n\n        // `onClickOutside` callback is fired if the click event\n        // happened outside both `ref` node and `exclude`d nodes.\n        if (!isExcludedNodeClicked) {\n          onClickOutside();\n        }\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [onClickOutside, ref, exclude]);\n}\n","export function noop() {}\n","import { useState, useEffect } from \"react\";\nimport { usePreviousValue } from \"./use-previous-value\";\nimport { noop } from \"../noop\";\n\nexport type UseClientFilterQueryType = string | undefined;\nexport type UseClientFilterNameType = string;\n\nexport type UseClientFilterConfigType<T> = {\n  name: string;\n  enum: { [key: string]: UseClientFilterQueryType };\n  defaultQuery?: UseClientFilterQueryType;\n  currentQuery?: UseClientFilterQueryType;\n  filterFn?: (value: T) => boolean;\n  onUpdate?: (\n    current: UseClientFilterQueryType,\n    previous: UseClientFilterQueryType\n  ) => void;\n};\n\nexport type UseClientFilterReturnType<T> = {\n  query: UseClientFilterQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: NonNullable<UseClientFilterConfigType<T>[\"filterFn\"]>;\n  options: UseClientFilterConfigType<T>[\"enum\"][0][];\n  onUpdate: UseClientFilterConfigType<T>[\"onUpdate\"];\n  name: UseClientFilterConfigType<T>[\"name\"];\n  changed: boolean;\n  unchanged: boolean;\n  label: { props: { htmlFor: UseClientFilterNameType } };\n  input: {\n    props: { id: UseClientFilterNameType; name: UseClientFilterNameType };\n  };\n};\n\nexport function useClientFilter<T = string>(\n  config: UseClientFilterConfigType<T>\n): UseClientFilterReturnType<T> {\n  const defaultQuery = config.defaultQuery ?? undefined;\n  const currentQuery = config.currentQuery ?? undefined;\n\n  const filterFn = config.filterFn ?? defaultFilterFn;\n  const options = Object.keys(config.enum);\n  const onUpdate = config?.onUpdate ?? noop;\n\n  const [query, setQuery] = useState<UseClientFilterQueryType>(\n    currentQuery ?? defaultQuery\n  );\n  const previousQuery = usePreviousValue(query);\n\n  function clear() {\n    setQuery(defaultQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newQuery = event.currentTarget.value;\n\n    const isNewQueryInEnum = Boolean(config.enum[String(newQuery)]);\n\n    setQuery(isNewQueryInEnum ? newQuery : undefined);\n  }\n\n  function defaultFilterFn(value: T) {\n    if (query === undefined) return true;\n\n    return query === String(value);\n  }\n\n  useEffect(() => onUpdate(query, previousQuery), [previousQuery, query]);\n\n  return {\n    query,\n    clear,\n    onChange,\n    filterFn,\n    options,\n    onUpdate,\n    name: config.name,\n    changed: query !== defaultQuery,\n    unchanged: query === defaultQuery,\n    label: { props: { htmlFor: config.name } },\n    input: { props: { id: config.name, name: config.name } },\n  };\n}\n","import { useField, UseFieldNameType, UseFieldReturnType } from \"./use-field\";\n\nexport type UseClientSortFnType<T> = (a: T, b: T) => number;\n\nexport type UseClientSortReturnType<T> = {\n  sortFn: UseClientSortFnType<T>;\n  options: UseClientSortOptionType[];\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n} & UseFieldReturnType<UseClientSortOptionType>;\n\nexport type UseClientSortOptionType = string;\n\ntype UseClientSortConfigType<T> = {\n  enum: Record<UseClientSortOptionType, UseClientSortOptionType> & {\n    default: UseClientSortOptionType;\n  };\n  options: Record<UseClientSortOptionType, UseClientSortFnType<T>>;\n};\n\nexport const defaultSortFn = () => 0;\n\nexport function useClientSort<T>(\n  name: UseFieldNameType,\n  config: UseClientSortConfigType<T>\n): UseClientSortReturnType<T> {\n  const state = useField<UseClientSortOptionType>(name, config.enum.default);\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const newSort = event.currentTarget.value;\n    const isNewSortInEnum = Boolean(config.enum[String(newSort)]);\n\n    state.set(isNewSortInEnum ? newSort : config.enum.default);\n  }\n\n  if (state.value === config.enum.default) {\n    return {\n      sortFn: defaultSortFn,\n      options: Object.keys(config.options),\n      ...state,\n      handleChange,\n    };\n  }\n  return {\n    sortFn: config.options[state.value] ?? defaultSortFn,\n    options: Object.keys(config.options),\n    ...state,\n    handleChange,\n  };\n}\n","export function Days(value: number) {\n  return {\n    value,\n    hours: value * 24,\n    minutes: value * 24 * 60,\n    seconds: value * 24 * 60 * 60,\n    ms: value * 24 * 60 * 60 * 1000,\n  };\n}\n\nexport function Hours(value: number) {\n  return {\n    value,\n    minutes: value * 60,\n    seconds: value * 60 * 60,\n    ms: value * 60 * 60 * 1000,\n  };\n}\n\nexport function Minutes(value: number) {\n  return { value, seconds: value * 60, ms: value * 60 * 1000 };\n}\n\nexport function Seconds(value: number) {\n  return { value, ms: value * 1000 };\n}\n\nexport const Time = { Days, Hours, Minutes, Seconds };\n","import type { TimestampType } from \"@bgord/node/dist/schema\";\nimport { useState, useEffect } from \"react\";\nimport { Time } from \"../time\";\n\nexport function getCurrentTimestamp(): TimestampType {\n  return Date.now();\n}\n\nexport function useCurrentTimestamp(): TimestampType {\n  const [timestamp, setTimestamp] =\n    useState<TimestampType>(getCurrentTimestamp);\n\n  useEffect(() => {\n    const timer = setInterval(\n      () => setTimestamp(getCurrentTimestamp()),\n      Time.Seconds(1).ms\n    );\n\n    return () => clearInterval(timer);\n  }, []);\n\n  return timestamp;\n}\n","import { useState, useEffect } from \"react\";\n\nexport enum UseExpandableListState {\n  contracted = \"contracted\",\n  expanded = \"expanded\",\n}\n\nexport type UseExpandableListConfigType = { max: number; length: number };\n\nexport type UseExpandableListReturnType = {\n  state: UseExpandableListState;\n  displayShowMore: boolean;\n  displayShowLess: boolean;\n  actions: {\n    showMore: VoidFunction;\n    showLess: VoidFunction;\n  };\n  numberOfExcessiveElements: number;\n  filterFn: (element: unknown, index: number) => void;\n};\n\nexport function useExpandableList(\n  config: UseExpandableListConfigType\n): UseExpandableListReturnType {\n  const numberOfExcessiveElements = config.length - config.max;\n  const areThereExcessiveElements = config.length > config.max;\n\n  function getState() {\n    return areThereExcessiveElements\n      ? UseExpandableListState.contracted\n      : UseExpandableListState.expanded;\n  }\n\n  const [state, setState] = useState<UseExpandableListState>(getState);\n\n  useEffect(() => setState(getState()), [config.length, config.max]);\n\n  function showMore() {\n    if (state === UseExpandableListState.contracted) {\n      setState(UseExpandableListState.expanded);\n    }\n  }\n\n  function showLess() {\n    if (state === UseExpandableListState.expanded) {\n      setState(UseExpandableListState.contracted);\n    }\n  }\n\n  function filterFn(_element: unknown, index: number) {\n    if (state === UseExpandableListState.expanded) return true;\n    return index < config.max;\n  }\n\n  return {\n    state,\n    displayShowMore: state === UseExpandableListState.contracted,\n    displayShowLess:\n      state === UseExpandableListState.expanded && areThereExcessiveElements,\n    actions: {\n      showMore,\n      showLess,\n    },\n    numberOfExcessiveElements,\n    filterFn,\n  };\n}\n","import { useState, useMemo } from \"react\";\n\ntype UseFileNameType = string;\n\nexport type UseFileConfigType = {\n  maxSize?: number;\n};\n\nexport enum UseFileState {\n  \"idle\" = \"idle\",\n  \"selected\" = \"selected\",\n  \"error\" = \"error\",\n}\n\ntype UseFileIdle = {\n  state: UseFileState.idle;\n  matches: (states: UseFileState[]) => boolean;\n  isIdle: true;\n  isSelected: false;\n  isError: false;\n  data: null;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\ntype UseFileSelected = {\n  state: UseFileState.selected;\n  matches: (states: UseFileState[]) => boolean;\n  data: File;\n  isIdle: false;\n  isSelected: true;\n  isError: false;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  preview: ReturnType<typeof URL.createObjectURL> | undefined;\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\ntype UseFileError = {\n  state: UseFileState.error;\n  matches: (states: UseFileState[]) => boolean;\n  data: null;\n  isIdle: false;\n  isSelected: false;\n  isError: true;\n  actions: {\n    selectFile(event: React.ChangeEvent<HTMLInputElement>): File | undefined;\n    clearFile: VoidFunction;\n  };\n  label: { props: { htmlFor: UseFileNameType } };\n  input: {\n    props: {\n      id: UseFileNameType;\n      name: UseFileNameType;\n      multiple: false;\n      key: React.Key;\n    };\n  };\n};\n\nexport type UseFileReturnType = UseFileIdle | UseFileSelected | UseFileError;\n\nexport function useFile(\n  name: UseFileNameType,\n  config?: UseFileConfigType\n): UseFileReturnType {\n  const maxSize = config?.maxSize ?? Infinity;\n\n  const [key, setKey] = useState(0);\n  const [state, setState] = useState<UseFileState>(UseFileState.idle);\n  const [file, setFile] = useState<File | null>(null);\n\n  function selectFile(event: React.ChangeEvent<HTMLInputElement>) {\n    const files = event.currentTarget.files;\n\n    if (!files || !files[0]) return;\n\n    const file = files[0];\n\n    if (file.size > maxSize) {\n      setState(UseFileState.error);\n      return undefined;\n    }\n\n    setFile(file);\n    setState(UseFileState.selected);\n\n    return file;\n  }\n\n  function clearFile() {\n    setKey((key) => key + 1);\n    setFile(null);\n    setState(UseFileState.idle);\n  }\n\n  const preview = useMemo(\n    () => (file ? URL.createObjectURL(file) : undefined),\n    [file]\n  );\n\n  function matches(states: UseFileState[]) {\n    return states.some((given) => given === state);\n  }\n\n  if (state === UseFileState.idle) {\n    return {\n      state,\n      matches,\n      isIdle: true,\n      isSelected: false,\n      isError: false,\n      data: null,\n      actions: { selectFile, clearFile },\n      label: { props: { htmlFor: name } },\n      input: {\n        props: { id: name, name, multiple: false, key },\n      },\n    };\n  }\n\n  if (state === UseFileState.selected) {\n    return {\n      state,\n      matches,\n      data: file as File,\n      isIdle: false,\n      isSelected: true,\n      isError: false,\n      actions: { selectFile, clearFile },\n      preview,\n      label: { props: { htmlFor: name } },\n      input: {\n        props: { id: name, name, multiple: false, key },\n      },\n    };\n  }\n\n  return {\n    state,\n    matches,\n    data: null,\n    isIdle: false,\n    isSelected: false,\n    isError: true,\n    actions: { selectFile, clearFile },\n    label: { props: { htmlFor: name } },\n    input: {\n      props: { id: name, name, multiple: false, key },\n    },\n  };\n}\n","import { useState } from \"react\";\n\nexport type UseToggleValueType = boolean;\n\nexport type UseToggleConfigType = UseToggleValueType;\n\nexport type UseToggleReturnType = {\n  on: UseToggleValueType;\n  off: UseToggleValueType;\n  enable: VoidFunction;\n  disable: VoidFunction;\n  toggle: VoidFunction;\n  props: {\n    controller: {\n      \"aria-expanded\": JSX.IntrinsicElements[\"div\"][\"aria-expanded\"];\n      \"aria-controls\": JSX.IntrinsicElements[\"div\"][\"aria-controls\"];\n    };\n    target: { id: JSX.IntrinsicElements[\"div\"][\"id\"] };\n  };\n};\n\nexport function useToggle(\n  defaultValue: UseToggleConfigType = false,\n  name?: string\n): UseToggleReturnType {\n  const [on, setIsOn] = useState(defaultValue);\n\n  const enable = () => setIsOn(true);\n  const disable = () => setIsOn(false);\n  const toggle = () => setIsOn((v) => !v);\n\n  return {\n    on,\n    off: !on,\n    enable,\n    disable,\n    toggle,\n    props: {\n      controller: {\n        \"aria-expanded\": on ? \"true\" : \"false\",\n        \"aria-controls\": name,\n      },\n      target: { id: name },\n    },\n  };\n}\n\nexport function extractUseToggle<X>(_props: UseToggleReturnType & X): {\n  toggle: UseToggleReturnType;\n  rest: X;\n} {\n  const { on, off, enable, disable, toggle, props, ...rest } = _props;\n\n  return {\n    toggle: { on, off, enable, disable, toggle, props },\n    rest: rest as X,\n  };\n}\n","import React from \"react\";\nimport tinykeys from \"tinykeys\";\n\nexport interface UseKeyboardShortcutsConfigType {\n  [keybinding: string]: (event: KeyboardEvent) => void;\n}\n\nexport type UseKeyboardShortcutsOptionsType = { enabled?: boolean };\n\nexport function useKeyboardShortcuts(\n  config: UseKeyboardShortcutsConfigType,\n  options?: UseKeyboardShortcutsOptionsType\n): void {\n  const enabled = options?.enabled ?? true;\n\n  React.useEffect(() => {\n    if (!enabled) return;\n\n    const unsubscribeShortcuts = tinykeys(window, config);\n\n    return () => unsubscribeShortcuts();\n  }, [config, enabled]);\n}\n","export type ImagePathType = string | undefined;\n\nexport type ImageResolutionType = {\n  width: number | null;\n  height: number | null;\n};\n\nexport const emptyImageResolution: ImageResolutionType = {\n  width: null,\n  height: null,\n};\n\nexport async function getImageResolution(\n  path: ImagePathType\n): Promise<ImageResolutionType> {\n  if (!path) return emptyImageResolution;\n\n  const img = document.createElement(\"img\");\n\n  const promise = new Promise<ImageResolutionType>((resolve, reject) => {\n    img.onload = () => resolve({ width: img.width, height: img.height });\n    img.onerror = reject;\n  });\n\n  img.src = path;\n\n  return promise;\n}\n","import React from \"react\";\nimport { useToggle } from \"./use-toggle\";\n\ntype OnlineStatusType = boolean;\n\nexport const useIsOnline = (): OnlineStatusType => {\n  const onlineStatus = useToggle(getOnlineStatus());\n\n  React.useEffect(() => {\n    function handleOnline() {\n      onlineStatus.enable();\n    }\n\n    function handleOffline() {\n      onlineStatus.disable();\n    }\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  return onlineStatus.on;\n};\n\n// Check if browser supports `navigator.onLine`,\n// otherwise, we assume the user is online.\nfunction getOnlineStatus(): OnlineStatusType {\n  return typeof navigator !== \"undefined\" &&\n    typeof navigator.onLine === \"boolean\"\n    ? navigator.onLine\n    : true;\n}\n","import { RefObject, useEffect, useState } from \"react\";\n\nexport const defaultUseIsVisibleConfig = {\n  threshold: 0,\n  root: null,\n  rootMargin: \"0%\",\n  ref: { current: null },\n};\n\nexport function isIntersectionObserverSupported() {\n  return (\n    \"IntersectionObserver\" in window &&\n    \"IntersectionObserverEntry\" in window &&\n    \"intersectionRatio\" in window.IntersectionObserverEntry.prototype\n  );\n}\n\nexport type UseIsVisibleConfigType = IntersectionObserverInit & {\n  ref: RefObject<Element>;\n};\n\nexport type UseIsVisibleReturnType = boolean;\n\nexport function useIsVisible(\n  config: UseIsVisibleConfigType = defaultUseIsVisibleConfig\n): UseIsVisibleReturnType {\n  const [isVisible, setVisible] = useState<UseIsVisibleReturnType>(false);\n\n  useEffect(() => {\n    const element = config.ref.current;\n\n    if (!isIntersectionObserverSupported() || !element) return;\n\n    const observer = new IntersectionObserver(\n      (entry) => setVisible(Boolean(entry[0]?.isIntersecting)),\n      config\n    );\n\n    observer.observe(element);\n\n    return () => observer.unobserve(element);\n  }, []);\n\n  return isVisible;\n}\n","import { useState } from \"react\";\n\ntype UseItemValueType<T> = T | null;\n\nexport type UseItemReturnType<T> = {\n  clear: VoidFunction;\n  set: (item: NonNullable<UseItemValueType<T>>) => void;\n  toggle: (item: NonNullable<UseItemValueType<T>>) => any;\n  value: UseItemValueType<T>;\n  isDefault: boolean;\n  exists: boolean;\n  compare: (a: UseItemValueType<T>) => boolean;\n};\n\nexport type UseItemConfigType<T> = {\n  defaultItem?: UseItemValueType<T>;\n\n  comparisonFn?: (a: UseItemValueType<T>, b: UseItemValueType<T>) => boolean;\n};\n\nfunction defaultComparisonFn<T>(\n  a: UseItemValueType<T>,\n  b: UseItemValueType<T>\n) {\n  return a === b;\n}\n\nconst defaultItem = null;\n\nexport function useItem<T>(\n  config?: UseItemConfigType<T>\n): UseItemReturnType<T> {\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [item, setItem] = useState<UseItemValueType<T>>(\n    config?.defaultItem ?? defaultItem\n  );\n\n  return {\n    clear: () => setItem(defaultItem),\n\n    set: (newer) => setItem(newer),\n\n    toggle: (newer) =>\n      setItem((current) => {\n        if (current === defaultItem) return newer;\n\n        return comparisonFn(current, newer) ? defaultItem : newer;\n      }),\n\n    value: item,\n\n    isDefault: comparisonFn(item, defaultItem),\n\n    exists: !comparisonFn(item, defaultItem),\n\n    compare: (given: UseItemValueType<T>) => comparisonFn(item, given),\n  };\n}\n","import React from \"react\";\n\nexport enum KeyNameEnum {\n  Enter = \"Enter\",\n  Space = \" \",\n}\n\nexport type UseKeyHandlerConfigType = Partial<Record<KeyNameEnum, Function>>;\n\nexport type UseKeyHandlerReturnType = (\n  event: React.KeyboardEvent<HTMLElement>\n) => void;\n\nexport function useKeyHandler(\n  config: UseKeyHandlerConfigType\n): UseKeyHandlerReturnType {\n  const keys = Object.keys(config);\n\n  return function handleKey(event: React.KeyboardEvent<HTMLElement>) {\n    const key = event.key as KeyNameEnum;\n    const executor = config[key];\n\n    if (keys.includes(event.key) && config[key] && executor) {\n      executor();\n    }\n  };\n}\n","import { polishPlurals } from \"polish-plurals\";\nimport type { Falsy, Schema } from \"@bgord/node\";\n\ntype PluralizeWordType = string;\ntype PluralizeValueType = Falsy<number>;\n\nexport type PluralizeOptionsType = {\n  value: PluralizeValueType;\n  singular: PluralizeWordType;\n  plural?: PluralizeWordType;\n  genitive?: PluralizeWordType;\n  language: Schema.LanguageType;\n};\n\nenum PluralizationSupportedLanguages {\n  en = \"en\",\n  pl = \"pl\",\n}\n\nexport function pluralize(options: PluralizeOptionsType): PluralizeWordType {\n  if (options.language === PluralizationSupportedLanguages.en) {\n    const plural = options.plural ?? `${options.singular}s`;\n\n    if (options.value === 1) return options.singular;\n\n    return plural;\n  }\n\n  if (options.language === PluralizationSupportedLanguages.pl) {\n    const value = options.value ?? 1;\n\n    if (value === 1) return options.singular;\n\n    return polishPlurals(\n      options.singular,\n      String(options.plural),\n      String(options.genitive),\n      value\n    );\n  }\n\n  console.warn(\n    `[@bgord/frontend] missing pluralization function for language ${options.language}.`\n  );\n\n  return options.singular;\n}\n","import React from \"react\";\nimport type {\n  TranslationsType,\n  TranslationsKeyType,\n  Schema,\n} from \"@bgord/node\";\nimport { pluralize, PluralizeOptionsType } from \"./pluralize\";\n\ntype TranslationsContextValueType = {\n  translations: TranslationsType;\n  language: Schema.LanguageType;\n};\n\ntype TranslationPlaceholderType = string;\ntype TranslationPlaceholderValueType = string | number;\ntype TranslationVariableType = Record<\n  TranslationPlaceholderType,\n  TranslationPlaceholderValueType\n>;\n\nconst TranslationsContext = React.createContext<TranslationsContextValueType>({\n  translations: {},\n  language: \"en\",\n});\n\ntype TranslationsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: TranslationsContextValueType;\n};\n\nexport function TranslationsContextProvider(\n  props: TranslationsContextPropsType\n) {\n  return (\n    <TranslationsContext.Provider value={props.value}>\n      {props.children}\n    </TranslationsContext.Provider>\n  );\n}\n\nexport function useTranslations() {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useTranslations must be used within the TranslationsContext`\n    );\n  }\n\n  function translate(\n    key: TranslationsKeyType,\n    variables?: TranslationVariableType\n  ) {\n    const translation = value.translations[key];\n\n    if (!translation) {\n      console.warn(`[@bgord/frontend] missing translation for key: ${key}`);\n      return key;\n    }\n\n    if (!variables) return translation;\n\n    return Object.entries(variables).reduce(\n      (result, [placeholder, value]) =>\n        result.replace(`{{${placeholder}}}`, String(value)),\n      translation\n    );\n  }\n\n  return translate;\n}\n\nexport function useLanguage(): TranslationsContextValueType[\"language\"] {\n  const value = React.useContext(TranslationsContext);\n\n  if (value === undefined) {\n    throw new Error(`useLanguage must be used within the TranslationsContext`);\n  }\n\n  return value.language;\n}\n\nexport function usePluralize() {\n  const language = useLanguage();\n\n  return (options: Omit<PluralizeOptionsType, \"language\">) =>\n    pluralize({ ...options, language });\n}\n","import { useState, SetStateAction, Dispatch } from \"react\";\n\nexport type UseListActionsType<T> = {\n  clear: VoidFunction;\n  add: (x: T | T[]) => void;\n  remove: (x: T) => void;\n  toggle: (x: T) => void;\n  isAdded: (x: T) => boolean;\n  update: Dispatch<SetStateAction<T[]>>;\n};\n\nexport type UseListReturnType<T> = [T[], UseListActionsType<T>];\n\nexport type UseListConfigType<T> = {\n  defaultItems?: T[];\n  comparisonFn?: (a: T, b: T) => boolean;\n};\n\nexport function useList<T>(\n  config?: UseListConfigType<T>\n): UseListReturnType<T> {\n  const defaultItems = config?.defaultItems ?? [];\n\n  const defaultComparisonFn = (a: T, b: T) => a === b;\n  const comparisonFn = config?.comparisonFn ?? defaultComparisonFn;\n\n  const [items, setItems] = useState<T[]>(defaultItems);\n\n  function clear() {\n    setItems([]);\n  }\n\n  function add(payload: T | T[]) {\n    setItems((items) => {\n      if (Array.isArray(payload)) {\n        return [...items, ...payload];\n      }\n      return [...items, payload];\n    });\n  }\n\n  function remove(item: T) {\n    setItems((items) => items.filter((x) => !comparisonFn(x, item)));\n  }\n\n  function isAdded(item: T) {\n    return items.some((x) => comparisonFn(x, item));\n  }\n\n  function toggle(item: T) {\n    isAdded(item) ? remove(item) : add(item);\n  }\n\n  return [items, { clear, add, remove, toggle, isAdded, update: setItems }];\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { DurationFormatter } from \"../durations\";\n\nexport type UseVideoSrcType = string;\n\ntype VideoDurationType = number;\ntype VideoCurrentTimeType = number;\ntype VideoVolumeType = number;\n\nexport const VIDEO_DEFAULT_VOLUME: VideoVolumeType = 1;\n\nexport enum UseVideoState {\n  \"initial\" = \"initial\",\n  \"ready\" = \"ready\",\n  \"playing\" = \"playing\",\n  \"paused\" = \"paused\",\n}\n\nexport type UseVideoReturnType = {\n  props: {\n    video: {\n      src: UseVideoSrcType;\n      onTimeUpdate: (event: Event) => void;\n      onLoadedMetadata: (event: Event) => void;\n      onEnded: (event: Event) => void;\n      controls: false;\n    };\n    player: {\n      min: 0;\n      step: 1;\n      max: VideoDurationType;\n      value: VideoDurationType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n    volume: {\n      min: 0;\n      max: 1;\n      step: 0.01;\n      value: VideoVolumeType;\n      onInput: (event: Event) => void;\n      style: { \"--percentage\": string };\n    };\n  };\n  actions: {\n    play: VoidFunction;\n    pause: VoidFunction;\n    mute: VoidFunction;\n    unmute: VoidFunction;\n    reset: VoidFunction;\n    seek: (event: Event) => void;\n    changeVolume: (event: Event) => void;\n    triggerFullscreen: VoidFunction;\n  };\n\n  meta: {\n    state: UseVideoState;\n    isInitial: boolean;\n    isReady: boolean;\n    isPlaying: boolean;\n    isPaused: boolean;\n    matches: (states: UseVideoState[]) => boolean;\n    percentage: {\n      raw: number;\n      formatted: string;\n    };\n    currentTime: {\n      raw: VideoCurrentTimeType;\n      formatted: string;\n    };\n    duration: {\n      raw: VideoDurationType;\n      formatted: string;\n    };\n    volume: {\n      value: VideoVolumeType;\n      raw: number;\n      formatted: string;\n    };\n    muted: boolean;\n  };\n};\n\nexport function useVideo(src: UseVideoSrcType): UseVideoReturnType {\n  const [state, setState] = React.useState<UseVideoState>(\n    UseVideoState.initial\n  );\n\n  const ref = React.useRef<HTMLVideoElement | null>(null);\n\n  const duration = useField<VideoDurationType>(\"duration\", 0);\n  const currentTime = useField<VideoCurrentTimeType>(\"currentTime\", 0);\n  const volume = useField<VideoVolumeType>(\"volume\", VIDEO_DEFAULT_VOLUME);\n\n  const muted = volume.value === 0;\n\n  const percentage =\n    duration.value === 0\n      ? 0\n      : Math.round((currentTime.value / duration.value) * 100);\n\n  function play() {\n    if (!ref.current) return;\n    ref.current.play();\n    setState(UseVideoState.playing);\n  }\n\n  function pause() {\n    if (!ref.current) return;\n    ref.current.pause();\n    setState(UseVideoState.paused);\n  }\n\n  function reset() {\n    if (!ref.current) return;\n    ref.current.currentTime = 0;\n    ref.current.pause();\n    currentTime.set(0);\n    setState(UseVideoState.paused);\n  }\n\n  function mute() {\n    if (!ref.current) return;\n    ref.current.volume = 0;\n    volume.set(0);\n  }\n\n  function unmute() {\n    if (!ref.current) return;\n    ref.current.volume = VIDEO_DEFAULT_VOLUME;\n    volume.set(VIDEO_DEFAULT_VOLUME);\n  }\n\n  function seek(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (!ref.current) return;\n    ref.current.currentTime = target.valueAsNumber;\n    currentTime.set(target.valueAsNumber);\n  }\n\n  function onLoadedMetadata(event: Event) {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    ref.current = target;\n\n    duration.set(Math.round(target.duration));\n    currentTime.set(target.currentTime);\n    volume.set(target.volume);\n    setState(UseVideoState.ready);\n  }\n\n  function onTimeUpdate(event: Event) {\n    const target = event.target as HTMLVideoElement;\n    currentTime.set(Math.round(target.currentTime));\n  }\n\n  function onEnded() {\n    setState(UseVideoState.paused);\n  }\n\n  function changeVolume(event: Event) {\n    const target = event.currentTarget as HTMLInputElement;\n\n    if (!ref.current) return;\n    ref.current.volume = target.valueAsNumber;\n    volume.set(target.valueAsNumber);\n  }\n\n  function triggerFullscreen() {\n    if (!ref.current) return;\n    ref.current.requestFullscreen();\n  }\n\n  return {\n    props: {\n      video: { src, onTimeUpdate, onLoadedMetadata, onEnded, controls: false },\n      player: {\n        min: 0,\n        step: 1,\n        max: duration.value,\n        value: currentTime.value,\n        onInput: seek,\n        style: { \"--percentage\": `${percentage}%` },\n      },\n      volume: {\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: volume.value,\n        onInput: changeVolume,\n        style: { \"--percentage\": `${Math.floor(volume.value * 100)}%` },\n      },\n    },\n    actions: {\n      play,\n      pause,\n      mute,\n      unmute,\n      reset,\n      seek,\n      changeVolume,\n      triggerFullscreen,\n    },\n    meta: {\n      state,\n      isInitial: state === UseVideoState.initial,\n      isReady: state === UseVideoState.ready,\n      isPlaying: state === UseVideoState.playing,\n      isPaused: state === UseVideoState.paused,\n      matches: (states: UseVideoState[]) =>\n        states.some((given) => given === state),\n      percentage: {\n        raw: percentage,\n        formatted: `${percentage}%`,\n      },\n      currentTime: {\n        raw: currentTime.value,\n        formatted: DurationFormatter.format(currentTime.value),\n      },\n      duration: {\n        raw: duration.value,\n        formatted: DurationFormatter.format(duration.value),\n      },\n      volume: {\n        value: volume.value,\n        raw: Math.floor(volume.value * 100),\n        formatted: `${Math.floor(volume.value * 100)}%`,\n      },\n      muted,\n    },\n  };\n}\n","import * as Storage from \"ts-storage\";\n\nexport type SafeLocalStorageKeyType = string;\n\nexport class SafeLocalStorage {\n  static get<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    fallbackValue: T\n  ): T {\n    return Storage.get(key, fallbackValue).value;\n  }\n\n  static set<T extends Storage.AllowedTypes>(\n    key: SafeLocalStorageKeyType,\n    value: T\n  ) {\n    Storage.set(key, value);\n  }\n\n  static clear(key: SafeLocalStorageKeyType) {\n    Storage.remove(key);\n  }\n}\n","import type { TimestampType } from \"@bgord/node/dist/schema\";\nimport type { Falsy } from \"@bgord/node\";\n\nexport type RateLimiterOptionsType = {\n  limitMs: TimestampType;\n};\n\nexport type RateLimiterResultSuccessType = { allowed: true };\n\nexport type RateLimiterResultErrorType = {\n  allowed: false;\n  remainingMs: TimestampType;\n};\n\nexport type RateLimiterResultType =\n  | RateLimiterResultSuccessType\n  | RateLimiterResultErrorType;\n\nexport class RateLimiter {\n  private lastInvocationTimestamp: Falsy<TimestampType> = null;\n\n  private options: RateLimiterOptionsType;\n\n  constructor(options: RateLimiterOptionsType) {\n    this.options = options;\n  }\n\n  verify(currentTimestamp: TimestampType): RateLimiterResultType {\n    if (!this.lastInvocationTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    const nextAllowedTimestamp =\n      this.lastInvocationTimestamp + this.options.limitMs;\n\n    if (nextAllowedTimestamp <= currentTimestamp) {\n      this.lastInvocationTimestamp = currentTimestamp;\n\n      return { allowed: true };\n    }\n\n    return {\n      allowed: false,\n      remainingMs: nextAllowedTimestamp - currentTimestamp,\n    };\n  }\n}\n","import { useEffect } from \"react\";\n\nexport function useScrollLock(condition = true): void {\n  useEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const originalHtmlOverflow = window.getComputedStyle(html).overflow;\n\n    // Prevent scrolling on mount\n    html.style.overflow = \"hidden\";\n\n    // Re-enable scrolling when component unmounts\n    return () => {\n      html.style.overflow = originalHtmlOverflow;\n    };\n  }, [condition]);\n}\n","type ExecFunctionListType = Function[];\n\nexport function exec(list: ExecFunctionListType) {\n  return function () {\n    list.forEach((item) => item());\n  };\n}\n","import React from \"react\";\n\nimport { useWindowDimensions } from \"../hooks/use-window-dimensions\";\nimport { useToggle } from \"../hooks/use-toggle\";\nimport { useField } from \"../hooks/use-field\";\nimport { exec } from \"../exec\";\n\nfunction Dimensions(props: JSX.IntrinsicElements[\"div\"]) {\n  const dimensions = useWindowDimensions();\n\n  return (\n    <div data-fs=\"12\" {...props}>\n      {dimensions.width} x {dimensions.height}\n    </div>\n  );\n}\n\nfunction Truncates() {\n  const enabled = useToggle();\n  const length = useField(\"length\", 128);\n\n  const [cache, setCache] = React.useState(new Map());\n\n  const handleTruncateClick = () => {\n    const elements = document.querySelectorAll('[data-transform=\"truncate\"]');\n\n    const updatedCache = new Map(cache);\n\n    elements.forEach((element) => {\n      const originalText = element.textContent;\n\n      if (!updatedCache.has(element)) {\n        updatedCache.set(element, originalText);\n        element.textContent = \"x\".repeat(length.value);\n      } else {\n        element.textContent = updatedCache.get(element);\n        updatedCache.delete(element);\n      }\n    });\n\n    setCache(updatedCache);\n  };\n\n  return (\n    <div data-display=\"flex\" data-cross=\"center\" data-gap=\"6\">\n      <label className=\"c-label\" {...length.label.props}>\n        Length\n      </label>\n\n      <input\n        className=\"c-input\"\n        type=\"number\"\n        value={length.value}\n        onChange={(event) => length.set(event.currentTarget.valueAsNumber)}\n        {...length.input.props}\n      />\n      <button\n        className=\"c-button\"\n        data-variant=\"bare\"\n        type=\"button\"\n        onClick={exec([() => handleTruncateClick(), enabled.toggle])}\n      >\n        {enabled.on ? \"Hide truncates\" : \"Expand truncates\"}\n      </button>\n    </div>\n  );\n}\n\nexport const DevTools = { Dimensions, Truncates };\n","import { noop } from \"./noop\";\n\nexport type CopyToClipboardTextType = string;\ntype OnCopyToClipboardFailureType = (error?: unknown) => void;\ntype OnCopyToClipboardSuccessType = VoidFunction;\n\nconst defaultOnCopyToClipboardFailure: OnCopyToClipboardFailureType = (error) =>\n  console.warn(\"Copying to clipboard not supported\");\n\nexport type CopyToClipboardOptionsType = {\n  text: string;\n  onFailure?: OnCopyToClipboardFailureType;\n  onSuccess?: OnCopyToClipboardSuccessType;\n};\n\nexport async function copyToClipboard(options: CopyToClipboardOptionsType) {\n  const onFailure = options.onFailure ?? defaultOnCopyToClipboardFailure;\n  const onSuccess = options.onSuccess ?? noop;\n\n  if (!navigator.clipboard) onFailure();\n\n  try {\n    await navigator.clipboard.writeText(options.text);\n    onSuccess();\n  } catch (error) {\n    onFailure(error);\n  }\n}\n","import type { HourType } from \"@bgord/node/dist/schema\";\n\nimport * as Time from \"./time\";\n\nexport type DateType = Date | number | null | undefined;\n\nexport class DateFormatter {\n  static datetime(date: DateType, defaultValue = \"N/A\"): string {\n    if (!date) return defaultValue;\n\n    return new Date(date).toLocaleString();\n  }\n\n  static monthDay(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const days = DateFormatter._padDatePart(date.getDate());\n    const months = DateFormatter._padDatePart(date.getMonth() + 1);\n\n    return `${days}/${months}`;\n  }\n\n  static form(date: Date | null): string {\n    if (!date) return DateFormatter.form(new Date());\n\n    const year = DateFormatter._padDatePart(date.getFullYear());\n    const month = DateFormatter._padDatePart(date.getMonth() + 1);\n    const day = DateFormatter._padDatePart(date.getDate());\n\n    return `${year}-${month}-${day}`;\n  }\n\n  static clockUTC(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getUTCHours());\n    const minutes = DateFormatter._padDatePart(date.getUTCMinutes());\n    const seconds = DateFormatter._padDatePart(date.getUTCSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static clockLocal(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static countdown(timestamp: number) {\n    const date = new Date(timestamp);\n\n    const hours = DateFormatter._padDatePart(date.getHours());\n    const minutes = DateFormatter._padDatePart(date.getMinutes());\n    const seconds = DateFormatter._padDatePart(date.getSeconds());\n\n    return `${hours}:${minutes}:${seconds}`;\n  }\n\n  static formDatetimeLocal(timestamp: number) {\n    const localTimestamp =\n      timestamp - Time.Minutes(new Date().getTimezoneOffset()).ms;\n\n    return new Date(localTimestamp).toISOString().slice(0, 16);\n  }\n\n  static _padDatePart(value: number) {\n    return String(value).padStart(2, \"0\");\n  }\n}\n\nexport class HourFormatter {\n  static convertUtcToLocal(utcHour: HourType) {\n    const timeZoneOffsetInMins = new Date().getTimezoneOffset();\n\n    const utcHourInMins = Time.Hours(utcHour).minutes;\n\n    const localHourInMins = utcHourInMins - timeZoneOffsetInMins;\n    const localHour = (localHourInMins / 60) % 24;\n    const formattedLocalHour = `${String(localHour).padStart(2, \"0\")}:00`;\n\n    return { value: localHour, label: formattedLocalHour };\n  }\n}\n","import type { Schema } from \"@bgord/node\";\n\nexport class ETag {\n  static fromRevision(revision: Schema.RevisionType) {\n    return { \"if-match\": String(revision) };\n  }\n}\n\nexport type WeakETagValueType = string;\n\nexport class WeakETag {\n  static fromRevision(revision: Schema.RevisionType) {\n    return { \"if-match\": `W/${revision}` };\n  }\n}\n","import type { Schema } from \"@bgord/node\";\nimport React from \"react\";\n\nexport type FeatureFlagNameType = string;\n\nexport type FeatureFlagsContextValueType = {\n  flags: Record<FeatureFlagNameType, Schema.FeatureFlagType>;\n};\n\ntype FeatureFlagsContextPropsType = {\n  children: JSX.Element | JSX.Element[];\n  value: FeatureFlagsContextValueType[\"flags\"];\n};\n\nconst FeatureFlagsContext = React.createContext<\n  FeatureFlagsContextValueType[\"flags\"]\n>({});\n\nexport function FeatureFlagsContextProvider(\n  props: FeatureFlagsContextPropsType\n) {\n  return (\n    <FeatureFlagsContext.Provider value={props.value}>\n      {props.children}\n    </FeatureFlagsContext.Provider>\n  );\n}\n\nexport function useFeatureFlags() {\n  const value = React.useContext(FeatureFlagsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useFeatureFlags must be used within the FeatureFlagsContext`\n    );\n  }\n\n  return value;\n}\n\nexport function useFeatureFlag(name: FeatureFlagNameType): boolean {\n  const value = React.useContext(FeatureFlagsContext);\n\n  if (value === undefined) {\n    throw new Error(\n      `useFeatureFlag must be used within the FeatureFlagsContext`\n    );\n  }\n\n  return value[name] === \"yes\";\n}\n","export type FilterType = Record<string, unknown> | undefined;\n\nexport class FilterUrl {\n  value: string;\n\n  constructor(url: string, filters?: FilterType) {\n    const nonEmptyFilters = this.getNonEmptyFilters(filters);\n    const query = new URLSearchParams(nonEmptyFilters);\n\n    if (query.toString() === \"\") {\n      this.value = url;\n\n      return;\n    }\n\n    this.value = `${url}?${query.toString()}`;\n  }\n\n  private getNonEmptyFilters(filters: FilterType) {\n    if (filters === undefined) return {};\n\n    return Object.fromEntries(\n      Object.entries(filters).filter(([_key, value]) => value !== undefined)\n    ) as Record<string, string>;\n  }\n}\n","export type PatternConfigType = {\n  min?: number;\n  max?: number;\n  required?: JSX.IntrinsicElements[\"input\"][\"required\"];\n};\n\nexport class Form {\n  static pattern(\n    config: PatternConfigType\n  ): JSX.IntrinsicElements[\"textarea\"] & JSX.IntrinsicElements[\"input\"] {\n    const required = config.required ?? true;\n\n    if (config.min && !config.max)\n      return { pattern: `.{${config.min}}`, required };\n\n    if (config.min && config.max)\n      return { pattern: `.{${config.min},${config.max}}`, required };\n\n    if (!config.min && config.max)\n      return { pattern: `.{,${config.max}}`, required };\n\n    return { pattern: undefined, required };\n  }\n}\n","type ApproximationValueType = number;\ntype ApproximationResultType = number;\ntype ApproximationDecimalPlacesType = number;\n\nexport class Approximation {\n  static float(\n    value: ApproximationValueType,\n    decimalPlaces: ApproximationDecimalPlacesType = 2\n  ): ApproximationResultType {\n    return parseFloat(value.toFixed(decimalPlaces));\n  }\n}\n\ntype MinMaxScalerValueType = number;\n\ntype MinMaxScalerConfigType = {\n  min: MinMaxScalerValueType;\n  max: MinMaxScalerValueType;\n  bound?: {\n    lower: MinMaxScalerValueType;\n    upper: MinMaxScalerValueType;\n  };\n};\n\nexport class MinMaxScaler {\n  private readonly min: MinMaxScalerValueType;\n  private readonly max: MinMaxScalerValueType;\n  private readonly lower: MinMaxScalerValueType;\n  private readonly upper: MinMaxScalerValueType;\n\n  constructor(config: MinMaxScalerConfigType) {\n    const lower = config.bound?.lower ?? 0;\n    const upper = config.bound?.upper ?? 1;\n\n    if (config.max - config.min < 0) {\n      throw new Error(\"Invalid MinMaxScaler min-max config\");\n    }\n\n    if (upper - lower <= 0) {\n      throw new Error(\"Invalid MinMaxScaler bound config\");\n    }\n\n    this.min = config.min;\n    this.max = config.max;\n    this.lower = lower;\n    this.upper = upper;\n  }\n\n  scale(value: MinMaxScalerValueType) {\n    const { min, max, lower, upper } = this;\n\n    if (value < min || value > max) {\n      throw new Error(\"Value out of min/max range\");\n    }\n\n    if (min === max)\n      return {\n        original: value,\n        scaled: (lower + upper) / 2,\n        isMin: value === min,\n        isMax: value === max,\n      };\n\n    const result = ((value - min) / (max - min)) * (upper - lower) + lower;\n\n    return {\n      original: value,\n      scaled: Approximation.float(result, 2),\n      isMin: value === min,\n      isMax: value === max,\n    };\n  }\n\n  descale(scaled: MinMaxScalerValueType) {\n    const { min, max, lower, upper } = this;\n\n    if (scaled < lower || scaled > upper) {\n      throw new Error(\"Scaled value out of bounds\");\n    }\n\n    const result = ((scaled - lower) / (upper - lower)) * (max - min) + min;\n\n    return {\n      original: Approximation.float(result, 2),\n      scaled,\n      isLowerBound: scaled === lower,\n      isUpperBound: scaled === upper,\n    };\n  }\n\n  static getMinMax(values: MinMaxScalerValueType[]) {\n    if (values.length === 0) {\n      throw new Error(\"An empty array supplied\");\n    }\n\n    return { min: Math.min(...values), max: Math.max(...values) };\n  }\n}\n","import type { UseInfiniteQueryResult } from \"react-query\";\nimport type { Paged } from \"@bgord/node\";\n\nexport class Pagination {\n  static empty = { result: [], meta: { exhausted: true } };\n\n  static infinite<T>(infinite: UseInfiniteQueryResult<Paged<T>>): T[] {\n    return (\n      infinite.data?.pages\n        ?.flat()\n        .map((data) => data.result)\n        .flat() ?? []\n    );\n  }\n}\n\nexport type { Paged, PageType } from \"@bgord/node\";\n\nexport type PagedMetaType = Paged<unknown>[\"meta\"];\n","export type RhythmBaseType = number;\nexport type RhythmTimesType = number;\n\nconst DEFAULT_BASE_PX = 12;\n\nexport function Rhythm(base: RhythmBaseType = DEFAULT_BASE_PX) {\n  return {\n    times(times: RhythmTimesType) {\n      const result = base * times;\n\n      const dimensions = {\n        height: { height: px(result) },\n        minHeight: { minHeight: px(result) },\n        maxHeight: { maxHeight: px(result) },\n        width: { width: px(result) },\n        minWidth: { minWidth: px(result) },\n        maxWidth: { maxWidth: px(result) },\n        square: { height: px(result), width: px(result) },\n      };\n\n      const style = {\n        height: { style: { height: px(result) } },\n        minHeight: { style: { minHeight: px(result) } },\n        maxHeight: { style: { maxHeight: px(result) } },\n        width: { style: { width: px(result) } },\n        minWidth: { style: { minWidth: px(result) } },\n        maxWidth: { style: { maxWidth: px(result) } },\n        square: { style: { height: px(result), width: px(result) } },\n      };\n\n      return { px: px(result), raw: result, style, ...dimensions };\n    },\n  };\n}\n\nfunction px(number: number) {\n  return `${number}px`;\n}\n","export class Sorts {\n  static updatedAtMostRecent<T extends { updatedAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.descending(a.updatedAt.raw, b.updatedAt.raw);\n  }\n\n  static updatedAtLeastRecent<T extends { updatedAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.ascending(a.updatedAt.raw, b.updatedAt.raw);\n  }\n\n  static createdAtMostRecent<T extends { createdAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.descending(a.createdAt.raw, b.createdAt.raw);\n  }\n\n  static createdAtLeastRecent<T extends { createdAt: { raw: number } }>(\n    a: T,\n    b: T\n  ): number {\n    return Sorts.ascending(a.createdAt.raw, b.createdAt.raw);\n  }\n\n  static aToZ(a: string, b: string): number {\n    return a.localeCompare(b);\n  }\n\n  static zToA(a: string, b: string): number {\n    return b.localeCompare(a);\n  }\n\n  static ascending(a: number, b: number): number {\n    return a > b ? 1 : 0;\n  }\n\n  static descending(a: number, b: number): number {\n    return a < b ? 1 : 0;\n  }\n}\n","export class ThousandsSeparator {\n  private static DEFAULT_SEPARATOR = ' ';\n\n  static format(\n    value: number,\n    separator = ThousandsSeparator.DEFAULT_SEPARATOR\n  ): string {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\n  }\n}\n","import React from \"react\";\nimport { useList } from \"./hooks/use-list\";\n\nexport type ToastsConfigType = {\n  timeout?: number;\n};\n\nexport type BaseToastType = {\n  id: string;\n  message: string;\n};\n\ntype ToastsContextDataType<ToastType extends BaseToastType = BaseToastType> = [\n  ToastType[],\n  {\n    add: (toast: Omit<ToastType, \"id\">) => void;\n    remove: (toast: ToastType) => void;\n    clear: VoidFunction;\n  }\n];\n\nconst ToastsContext = React.createContext<ToastsContextDataType | undefined>(\n  undefined\n);\n\nexport function ToastsContextProvider(\n  props: { children: JSX.Element | JSX.Element[] } & ToastsConfigType\n) {\n  function useToastsImplementation(): ToastsContextDataType {\n    const timeout = props?.timeout ?? 5000;\n\n    const [toasts, actions] = useList<BaseToastType>({\n      comparisonFn: (a, b) => a.id === b.id,\n    });\n\n    function add(payload: Omit<BaseToastType, \"id\">) {\n      const id = String(Date.now());\n      const toast = { ...payload, id };\n\n      actions.add(toast);\n      setTimeout(() => actions.remove(toast), timeout);\n    }\n\n    return [\n      toasts.toReversed(),\n      { add, remove: actions.remove, clear: actions.clear },\n    ];\n  }\n\n  const [toasts, actions] = useToastsImplementation();\n\n  return (\n    <ToastsContext.Provider value={[toasts, actions]}>\n      {props.children}\n    </ToastsContext.Provider>\n  );\n}\n\nexport function useToastsContext<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const context = React.useContext<ToastsContextDataType<ToastType>>(\n    ToastsContext as unknown as React.Context<ToastsContextDataType<ToastType>>\n  );\n\n  if (context === undefined) {\n    throw new Error(`useToasts must be used within the ToastsContextProvider`);\n  }\n\n  return context;\n}\n\nexport function useToastTrigger<\n  ToastType extends BaseToastType = BaseToastType\n>() {\n  const [, actions] = useToastsContext<ToastType>();\n\n  return actions.add;\n}\n","import { ServerError } from \"./server-error\";\n\nexport const API: typeof fetch = (input, init) =>\n  fetch(input, {\n    mode: \"same-origin\",\n    redirect: \"follow\",\n    ...init,\n    headers: {\n      \"Content-Type\": \"application/json\",\n\n      \"time-zone-offset\": new Date().getTimezoneOffset().toString(),\n      ...init?.headers,\n    },\n  })\n    .then(ServerError.extract)\n    .catch(ServerError.handle);\n","import React from \"react\";\n\nimport * as hooks from \"../hooks\";\n\nexport type DialogPropsType = hooks.UseToggleReturnType &\n  JSX.IntrinsicElements[\"dialog\"];\n\nexport function Dialog(props: DialogPropsType) {\n  const { toggle: dialog, rest } = hooks.extractUseToggle(props);\n  const ref = React.useRef<HTMLDialogElement>(null);\n\n  React.useEffect(() => {\n    if (props.on) {\n      // @ts-ignore\n      ref.current?.showModal();\n    } else {\n      // @ts-ignore\n      ref.current?.close();\n    }\n  }, [props.on]);\n\n  hooks.useKeyboardShortcuts({ Escape: dialog.disable });\n  hooks.useAutofocus({ ref, condition: props.on });\n  hooks.useScrollLock(props.on);\n  hooks.useClickOutside(ref, dialog.disable);\n\n  return (\n    <dialog\n      ref={ref}\n      tabIndex={0}\n      data-display={props.on ? \"flex\" : \"none\"}\n      data-direction=\"column\"\n      data-mx=\"auto\"\n      data-p=\"24\"\n      data-position=\"fixed\"\n      data-z=\"2\"\n      data-bg=\"white\"\n      data-br=\"4\"\n      data-bc=\"gray-300\"\n      data-bw=\"1\"\n      data-backdrop=\"black\"\n      {...rest}\n    />\n  );\n}\n","export function LineClamp(lines: number = 2) {\n  return {\n    \"data-transform\": \"line-clamp\",\n    style: { \"--lines\": lines },\n  };\n}\n","import React from \"react\";\n\nimport { useIsOnline } from \"../hooks\";\n\nexport function OfflineIndicator(props: { children: React.ReactChild }) {\n  const isOnline = useIsOnline();\n\n  if (isOnline) return null;\n\n  return <>{props.children}</>;\n}\n","import React from \"react\";\nimport type { PolymorphicPropsWithoutRef } from \"react-polymorphic-types\";\n\nconst OutboundLinkDefaultElement = \"a\";\n\nexport function OutboundLink<\n  T extends React.ElementType = typeof OutboundLinkDefaultElement\n>(props: PolymorphicPropsWithoutRef<{}, T>) {\n  const { as, ...rest } = props;\n\n  const Element = as || OutboundLinkDefaultElement;\n\n  return <Element target=\"_blank\" rel=\"noreferer noopener\" {...rest} />;\n}\n","import React, { Fragment } from \"react\";\n\nimport { UseFieldReturnType, extractUseField } from \"../hooks/use-field\";\n\nexport function Switch(\n  props: UseFieldReturnType<boolean> &\n    Omit<JSX.IntrinsicElements[\"input\"], \"label\" | \"value\">\n) {\n  const { field, rest } = extractUseField<\n    boolean,\n    Omit<JSX.IntrinsicElements[\"input\"], \"label\" | \"value\">\n  >(props);\n\n  return (\n    <Fragment>\n      <input\n        className=\"c-switch-checkbox c-visually-hidden\"\n        type=\"checkbox\"\n        checked={field.value}\n        onChange={(event) => field.set(event.currentTarget.checked)}\n        {...field.input.props}\n        {...rest}\n      />\n\n      <label className=\"c-switch-label\" {...field.label.props}>\n        <div className=\"c-switch-slider\"></div>\n      </label>\n    </Fragment>\n  );\n}\n","import { getSafeWindow } from \"./safe-window\";\n\nexport function isClient() {\n  return !getSafeWindow();\n}\n","import { useWindowDimensions } from \"./use-window-dimensions\";\n\nexport type BreakpointType = number;\n\nexport type UseBreakpointReturnType = boolean;\n\nexport function useBreakpoint(\n  breakpoint: BreakpointType\n): UseBreakpointReturnType {\n  const dimensions = useWindowDimensions();\n  const width = dimensions?.width ?? 0;\n\n  return width <= breakpoint;\n}\n","import { useState } from \"react\";\n\nexport type UseClientSearchQueryType = string;\n\nexport type UseClientSearchReturnType = {\n  query: UseClientSearchQueryType;\n  clear: VoidFunction;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterFn: (value: string) => boolean;\n  changed: boolean;\n  unchanged: boolean;\n};\n\nexport function useClientSearch(): UseClientSearchReturnType {\n  const emptyQuery: UseClientSearchQueryType = \"\";\n\n  const [query, setValue] = useState<UseClientSearchQueryType>(emptyQuery);\n\n  function clear() {\n    setValue(emptyQuery);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setValue(event.currentTarget.value);\n  }\n\n  function filterFn(value: string) {\n    if (query === emptyQuery) return true;\n\n    return value?.toLowerCase().includes(query.toLowerCase());\n  }\n\n  return {\n    query,\n    clear,\n    onChange,\n    filterFn,\n    changed: query !== emptyQuery,\n    unchanged: query === emptyQuery,\n  };\n}\n","import React from \"react\";\n\ntype UseDebounceConfigType<T> = { value: T; delayMs: number };\n\nexport function useDebounce<T>(config: UseDebounceConfigType<T>): T {\n  const [debouncedValue, setDebouncedValue] = React.useState<T>(config.value);\n\n  React.useEffect(() => {\n    const timer = setTimeout(\n      () => setDebouncedValue(config.value),\n      config.delayMs\n    );\n\n    return () => clearTimeout(timer);\n  }, [config.value, config.delayMs]);\n\n  return debouncedValue;\n}\n","import { useEffect } from \"react\";\nimport { UseQueryResult } from \"react-query\";\n\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type UseDelayedLoaderConfig = Pick<UseQueryResult, \"isLoading\">;\n\nexport function useDelayedLoader(\n  config: UseDelayedLoaderConfig,\n  delayMs = 500\n): UseToggleReturnType {\n  const delayedLoader = useToggle();\n  const delayElapsed = useToggle();\n\n  let timeoutId: NodeJS.Timeout;\n\n  useEffect(() => {\n    timeoutId = setTimeout(delayElapsed.enable, delayMs);\n\n    return () => clearTimeout(timeoutId);\n  }, []);\n\n  useEffect(() => {\n    if (delayElapsed.off) return;\n    if (config.isLoading) return delayedLoader.enable();\n    return delayedLoader.disable();\n  }, [config.isLoading, delayElapsed.on]);\n\n  return delayedLoader;\n}\n","import { useEffect } from \"react\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport {\n  useToggle,\n  UseToggleConfigType,\n  UseToggleReturnType,\n} from \"./use-toggle\";\n\nexport function useDesignMode(\n  config?: UseToggleConfigType\n): UseToggleReturnType {\n  const designMode = useToggle(config);\n  const safeWindow = getSafeWindow();\n\n  useEffect(() => {\n    if (!safeWindow) return;\n\n    safeWindow.document.designMode = designMode.on ? \"on\" : \"off\";\n  }, [designMode.on]);\n\n  return designMode;\n}\n","import { useLayoutEffect } from \"react\";\n\nexport function useDisablePullToRefresh(condition = true): void {\n  useLayoutEffect(() => {\n    if (!condition) return;\n\n    const html = document.querySelector(\"html\") as HTMLElement;\n    const body = document.body;\n\n    // Get original overscroll behaviors\n    const originalHtmlOverscrollBehavior =\n      window.getComputedStyle(html).overscrollBehavior;\n    const originalBodyOverflowBehavior =\n      window.getComputedStyle(body).overscrollBehavior;\n\n    // Disable pull to refresh\n    body.style.overscrollBehavior = \"none\";\n    html.style.overscrollBehavior = \"none\";\n\n    // Enable pull to refresh when component unmounts\n    return () => {\n      body.style.overscrollBehavior = originalBodyOverflowBehavior;\n      html.style.overscrollBehavior = originalHtmlOverscrollBehavior;\n    };\n  }, [condition]);\n}\n","import React from \"react\";\n\nexport function useDocumentTitle(title: string) {\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n","import { useRef, Ref } from \"react\";\n\nimport { useKeyboardShortcuts } from \"./use-keyboard-shortcuts\";\n\nexport function useFocusKeyboardShortcut(shortcut: string): {\n  ref: Ref<HTMLInputElement>;\n} {\n  const ref = useRef<HTMLInputElement>(null);\n  useKeyboardShortcuts({ [shortcut]: () => ref.current?.focus() });\n\n  return { ref };\n}\n","import React from \"react\";\n\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type UseHoverConfigType = {\n  enabled: boolean;\n};\n\nexport type UseHoverReturnType = {\n  attach: { ref: React.RefObject<any> };\n  isHovering: UseToggleReturnType[\"on\"];\n};\n\nexport function useHover(config?: UseHoverConfigType): UseHoverReturnType {\n  const enabled = config?.enabled ?? true;\n\n  const ref = React.useRef<any>(null);\n  const isHovering = useToggle(false);\n\n  const handleMouseEnter = isHovering.enable;\n  const handleMouseLeave = isHovering.disable;\n\n  React.useEffect(() => {\n    const node = ref.current;\n\n    if (node && enabled) {\n      node.addEventListener(\"mouseenter\", handleMouseEnter);\n      node.addEventListener(\"mouseleave\", handleMouseLeave);\n    }\n\n    return () => {\n      if (node && enabled) {\n        node.removeEventListener(\"mouseenter\", handleMouseEnter);\n        node.removeEventListener(\"mouseleave\", handleMouseLeave);\n      }\n    };\n  }, []);\n\n  return { attach: { ref }, isHovering: isHovering.on && enabled };\n}\n","import * as React from \"react\";\n\nimport { useField } from \"./use-field\";\nimport { UseFileReturnType, UseFileState } from \"./use-file\";\nimport {\n  getImageResolution,\n  ImageResolutionType,\n  emptyImageResolution,\n} from \"../get-image-resolution\";\n\nexport function useImageFileResolution(\n  file: UseFileReturnType\n): ImageResolutionType {\n  const resolution = useField<ImageResolutionType>(\n    \"resolution\",\n    emptyImageResolution\n  );\n\n  React.useEffect(() => {\n    async function execute() {\n      if (file.state === UseFileState.selected) {\n        try {\n          const result = await getImageResolution(file.preview);\n\n          return resolution.set(result);\n        } catch (error) {\n          return resolution.clear();\n        }\n      }\n\n      if (\n        [UseFileState.error, UseFileState.idle].includes(file.state) &&\n        resolution.value.width !== null &&\n        resolution.value.height !== null\n      ) {\n        resolution.clear();\n      }\n    }\n\n    execute();\n  }, [file.state, file.data?.name]);\n\n  return resolution.value;\n}\n","import type { LanguageType } from \"@bgord/node/dist/schema\";\nimport Cookies from \"js-cookie\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport { useLanguage } from \"../translations\";\nimport { useClientFilter, UseClientFilterReturnType } from \"./use-client-filter\";\n\nexport function useLanguageSelector(\n  supportedLanguages: Record<LanguageType, LanguageType>\n): UseClientFilterReturnType<LanguageType> {\n  const language = useLanguage();\n\n  return useClientFilter({\n    enum: supportedLanguages,\n    currentQuery: language,\n    name: \"language\",\n    onUpdate: (current, previous) => {\n      const safeWindow = getSafeWindow();\n\n      if (!safeWindow) return;\n\n      if (!current || !previous || previous === current) return;\n\n      Cookies.set(\"accept-language\", current);\n      safeWindow.document.location.reload();\n    },\n  });\n}\n","import React from \"react\";\n\nexport type UseLeavingPromptConditionType = boolean;\n\nexport function useLeavingPrompt(\n  condition: UseLeavingPromptConditionType = false\n): void {\n  React.useEffect(() => {\n    if (!condition) return;\n\n    function handler(e: BeforeUnloadEvent) {\n      e.preventDefault();\n    }\n\n    window.addEventListener(\"beforeunload\", handler);\n\n    return () => window.removeEventListener(\"beforeunload\", handler);\n  }, [condition]);\n}\n","import React from \"react\";\n\nexport function useMetaEnterSubmit() {\n  const handleMetaEnterSubmit = (\n    event: React.KeyboardEvent<HTMLTextAreaElement>\n  ) => {\n    if (event.key !== \"Enter\" || !event.metaKey) return;\n\n    event.currentTarget.form?.dispatchEvent(\n      new Event(\"submit\", { cancelable: true })\n    );\n  };\n\n  return { onKeyDown: handleMetaEnterSubmit };\n}\n","import { useField } from \"./use-field\";\nimport { PagedMetaType, PageType } from \"../pagination\";\n\ntype UsePaginationControlType = {\n  active: boolean;\n  disabled: boolean;\n  exists: boolean;\n  go: VoidFunction;\n  value: PageType | undefined;\n};\n\ntype UsePaginationReturnType = {\n  current: PageType;\n  last: PageType;\n\n  controls: {\n    firstPage: UsePaginationControlType;\n    previousPage: UsePaginationControlType;\n    nextPage: UsePaginationControlType;\n    lastPage: UsePaginationControlType;\n  };\n\n  update: (updated: PagedMetaType | null) => void;\n};\n\nexport function usePagination(): UsePaginationReturnType {\n  const meta = useField<PagedMetaType | null>(\"meta\", null);\n\n  const firstPage = 1;\n  const previousPage = meta.value?.previousPage;\n  const nextPage = meta.value?.nextPage;\n  const lastPage = meta.value?.lastPage || firstPage;\n\n  const page = useField(\"page\", firstPage);\n\n  return {\n    current: page.value,\n    last: lastPage,\n\n    controls: {\n      firstPage: {\n        active: !previousPage,\n        disabled: false,\n        exists: true,\n        go: () => page.set(firstPage),\n        value: firstPage,\n      },\n\n      previousPage: {\n        active: false,\n        disabled: !previousPage,\n        exists: Boolean(previousPage),\n        go: () => page.set(previousPage ?? page.value),\n        value: previousPage,\n      },\n\n      nextPage: {\n        active: false,\n        disabled: !nextPage,\n        exists: Boolean(nextPage),\n        go: () => page.set(nextPage ?? page.value),\n        value: nextPage,\n      },\n\n      lastPage: {\n        active: page.value === lastPage,\n        disabled: !nextPage,\n        exists: true,\n        go: () => page.set(lastPage ?? page.value),\n        value: lastPage,\n      },\n    },\n\n    update: (updated) => meta.set(updated),\n  };\n}\n","import * as React from \"react\";\n\nimport {\n  useToggle,\n  UseToggleReturnType,\n  UseToggleValueType,\n} from \"./use-toggle\";\nimport {\n  SafeLocalStorage,\n  SafeLocalStorageKeyType,\n} from \"../safe-local-storage\";\n\nexport type UsePersistentToggleReturnType = UseToggleReturnType & {\n  clear: VoidFunction;\n};\n\nexport function usePersistentToggle(\n  key: SafeLocalStorageKeyType,\n  defaultValue: UseToggleValueType = false\n): UsePersistentToggleReturnType {\n  const storedValue = SafeLocalStorage.get<UseToggleValueType>(\n    key,\n    defaultValue\n  );\n\n  const toggle = useToggle(storedValue);\n\n  React.useEffect(() => SafeLocalStorage.set(key, toggle.on), [key, toggle.on]);\n\n  return { ...toggle, clear: () => SafeLocalStorage.clear(key) };\n}\n","import { useRef } from \"react\";\n\nimport {\n  RateLimiterOptionsType,\n  RateLimiterResultErrorType,\n  RateLimiter,\n} from \"../rate-limiter\";\n\nexport type UseRateLimiterActionType<T> = (...args: T[]) => void;\n\nexport type UseRateLimiterOptionsType<T> = RateLimiterOptionsType & {\n  action: UseRateLimiterActionType<T>;\n  fallback?: (remainingMs: RateLimiterResultErrorType[\"remainingMs\"]) => void;\n};\n\nexport type UseRateLimiterReturnType<T> = UseRateLimiterActionType<T>;\n\nexport function useRateLimiter<T>(\n  options: UseRateLimiterOptionsType<T>\n): UseRateLimiterReturnType<T> {\n  const rateLimiter = useRef<RateLimiter>(new RateLimiter(options));\n\n  return function executor(...args: T[]) {\n    const currentTimestamp = Date.now();\n    const result = rateLimiter.current.verify(currentTimestamp);\n\n    if (result.allowed) {\n      return options.action(...args);\n    }\n\n    return options.fallback?.(result.remainingMs);\n  };\n}\n","import React from \"react\";\n\ntype ReorderingBaseItemType = { id: string };\ntype ReorderingIndexType = number;\ntype ReorderingCorrelationIdType = string;\n\nexport type ReorderingTransferType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType\n> = {\n  correlationId: ReorderingCorrelationIdType;\n  id: T[\"id\"];\n  item: T;\n  to: ReorderingIndexType;\n};\n\nexport type UseReorderingConfigType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType\n> = {\n  correlationId: ReorderingCorrelationIdType;\n  initialItems: T[];\n  callback: (transfer: ReorderingTransferType<T>) => void;\n  enabled?: boolean;\n};\n\nexport type UseReorderingReturnType<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType\n> = {\n  items: T[];\n  enabled: boolean;\n  props: {\n    item: (index: ReorderingIndexType) => {\n      onDragOver: (event: React.DragEvent<HTMLElement>) => void;\n    };\n    handle: (index: ReorderingIndexType) => {\n      onDragStart: (event: React.DragEvent<HTMLElement>) => void;\n      onDragEnd: (event: React.DragEvent<HTMLElement>) => void;\n      draggable: UseReorderingConfigType<T>[\"enabled\"];\n    };\n  };\n};\n\nexport function useReordering<\n  T extends ReorderingBaseItemType = ReorderingBaseItemType\n>(config: UseReorderingConfigType<T>): UseReorderingReturnType<T> {\n  const enabled = config.enabled ?? true;\n\n  const [items, setItems] = React.useState<T[]>(config.initialItems);\n  React.useEffect(\n    () => setItems(config.initialItems),\n    [JSON.stringify(config.initialItems)]\n  );\n\n  const draggedItem = React.useRef<T | null>(null);\n\n  const [startIndex, setStartIndex] =\n    React.useState<ReorderingIndexType | null>(null);\n  const [toIndex, setToIndex] = React.useState<ReorderingIndexType | null>(\n    null\n  );\n\n  function onDragStartFactory(index: ReorderingIndexType) {\n    return function onDragStart(event: React.DragEvent<HTMLElement>) {\n      setStartIndex(index);\n      draggedItem.current = items[index] ?? null;\n\n      if (!event?.dataTransfer || event.currentTarget.parentNode) return;\n\n      event.dataTransfer.effectAllowed = \"move\";\n      event.dataTransfer.setData(\n        \"text/html\",\n        event.currentTarget.parentNode as unknown as string\n      );\n      event.dataTransfer.setDragImage(\n        event.currentTarget.parentNode as unknown as Element,\n        20,\n        20\n      );\n    };\n  }\n\n  function onDragOverFactory(index: ReorderingIndexType) {\n    return function onDragOver(event: React.DragEvent<HTMLElement>) {\n      event.preventDefault();\n\n      const draggedOverItem = items[index];\n      setToIndex(index);\n\n      // if the item is dragged over itself, ignore\n      if (draggedItem.current === draggedOverItem || !draggedItem.current) {\n        return;\n      }\n\n      // filter out the currently dragged item\n      // add the dragged item after the dragged over item\n      setItems(\n        items\n          .filter((item) => item !== draggedItem.current)\n          .toSpliced(index, 0, draggedItem.current)\n      );\n    };\n  }\n\n  function onDragEndFactory(index: ReorderingIndexType) {\n    return function onDragEnd(_event: React.DragEvent<HTMLElement>) {\n      if (startIndex !== null && toIndex !== null && startIndex !== toIndex) {\n        config.callback({\n          correlationId: config.correlationId,\n          id: items[index]?.id as T[\"id\"],\n          item: items[index] as T,\n          to: toIndex as ReorderingIndexType,\n        });\n      }\n\n      setStartIndex(null);\n      draggedItem.current = null;\n      setToIndex(null);\n    };\n  }\n\n  const cursor = enabled ? (draggedItem.current ? \"grabbing\" : \"grab\") : \"auto\";\n\n  return {\n    items,\n    enabled,\n    props: {\n      item: (index: ReorderingIndexType) => ({\n        onDragOver: onDragOverFactory(index),\n      }),\n      handle: (index: ReorderingIndexType) => ({\n        onDragStart: onDragStartFactory(index),\n        onDragEnd: onDragEndFactory(index),\n        draggable: enabled,\n        style: { cursor },\n      }),\n    },\n  };\n}\n","import React from \"react\";\n\nimport { getSafeWindow } from \"../safe-window\";\nimport { useToggle, UseToggleReturnType } from \"./use-toggle\";\n\nexport type ScrollPositionType = number;\n\nexport type UseScrollReturnType = {\n  actions: { goToTop: VoidFunction };\n  position: {\n    value: ScrollPositionType;\n    isInitial: boolean;\n    hasChanged: boolean;\n  };\n  visible: UseToggleReturnType[\"on\"];\n  hidden: UseToggleReturnType[\"off\"];\n};\n\nexport function useScroll(): UseScrollReturnType {\n  const safeWindow = getSafeWindow();\n\n  // Scroll position always set at the top of the page\n  const defaultScrollPosition = 0;\n  const [scrollPosition, setScrollPosition] =\n    React.useState<ScrollPositionType>(defaultScrollPosition);\n\n  // Assuming scrollbar is hidden by default\n  const scrollbarVisibility = useToggle(false);\n\n  function goToTop() {\n    if (!safeWindow) return;\n    safeWindow.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  }\n\n  React.useLayoutEffect(() => {\n    function measure() {\n      if (!safeWindow) return;\n\n      setScrollPosition(safeWindow?.scrollY);\n\n      // Checking if the viewport (clientHeight) can fully contain\n      // full content height (scrollHeight)\n      if (\n        safeWindow.document.body.clientHeight <\n        safeWindow.document.body.scrollHeight\n      ) {\n        scrollbarVisibility.enable();\n      } else {\n        scrollbarVisibility.disable();\n      }\n    }\n\n    safeWindow?.addEventListener(\"scroll\", measure);\n\n    return () => safeWindow?.removeEventListener(\"scroll\", measure);\n  }, []);\n\n  return {\n    actions: { goToTop },\n    position: {\n      value: scrollPosition,\n      isInitial: scrollPosition === 0,\n      hasChanged: scrollPosition > 0,\n    },\n    visible: scrollbarVisibility.on,\n    hidden: scrollbarVisibility.off,\n  };\n}\n","export type SoundSourceType = string;\n\nexport type UseSoundReturnType = { play: VoidFunction };\n\nexport function useSound(src: SoundSourceType): UseSoundReturnType {\n  const audio = new Audio(src);\n\n  return { play: audio.play.bind(audio) };\n}\n","import {\n  useClientFilter,\n  UseClientFilterConfigType,\n  UseClientFilterReturnType,\n} from \"./use-client-filter\";\nimport { getSafeWindow } from \"../safe-window\";\n\nexport type UseUrlFilterConfigType<T> = UseClientFilterConfigType<T>;\n\nexport function useUrlFilter<T>(\n  config: UseUrlFilterConfigType<T>\n): UseClientFilterReturnType<T> {\n  const safeWindow = getSafeWindow();\n\n  const currentQuery =\n    new URLSearchParams(safeWindow?.location.search).get(config.name) ??\n    undefined;\n\n  return useClientFilter({\n    onUpdate: (current, previous) => {\n      if (!safeWindow) return;\n\n      const url = new URL(safeWindow.location.toString());\n      const params = new URLSearchParams(url.search);\n\n      if (current === undefined) {\n        params.delete(config.name);\n      } else {\n        params.set(config.name, current);\n      }\n\n      if (current === previous) return;\n\n      if (current !== previous) {\n        url.search = params.toString();\n        history.pushState({}, \"\", url.toString());\n      }\n    },\n    ...config,\n    defaultQuery: config.defaultQuery,\n    currentQuery: currentQuery,\n  });\n}\n"],"names":["usePreviousValue","value","defaultValue","previousValue","useRef","useEffect","current","AnimaState","ServerError","config","message","_known","this","isServerError","Object","hasOwnProperty","extract","response","ok","Promise","resolve","json","then","error","e","reject","handle","payload","DurationFormatter","format","duration","minutes","Math","floor","seconds","String","padStart","useField","name","evaluatedDefaultValue","_useState","useState","setValue","set","handleChange","event","currentTarget","clear","label","props","htmlFor","input","id","changed","unchanged","extractUseField","field","rest","_objectWithoutPropertiesLoose","_excluded","UseAudioState","Fields","allUnchanged","fields","every","anyUnchanged","some","anyChanged","clearAll","forEach","useAutofocus","React","condition","_config$ref$current","ref","focus","getSafeWindow","window","useWindowDimensions","width","undefined","height","windowSize","setWindowSize","safeWindow","addEventListener","handleResize","removeEventListener","innerWidth","innerHeight","useClickOutside","onClickOutside","exclude","document","handleClickOutside","_ref$current","contains","target","node","_node$current","noop","useClientFilter","defaultQuery","_config$defaultQuery","currentQuery","_config$currentQuery","filterFn","_config$filterFn","query","options","keys","onUpdate","_config$onUpdate","setQuery","previousQuery","onChange","newQuery","isNewQueryInEnum","Boolean","defaultSortFn","Days","hours","ms","Hours","Minutes","Seconds","Time","getCurrentTimestamp","Date","now","UseExpandableListState","UseFileState","useToggle","on","setIsOn","off","enable","disable","toggle","v","controller","extractUseToggle","_props","useKeyboardShortcuts","enabled","_options$enabled","unsubscribeShortcuts","tinykeys","getImageResolution","path","emptyImageResolution","img","createElement","promise","onload","onerror","src","useIsOnline","onlineStatus","navigator","onLine","handleOnline","handleOffline","defaultUseIsVisibleConfig","threshold","root","rootMargin","isIntersectionObserverSupported","IntersectionObserverEntry","prototype","defaultComparisonFn","a","b","KeyNameEnum","PluralizationSupportedLanguages","defaultItem","pluralize","language","en","_options$plural","plural","singular","pl","_options$value","polishPlurals","genitive","console","warn","TranslationsContext","createContext","translations","useLanguage","useContext","Error","useList","defaultItems","_config$defaultItems","comparisonFn","_config$comparisonFn","items","setItems","add","Array","isArray","concat","remove","item","filter","x","isAdded","update","UseVideoState","SafeLocalStorage","get","key","fallbackValue","Storage","RateLimiter","lastInvocationTimestamp","verify","currentTimestamp","allowed","nextAllowedTimestamp","limitMs","remainingMs","useScrollLock","html","querySelector","originalHtmlOverflow","getComputedStyle","overflow","style","exec","list","DevTools","Dimensions","dimensions","Truncates","length","_React$useState","Map","cache","setCache","className","type","valueAsNumber","onClick","elements","querySelectorAll","updatedCache","element","originalText","textContent","has","repeat","defaultOnCopyToClipboardFailure","DateFormatter","datetime","date","toLocaleString","monthDay","timestamp","_padDatePart","getDate","getMonth","form","getFullYear","clockUTC","getUTCHours","getUTCMinutes","getUTCSeconds","clockLocal","getHours","getMinutes","getSeconds","countdown","formDatetimeLocal","localTimestamp","getTimezoneOffset","toISOString","slice","HourFormatter","convertUtcToLocal","utcHour","timeZoneOffsetInMins","localHour","ETag","fromRevision","revision","WeakETag","FeatureFlagsContext","FilterUrl","url","filters","nonEmptyFilters","getNonEmptyFilters","URLSearchParams","toString","fromEntries","entries","_ref","Form","pattern","required","_config$required","min","max","Approximation","decimalPlaces","parseFloat","toFixed","MinMaxScaler","lower","upper","_config$bound$lower","_config$bound","bound","_config$bound$upper","_config$bound2","_proto","scale","original","scaled","isMin","isMax","descale","isLowerBound","isUpperBound","getMinMax","values","apply","Pagination","infinite","_infinite$data$pages$","_infinite$data","data","_infinite$data$pages","pages","flat","map","result","px","number","empty","meta","exhausted","Sorts","updatedAtMostRecent","descending","updatedAt","raw","updatedAtLeastRecent","ascending","createdAtMostRecent","createdAt","createdAtLeastRecent","aToZ","localeCompare","zToA","ThousandsSeparator","separator","DEFAULT_SEPARATOR","replace","ToastsContext","useToastsContext","context","init","fetch","_extends","mode","redirect","headers","_props$duration","visible","isInitial","appeared","appearing","hidden","state","setState","previousState","setTimeout","hiding","cloneElement","children","effect","_React$useState2","setIsInitial","child","_hooks$extractUseTogg","hooks","dialog","_ref$current2","showModal","close","Escape","tabIndex","Provider","lines","as","rel","base","times","minHeight","maxHeight","minWidth","maxWidth","square","_extractUseField","Fragment","checked","timeout","_useList","actions","_useToastsImplementat","_props$timeout","toReversed","toast","onFailure","_options$onFailure","onSuccess","_options$onSuccess","clipboard","_temp2","writeText","text","_catch","_step","direction","_config$direction","_React$useState3","officialList","setOfficialList","added","_loop","push","_iterator","_createForOfIteratorHelperLoose","done","_step2","deleted","_loop2","_iterator2","updated","find","y","count","initial","currentTime","volume","muted","percentage","round","seek","changeVolume","audio","onTimeUpdate","onLoadedMetadata","ready","onEnded","paused","controls","player","step","onInput","play","playing","pause","mute","unmute","reset","isReady","isPlaying","isPaused","matches","states","given","formatted","breakpoint","_dimensions$width","toLowerCase","includes","sortFn","_config$options$state","newSort","isNewSortInEnum","setTimestamp","timer","setInterval","clearInterval","debouncedValue","setDebouncedValue","delayMs","clearTimeout","timeoutId","delayedLoader","delayElapsed","isLoading","designMode","useLayoutEffect","body","originalHtmlOverscrollBehavior","overscrollBehavior","originalBodyOverflowBehavior","title","numberOfExcessiveElements","areThereExcessiveElements","getState","contracted","expanded","displayShowMore","displayShowLess","showMore","showLess","_element","index","maxSize","_config$maxSize","Infinity","setKey","_useState2","idle","_useState3","file","setFile","selectFile","files","size","selected","clearFile","preview","useMemo","URL","createObjectURL","isIdle","isSelected","isError","multiple","shortcut","_useKeyboardShortcuts","_config$enabled","isHovering","handleMouseEnter","handleMouseLeave","attach","resolution","_exit2","_temp4","_resolution$set","_resolution$clear","_temp3","execute","_file$data","isVisible","setVisible","observer","IntersectionObserver","entry","_entry$","isIntersecting","observe","unobserve","_config$defaultItem","setItem","newer","isDefault","exists","compare","executor","supportedLanguages","enum","previous","Cookies","location","reload","handler","preventDefault","onKeyDown","metaKey","_event$currentTarget$","dispatchEvent","Event","cancelable","previousPage","_meta$value","nextPage","_meta$value2","lastPage","_meta$value3","page","last","firstPage","active","disabled","go","rateLimiter","action","call","arguments","fallback","initialItems","JSON","stringify","draggedItem","startIndex","setStartIndex","toIndex","setToIndex","onDragStartFactory","_items$index","dataTransfer","parentNode","effectAllowed","setData","setDragImage","onDragOverFactory","draggedOverItem","toSpliced","onDragEndFactory","_event","_items$index2","callback","correlationId","to","cursor","onDragOver","onDragStart","onDragEnd","draggable","scrollPosition","setScrollPosition","scrollbarVisibility","measure","scrollY","clientHeight","scrollHeight","goToTop","scrollTo","top","left","behavior","position","hasChanged","Audio","bind","variables","translation","reduce","_URLSearchParams$get","search","params","history","pushState","video","triggerFullscreen","requestFullscreen"],"mappings":"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"}